   1              		.file	"main.c"
   2              		.section	.rodata.str1.1,"aMS",@progbits,1
   3              	.LC0:
   4 0000 646F5772 		.string	"doWrite()"
   4      69746528 
   4      2900
   5              		.section	.text.unlikely,"ax",@progbits
   6              	.LCOLDB1:
   7              	.LHOTB1:
   9              	doWrite:
  10              	.LFB66:
  11              		.cfi_startproc
  12 0000 4157     		pushq	%r15
  13              		.cfi_def_cfa_offset 16
  14              		.cfi_offset 15, -16
  15 0002 4156     		pushq	%r14
  16              		.cfi_def_cfa_offset 24
  17              		.cfi_offset 14, -24
  18 0004 4D89C7   		movq	%r8, %r15
  19 0007 4155     		pushq	%r13
  20              		.cfi_def_cfa_offset 32
  21              		.cfi_offset 13, -32
  22 0009 4154     		pushq	%r12
  23              		.cfi_def_cfa_offset 40
  24              		.cfi_offset 12, -40
  25 000b 4989FD   		movq	%rdi, %r13
  26 000e 55       		pushq	%rbp
  27              		.cfi_def_cfa_offset 48
  28              		.cfi_offset 6, -48
  29 000f 53       		pushq	%rbx
  30              		.cfi_def_cfa_offset 56
  31              		.cfi_offset 3, -56
  32 0010 4989CE   		movq	%rcx, %r14
  33 0013 4D89CC   		movq	%r9, %r12
  34 0016 31DB     		xorl	%ebx, %ebx
  35 0018 31ED     		xorl	%ebp, %ebp
  36 001a 4881EC38 		subq	$65592, %rsp
  36      000100
  37              		.cfi_def_cfa_offset 65648
  38 0021 64488B04 		movq	%fs:40, %rax
  38      25280000 
  38      00
  39 002a 48898424 		movq	%rax, 65576(%rsp)
  39      28000100 
  40 0032 31C0     		xorl	%eax, %eax
  41 0034 400FB6C6 		movzbl	%sil, %eax
  42 0038 48895424 		movq	%rdx, 8(%rsp)
  42      08
  43 003d 89442414 		movl	%eax, 20(%rsp)
  44              	.L7:
  45 0041 488B4C24 		movq	8(%rsp), %rcx
  45      08
  46 0046 488D7C24 		leaq	32(%rsp), %rdi
  46      20
  47 004b BAFBFF00 		movl	$65531, %edx
  47      00
  48 0050 BE010000 		movl	$1, %esi
  48      00
  49 0055 E8000000 		call	fread
  49      00
  50 005a 4885C0   		testq	%rax, %rax
  51 005d 7460     		je	.L2
  52 005f 8B742414 		movl	20(%rsp), %esi
  53 0063 488D4C24 		leaq	32(%rsp), %rcx
  53      20
  54 0068 4D89E0   		movq	%r12, %r8
  55 006b 4889C2   		movq	%rax, %rdx
  56 006e 4C89EF   		movq	%r13, %rdi
  57 0071 4801C3   		addq	%rax, %rbx
  58 0074 48894424 		movq	%rax, 24(%rsp)
  58      18
  59 0079 E8000000 		call	flWriteChannelAsync
  59      00
  60 007e 85C0     		testl	%eax, %eax
  61 0080 7510     		jne	.L3
  62 0082 4C8B4C24 		movq	24(%rsp), %r9
  62      18
  63 0087 488D4424 		leaq	32(%rsp), %rax
  63      20
  64 008c 4A8D1408 		leaq	(%rax,%r9), %rdx
  65 0090 EB14     		jmp	.L4
  66              	.L3:
  67 0092 BE000000 		movl	$.LC0, %esi
  67      00
  68 0097 4C89E7   		movq	%r12, %rdi
  69 009a E8000000 		call	errPrefix
  69      00
  70 009f B8010000 		movl	$1, %eax
  70      00
  71 00a4 EB2F     		jmp	.L5
  72              	.L4:
  73 00a6 4839D0   		cmpq	%rdx, %rax
  74 00a9 740B     		je	.L16
  75 00ab 48FFC0   		incq	%rax
  76 00ae 0FB648FF 		movzbl	-1(%rax), %ecx
  77 00b2 01CD     		addl	%ecx, %ebp
  78 00b4 EBF0     		jmp	.L4
  79              	.L16:
  80 00b6 4981F9FB 		cmpq	$65531, %r9
  80      FF0000
  81 00bd 7482     		je	.L7
  82              	.L2:
  83 00bf 4C89E6   		movq	%r12, %rsi
  84 00c2 4C89EF   		movq	%r13, %rdi
  85 00c5 E8000000 		call	flAwaitAsyncWrites
  85      00
  86 00ca 85C0     		testl	%eax, %eax
  87 00cc 75C4     		jne	.L3
  88 00ce 6641892F 		movw	%bp, (%r15)
  89 00d2 49891E   		movq	%rbx, (%r14)
  90              	.L5:
  91 00d5 488B9C24 		movq	65576(%rsp), %rbx
  91      28000100 
  92 00dd 6448331C 		xorq	%fs:40, %rbx
  92      25280000 
  92      00
  93 00e6 7405     		je	.L8
  94 00e8 E8000000 		call	__stack_chk_fail
  94      00
  95              	.L8:
  96 00ed 4881C438 		addq	$65592, %rsp
  96      000100
  97              		.cfi_def_cfa_offset 56
  98 00f4 5B       		popq	%rbx
  99              		.cfi_def_cfa_offset 48
 100 00f5 5D       		popq	%rbp
 101              		.cfi_def_cfa_offset 40
 102 00f6 415C     		popq	%r12
 103              		.cfi_def_cfa_offset 32
 104 00f8 415D     		popq	%r13
 105              		.cfi_def_cfa_offset 24
 106 00fa 415E     		popq	%r14
 107              		.cfi_def_cfa_offset 16
 108 00fc 415F     		popq	%r15
 109              		.cfi_def_cfa_offset 8
 110 00fe C3       		ret
 111              		.cfi_endproc
 112              	.LFE66:
 114              	.LCOLDE1:
 115              	.LHOTE1:
 116              		.section	.rodata.str1.1
 117              	.LC2:
 118 000a 776200   		.string	"wb"
 119              	.LC3:
 120 000d 646F5265 		.string	"doRead()"
 120      61642829 
 120      00
 121              		.section	.rodata.str1.8,"aMS",@progbits,1
 122              		.align 8
 123              	.LC6:
 124 0000 52656164 		.string	"Read %d bytes (checksum 0x%04X) from channel %d at %f MiB/s\n"
 124      20256420 
 124      62797465 
 124      73202863 
 124      6865636B 
 125              		.section	.rodata.str1.1
 126              	.LC7:
 127 0016 726200   		.string	"rb"
 128              		.section	.rodata.str1.8
 129 003d 000000   		.align 8
 130              	.LC8:
 131 0040 57726F74 		.string	"Wrote %zu bytes (checksum 0x%04X) to channel %lu at %f MiB/s\n"
 131      6520257A 
 131      75206279 
 131      74657320 
 131      28636865 
 132              		.section	.rodata.str1.1
 133              	.LC9:
 134 0019 20616674 		.string	" after dump \n "
 134      65722064 
 134      756D7020 
 134      0A2000
 135              	.LC10:
 136 0028 25732061 		.string	"%s at column %d\n  %s\n  "
 136      7420636F 
 136      6C756D6E 
 136      2025640A 
 136      20202573 
 137              	.LC11:
 138 0040 2000     		.string	" "
 139              	.LC12:
 140 0042 5E0A00   		.string	"^\n"
 141              		.section	.text.unlikely
 142              	.LCOLDB13:
 143              	.LHOTB13:
 145              	parseLine:
 146              	.LFB67:
 147              		.cfi_startproc
 148 00ff 4157     		pushq	%r15
 149              		.cfi_def_cfa_offset 16
 150              		.cfi_offset 15, -16
 151 0101 4156     		pushq	%r14
 152              		.cfi_def_cfa_offset 24
 153              		.cfi_offset 14, -24
 154 0103 B9080000 		movl	$8, %ecx
 154      00
 155 0108 4155     		pushq	%r13
 156              		.cfi_def_cfa_offset 32
 157              		.cfi_offset 13, -32
 158 010a 4154     		pushq	%r12
 159              		.cfi_def_cfa_offset 40
 160              		.cfi_offset 12, -40
 161 010c 55       		pushq	%rbp
 162              		.cfi_def_cfa_offset 48
 163              		.cfi_offset 6, -48
 164 010d 53       		pushq	%rbx
 165              		.cfi_def_cfa_offset 56
 166              		.cfi_offset 3, -56
 167 010e 4889D3   		movq	%rdx, %rbx
 168 0111 4881EC98 		subq	$152, %rsp
 168      000000
 169              		.cfi_def_cfa_offset 208
 170 0118 64488B04 		movq	%fs:40, %rax
 170      25280000 
 170      00
 171 0121 48898424 		movq	%rax, 136(%rsp)
 171      88000000 
 172 0129 31C0     		xorl	%eax, %eax
 173 012b 48893C24 		movq	%rdi, (%rsp)
 174 012f 488D7C24 		leaq	96(%rsp), %rdi
 174      60
 175 0134 48897424 		movq	%rsi, 16(%rsp)
 175      10
 176 0139 BE000400 		movl	$1024, %esi
 176      00
 177 013e F3AB     		rep stosl
 178 0140 488D7C24 		leaq	96(%rsp), %rdi
 178      60
 179 0145 4889D1   		movq	%rdx, %rcx
 180 0148 31D2     		xorl	%edx, %edx
 181 014a E8000000 		call	bufInitialise
 181      00
 182 014f 85C0     		testl	%eax, %eax
 183 0151 0F85C708 		jne	.L97
 183      0000
 184 0157 488B4424 		movq	16(%rsp), %rax
 184      10
 185 015c 48890500 		movq	%rax, ptr(%rip)
 185      000000
 186              	.L19:
 187 0163 488B3D00 		movq	ptr(%rip), %rdi
 187      000000
 188 016a 8A07     		movb	(%rdi), %al
 189 016c 3C3B     		cmpb	$59, %al
 190 016e 750C     		jne	.L158
 191 0170 48FFC7   		incq	%rdi
 192 0173 48893D00 		movq	%rdi, ptr(%rip)
 192      000000
 193 017a EBE7     		jmp	.L19
 194              	.L158:
 195 017c 3C72     		cmpb	$114, %al
 196 017e 7415     		je	.L21
 197 0180 3C77     		cmpb	$119, %al
 198 0182 0F847D03 		je	.L22
 198      0000
 199 0188 3C2B     		cmpb	$43, %al
 200 018a 0F859F08 		jne	.L118
 200      0000
 201 0190 E9620700 		jmp	.L159
 201      00
 202              	.L21:
 203 0195 488D6F01 		leaq	1(%rdi), %rbp
 204 0199 48892D00 		movq	%rbp, ptr(%rip)
 204      000000
 205 01a0 E8000000 		call	__errno_location
 205      00
 206 01a5 488D7424 		leaq	48(%rsp), %rsi
 206      30
 207 01aa 4989C7   		movq	%rax, %r15
 208 01ad C7000000 		movl	$0, (%rax)
 208      0000
 209 01b3 BA100000 		movl	$16, %edx
 209      00
 210 01b8 4889EF   		movq	%rbp, %rdi
 211 01bb E8000000 		call	strtoul
 211      00
 212 01c0 41833F00 		cmpl	$0, (%r15)
 213 01c4 4989C6   		movq	%rax, %r14
 214 01c7 7411     		je	.L24
 215              	.L28:
 216 01c9 4531ED   		xorl	%r13d, %r13d
 217 01cc 4531FF   		xorl	%r15d, %r15d
 218 01cf 41BE0200 		movl	$2, %r14d
 218      0000
 219 01d5 E9370500 		jmp	.L63
 219      00
 220              	.L24:
 221 01da 83F87F   		cmpl	$127, %eax
 222 01dd 0F870603 		ja	.L99
 222      0000
 223 01e3 488B7C24 		movq	48(%rsp), %rdi
 223      30
 224 01e8 8A07     		movb	(%rdi), %al
 225 01ea 48893D00 		movq	%rdi, ptr(%rip)
 225      000000
 226 01f1 A8DF     		testb	$-33, %al
 227 01f3 7415     		je	.L26
 228 01f5 3C3B     		cmpb	$59, %al
 229 01f7 7411     		je	.L26
 230              	.L29:
 231 01f9 4531ED   		xorl	%r13d, %r13d
 232 01fc 4531FF   		xorl	%r15d, %r15d
 233 01ff 41BE0500 		movl	$5, %r14d
 233      0000
 234 0205 E9070500 		jmp	.L63
 234      00
 235              	.L26:
 236 020a 3C20     		cmpb	$32, %al
 237 020c 41BD0100 		movl	$1, %r13d
 237      0000
 238 0212 0F85E308 		jne	.L27
 238      0000
 239 0218 488D7424 		leaq	48(%rsp), %rsi
 239      30
 240 021d 48FFC7   		incq	%rdi
 241 0220 41C70700 		movl	$0, (%r15)
 241      000000
 242 0227 BA100000 		movl	$16, %edx
 242      00
 243 022c 48893D00 		movq	%rdi, ptr(%rip)
 243      000000
 244 0233 E8000000 		call	strtoul
 244      00
 245 0238 41833F00 		cmpl	$0, (%r15)
 246 023c 4989C4   		movq	%rax, %r12
 247 023f 4189C5   		movl	%eax, %r13d
 248 0242 7585     		jne	.L28
 249 0244 488B7424 		movq	48(%rsp), %rsi
 249      30
 250 0249 8A06     		movb	(%rsi), %al
 251 024b 48893500 		movq	%rsi, ptr(%rip)
 251      000000
 252 0252 A8DF     		testb	$-33, %al
 253 0254 7404     		je	.L119
 254 0256 3C3B     		cmpb	$59, %al
 255 0258 759F     		jne	.L29
 256              	.L119:
 257 025a 3C20     		cmpb	$32, %al
 258 025c 0F859908 		jne	.L27
 258      0000
 259 0262 488D4601 		leaq	1(%rsi), %rax
 260 0266 48890500 		movq	%rax, ptr(%rip)
 260      000000
 261 026d 8A4601   		movb	1(%rsi), %al
 262 0270 3C22     		cmpb	$34, %al
 263 0272 7404     		je	.L120
 264 0274 3C27     		cmpb	$39, %al
 265 0276 7581     		jne	.L29
 266              	.L120:
 267 0278 4C8D6E02 		leaq	2(%rsi), %r13
 268 027c 4C892D00 		movq	%r13, ptr(%rip)
 268      000000
 269 0283 4C89ED   		movq	%r13, %rbp
 270              	.L32:
 271 0286 8A5500   		movb	0(%rbp), %dl
 272 0289 38D0     		cmpb	%dl, %al
 273 028b 740D     		je	.L33
 274 028d 84D2     		testb	%dl, %dl
 275 028f 0F844A04 		je	.L108
 275      0000
 276 0295 48FFC5   		incq	%rbp
 277 0298 EBEC     		jmp	.L32
 278              	.L33:
 279 029a 84C0     		testb	%al, %al
 280 029c 0F843D04 		je	.L108
 280      0000
 281 02a2 4889E8   		movq	%rbp, %rax
 282 02a5 4C29E8   		subq	%r13, %rax
 283 02a8 488D7801 		leaq	1(%rax), %rdi
 284 02ac 48894424 		movq	%rax, 8(%rsp)
 284      08
 285 02b1 E8000000 		call	malloc
 285      00
 286 02b6 4885C0   		testq	%rax, %rax
 287 02b9 4989C7   		movq	%rax, %r15
 288 02bc 0F842B04 		je	.L109
 288      0000
 289 02c2 4C39ED   		cmpq	%r13, %rbp
 290 02c5 0F842D04 		je	.L110
 290      0000
 291 02cb 488B5424 		movq	8(%rsp), %rdx
 291      08
 292 02d0 4C89EE   		movq	%r13, %rsi
 293 02d3 4889C7   		movq	%rax, %rdi
 294 02d6 E8000000 		call	strncpy
 294      00
 295 02db 488B4424 		movq	8(%rsp), %rax
 295      08
 296 02e0 488D4D01 		leaq	1(%rbp), %rcx
 297 02e4 BE000000 		movl	$.LC2, %esi
 297      00
 298 02e9 4C89FF   		movq	%r15, %rdi
 299 02ec 48890D00 		movq	%rcx, ptr(%rip)
 299      000000
 300 02f3 41C60407 		movb	$0, (%r15,%rax)
 300      00
 301 02f8 E8000000 		call	fopen
 301      00
 302 02fd 4885C0   		testq	%rax, %rax
 303 0300 4989C5   		movq	%rax, %r13
 304 0303 0F84F101 		je	.L104
 304      0000
 305 0309 4C89FF   		movq	%r15, %rdi
 306 030c BD000001 		movl	$65536, %ebp
 306      00
 307 0311 E8000000 		call	free
 307      00
 308 0316 488D7C24 		leaq	64(%rsp), %rdi
 308      40
 309 031b 31F6     		xorl	%esi, %esi
 310 031d E8000000 		call	gettimeofday
 310      00
 311 0322 4181FC00 		cmpl	$65536, %r12d
 311      000100
 312 0329 488B3C24 		movq	(%rsp), %rdi
 313 032d 410FB6C6 		movzbl	%r14b, %eax
 314 0331 410F46EC 		cmovbe	%r12d, %ebp
 315 0335 4989D8   		movq	%rbx, %r8
 316 0338 31C9     		xorl	%ecx, %ecx
 317 033a 89EA     		movl	%ebp, %edx
 318 033c 89C6     		movl	%eax, %esi
 319 033e 89442408 		movl	%eax, 8(%rsp)
 320 0342 E8000000 		call	flReadChannelAsyncSubmit
 320      00
 321 0347 85C0     		testl	%eax, %eax
 322 0349 741A     		je	.L35
 323              	.L38:
 324 034b BE000000 		movl	$.LC3, %esi
 324      00
 325 0350 4889DF   		movq	%rbx, %rdi
 326 0353 31ED     		xorl	%ebp, %ebp
 327 0355 E8000000 		call	errPrefix
 327      00
 328 035a 41BF0100 		movl	$1, %r15d
 328      0000
 329 0360 E90C0100 		jmp	.L36
 329      00
 330              	.L35:
 331 0365 4589E7   		movl	%r12d, %r15d
 332 0368 4129EF   		subl	%ebp, %r15d
 333 036b 31ED     		xorl	%ebp, %ebp
 334              	.L37:
 335 036d 4585FF   		testl	%r15d, %r15d
 336 0370 0F84A300 		je	.L160
 336      0000
 337 0376 4181FF00 		cmpl	$65536, %r15d
 337      000100
 338 037d 41B90000 		movl	$65536, %r9d
 338      0100
 339 0383 8B742408 		movl	8(%rsp), %esi
 340 0387 488B3C24 		movq	(%rsp), %rdi
 341 038b 450F46CF 		cmovbe	%r15d, %r9d
 342 038f 4989D8   		movq	%rbx, %r8
 343 0392 31C9     		xorl	%ecx, %ecx
 344 0394 4489CA   		movl	%r9d, %edx
 345 0397 44894C24 		movl	%r9d, 28(%rsp)
 345      1C
 346 039c E8000000 		call	flReadChannelAsyncSubmit
 346      00
 347 03a1 85C0     		testl	%eax, %eax
 348 03a3 75A6     		jne	.L38
 349 03a5 448B4C24 		movl	28(%rsp), %r9d
 349      1C
 350 03aa 488D4C24 		leaq	44(%rsp), %rcx
 350      2C
 351 03af 488B3C24 		movq	(%rsp), %rdi
 352 03b3 488D7424 		leaq	56(%rsp), %rsi
 352      38
 353 03b8 4989D8   		movq	%rbx, %r8
 354 03bb 4889CA   		movq	%rcx, %rdx
 355 03be 4529CF   		subl	%r9d, %r15d
 356 03c1 E8000000 		call	flReadChannelAsyncAwait
 356      00
 357 03c6 85C0     		testl	%eax, %eax
 358 03c8 7581     		jne	.L38
 359 03ca 8B54242C 		movl	44(%rsp), %edx
 360 03ce 488B7C24 		movq	56(%rsp), %rdi
 360      38
 361 03d3 4C89E9   		movq	%r13, %rcx
 362 03d6 BE010000 		movl	$1, %esi
 362      00
 363 03db E8000000 		call	fwrite
 363      00
 364 03e0 3B44242C 		cmpl	44(%rsp), %eax
 365 03e4 89C2     		movl	%eax, %edx
 366 03e6 7417     		je	.L39
 367              	.L43:
 368 03e8 BE000000 		movl	$.LC3, %esi
 368      00
 369 03ed 4889DF   		movq	%rbx, %rdi
 370 03f0 31ED     		xorl	%ebp, %ebp
 371 03f2 E8000000 		call	errPrefix
 371      00
 372 03f7 41BF0B00 		movl	$11, %r15d
 372      0000
 373 03fd EB72     		jmp	.L36
 374              	.L39:
 375 03ff 488B4424 		movq	56(%rsp), %rax
 375      38
 376              	.L40:
 377 0404 FFCA     		decl	%edx
 378 0406 83FAFF   		cmpl	$-1, %edx
 379 0409 0F845EFF 		je	.L37
 379      FFFF
 380 040f 0FB608   		movzbl	(%rax), %ecx
 381 0412 48FFC0   		incq	%rax
 382 0415 01CD     		addl	%ecx, %ebp
 383 0417 EBEB     		jmp	.L40
 384              	.L160:
 385 0419 488D4C24 		leaq	44(%rsp), %rcx
 385      2C
 386 041e 488B3C24 		movq	(%rsp), %rdi
 387 0422 488D7424 		leaq	56(%rsp), %rsi
 387      38
 388 0427 4989D8   		movq	%rbx, %r8
 389 042a 4889CA   		movq	%rcx, %rdx
 390 042d E8000000 		call	flReadChannelAsyncAwait
 390      00
 391 0432 85C0     		testl	%eax, %eax
 392 0434 0F8511FF 		jne	.L38
 392      FFFF
 393 043a 8B54242C 		movl	44(%rsp), %edx
 394 043e 488B7C24 		movq	56(%rsp), %rdi
 394      38
 395 0443 4C89E9   		movq	%r13, %rcx
 396 0446 BE010000 		movl	$1, %esi
 396      00
 397 044b E8000000 		call	fwrite
 397      00
 398 0450 3B44242C 		cmpl	44(%rsp), %eax
 399 0454 89C2     		movl	%eax, %edx
 400 0456 7590     		jne	.L43
 401 0458 488B4424 		movq	56(%rsp), %rax
 401      38
 402              	.L44:
 403 045d FFCA     		decl	%edx
 404 045f 83FAFF   		cmpl	$-1, %edx
 405 0462 740A     		je	.L161
 406 0464 0FB608   		movzbl	(%rax), %ecx
 407 0467 48FFC0   		incq	%rax
 408 046a 01CD     		addl	%ecx, %ebp
 409 046c EBEF     		jmp	.L44
 410              	.L161:
 411 046e 4531FF   		xorl	%r15d, %r15d
 412              	.L36:
 413 0471 488D7C24 		leaq	80(%rsp), %rdi
 413      50
 414 0476 31F6     		xorl	%esi, %esi
 415 0478 E8000000 		call	gettimeofday
 415      00
 416 047d 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 416      000000
 417 0484 0F844302 		je	.L64
 417      0000
 418 048a 48694424 		imulq	$1000000, 80(%rsp), %rax
 418      5040420F 
 418      00
 419 0493 48695424 		imulq	$1000000, 64(%rsp), %rdx
 419      4040420F 
 419      00
 420 049c 0FB7CD   		movzwl	%bp, %ecx
 421 049f 4589F0   		movl	%r14d, %r8d
 422 04a2 BE000000 		movl	$.LC6, %esi
 422      00
 423 04a7 BF010000 		movl	$1, %edi
 423      00
 424 04ac 48034424 		addq	88(%rsp), %rax
 424      58
 425 04b1 48035424 		addq	72(%rsp), %rdx
 425      48
 426 04b6 4829D0   		subq	%rdx, %rax
 427 04b9 4489E2   		movl	%r12d, %edx
 428 04bc F2480F2A 		cvtsi2sdq	%rax, %xmm1
 428      C8
 429 04c1 4489E0   		movl	%r12d, %eax
 430 04c4 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 430      C0
 431 04c9 B001     		movb	$1, %al
 432 04cb F20F5E0D 		divsd	.LC4(%rip), %xmm1
 432      00000000 
 433 04d3 F20F590D 		mulsd	.LC5(%rip), %xmm1
 433      00000000 
 434 04db F20F5EC1 		divsd	%xmm1, %xmm0
 435 04df E8000000 		call	__printf_chk
 435      00
 436 04e4 E9E40100 		jmp	.L64
 436      00
 437              	.L99:
 438 04e9 4531ED   		xorl	%r13d, %r13d
 439 04ec 4531FF   		xorl	%r15d, %r15d
 440 04ef 41BE0300 		movl	$3, %r14d
 440      0000
 441 04f5 E9170200 		jmp	.L63
 441      00
 442              	.L104:
 443 04fa 41BE0B00 		movl	$11, %r14d
 443      0000
 444 0500 E90C0200 		jmp	.L63
 444      00
 445              	.L22:
 446 0505 488D6F01 		leaq	1(%rdi), %rbp
 447 0509 48C74424 		movq	$1, 48(%rsp)
 447      30010000 
 447      00
 448 0512 48892D00 		movq	%rbp, ptr(%rip)
 448      000000
 449 0519 E8000000 		call	__errno_location
 449      00
 450 051e 488D7424 		leaq	56(%rsp), %rsi
 450      38
 451 0523 4989C5   		movq	%rax, %r13
 452 0526 C7000000 		movl	$0, (%rax)
 452      0000
 453 052c BA100000 		movl	$16, %edx
 453      00
 454 0531 4889EF   		movq	%rbp, %rdi
 455 0534 E8000000 		call	strtoul
 455      00
 456 0539 41837D00 		cmpl	$0, 0(%r13)
 456      00
 457 053e 4989C4   		movq	%rax, %r12
 458 0541 0F856003 		jne	.L106
 458      0000
 459 0547 4883F87F 		cmpq	$127, %rax
 460 054b 0F876A03 		ja	.L107
 460      0000
 461 0551 488B7424 		movq	56(%rsp), %rsi
 461      38
 462 0556 803E20   		cmpb	$32, (%rsi)
 463 0559 48893500 		movq	%rsi, ptr(%rip)
 463      000000
 464 0560 0F85C904 		jne	.L118
 464      0000
 465 0566 8A4601   		movb	1(%rsi), %al
 466 0569 488D5601 		leaq	1(%rsi), %rdx
 467 056d 48891500 		movq	%rdx, ptr(%rip)
 467      000000
 468 0574 3C22     		cmpb	$34, %al
 469 0576 7408     		je	.L121
 470 0578 3C27     		cmpb	$39, %al
 471 057a 0F859901 		jne	.L58
 471      0000
 472              	.L121:
 473 0580 488D6E02 		leaq	2(%rsi), %rbp
 474 0584 66C74424 		movw	$0, 44(%rsp)
 474      2C0000
 475 058b 48892D00 		movq	%rbp, ptr(%rip)
 475      000000
 476 0592 4989EE   		movq	%rbp, %r14
 477              	.L60:
 478 0595 418A16   		movb	(%r14), %dl
 479 0598 38D0     		cmpb	%dl, %al
 480 059a 740D     		je	.L61
 481 059c 84D2     		testb	%dl, %dl
 482 059e 0F843B01 		je	.L108
 482      0000
 483 05a4 49FFC6   		incq	%r14
 484 05a7 EBEC     		jmp	.L60
 485              	.L61:
 486 05a9 84C0     		testb	%al, %al
 487 05ab 0F842E01 		je	.L108
 487      0000
 488 05b1 4D89F5   		movq	%r14, %r13
 489 05b4 4929ED   		subq	%rbp, %r13
 490 05b7 498D7D01 		leaq	1(%r13), %rdi
 491 05bb E8000000 		call	malloc
 491      00
 492 05c0 4885C0   		testq	%rax, %rax
 493 05c3 4989C7   		movq	%rax, %r15
 494 05c6 0F842101 		je	.L109
 494      0000
 495 05cc 4939EE   		cmpq	%rbp, %r14
 496 05cf 0F842301 		je	.L110
 496      0000
 497 05d5 4C89EA   		movq	%r13, %rdx
 498 05d8 4889EE   		movq	%rbp, %rsi
 499 05db 4889C7   		movq	%rax, %rdi
 500 05de E8000000 		call	strncpy
 500      00
 501 05e3 49FFC6   		incq	%r14
 502 05e6 43C6042F 		movb	$0, (%r15,%r13)
 502      00
 503 05eb BE000000 		movl	$.LC7, %esi
 503      00
 504 05f0 4C89FF   		movq	%r15, %rdi
 505 05f3 4C893500 		movq	%r14, ptr(%rip)
 505      000000
 506 05fa E8000000 		call	fopen
 506      00
 507 05ff 4885C0   		testq	%rax, %rax
 508 0602 4989C5   		movq	%rax, %r13
 509 0605 0F84F800 		je	.L111
 509      0000
 510 060b 4C89FF   		movq	%r15, %rdi
 511 060e E8000000 		call	free
 511      00
 512 0613 488D7C24 		leaq	64(%rsp), %rdi
 512      40
 513 0618 31F6     		xorl	%esi, %esi
 514 061a E8000000 		call	gettimeofday
 514      00
 515 061f 488B3C24 		movq	(%rsp), %rdi
 516 0623 4C8D4424 		leaq	44(%rsp), %r8
 516      2C
 517 0628 488D4C24 		leaq	48(%rsp), %rcx
 517      30
 518 062d 4989D9   		movq	%rbx, %r9
 519 0630 4C89EA   		movq	%r13, %rdx
 520 0633 4489E6   		movl	%r12d, %esi
 521 0636 E8C5F9FF 		call	doWrite
 521      FF
 522 063b 488D7C24 		leaq	80(%rsp), %rdi
 522      50
 523 0640 31F6     		xorl	%esi, %esi
 524 0642 4189C7   		movl	%eax, %r15d
 525 0645 E8000000 		call	gettimeofday
 525      00
 526 064a 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 526      000000
 527 0651 747A     		je	.L64
 528 0653 48694424 		imulq	$1000000, 80(%rsp), %rax
 528      5040420F 
 528      00
 529 065c 48694C24 		imulq	$1000000, 64(%rsp), %rcx
 529      4040420F 
 529      00
 530 0665 488B5424 		movq	48(%rsp), %rdx
 530      30
 531 066a 48034424 		addq	88(%rsp), %rax
 531      58
 532 066f 48034C24 		addq	72(%rsp), %rcx
 532      48
 533 0674 4829C8   		subq	%rcx, %rax
 534 0677 4885D2   		testq	%rdx, %rdx
 535 067a F2480F2A 		cvtsi2sdq	%rax, %xmm1
 535      C8
 536 067f 7807     		js	.L65
 537 0681 F2480F2A 		cvtsi2sdq	%rdx, %xmm0
 537      C2
 538 0686 EB18     		jmp	.L66
 539              	.L65:
 540 0688 4889D0   		movq	%rdx, %rax
 541 068b 4889D1   		movq	%rdx, %rcx
 542 068e 48D1E8   		shrq	%rax
 543 0691 83E101   		andl	$1, %ecx
 544 0694 4809C8   		orq	%rcx, %rax
 545 0697 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 545      C0
 546 069c F20F58C0 		addsd	%xmm0, %xmm0
 547              	.L66:
 548 06a0 F20F5E0D 		divsd	.LC4(%rip), %xmm1
 548      00000000 
 549 06a8 0FB74C24 		movzwl	44(%rsp), %ecx
 549      2C
 550 06ad 4D89E0   		movq	%r12, %r8
 551 06b0 BE000000 		movl	$.LC8, %esi
 551      00
 552 06b5 BF010000 		movl	$1, %edi
 552      00
 553 06ba B001     		movb	$1, %al
 554 06bc F20F590D 		mulsd	.LC5(%rip), %xmm1
 554      00000000 
 555 06c4 F20F5EC1 		divsd	%xmm1, %xmm0
 556 06c8 E8000000 		call	__printf_chk
 556      00
 557              	.L64:
 558 06cd 4585FF   		testl	%r15d, %r15d
 559 06d0 7539     		jne	.L112
 560 06d2 4C89EF   		movq	%r13, %rdi
 561 06d5 E8000000 		call	fclose
 561      00
 562 06da E90B0300 		jmp	.L55
 562      00
 563              	.L108:
 564 06df 4531ED   		xorl	%r13d, %r13d
 565 06e2 4531FF   		xorl	%r15d, %r15d
 566 06e5 41BE0600 		movl	$6, %r14d
 566      0000
 567 06eb EB24     		jmp	.L63
 568              	.L109:
 569 06ed 4531ED   		xorl	%r13d, %r13d
 570 06f0 41BE0700 		movl	$7, %r14d
 570      0000
 571 06f6 EB19     		jmp	.L63
 572              	.L110:
 573 06f8 4531ED   		xorl	%r13d, %r13d
 574 06fb 41BE0800 		movl	$8, %r14d
 574      0000
 575 0701 EB0E     		jmp	.L63
 576              	.L111:
 577 0703 41BE0A00 		movl	$10, %r14d
 577      0000
 578 0709 EB06     		jmp	.L63
 579              	.L112:
 580 070b 4589FE   		movl	%r15d, %r14d
 581 070e 4531FF   		xorl	%r15d, %r15d
 582              	.L63:
 583 0711 4531E4   		xorl	%r12d, %r12d
 584 0714 E9250300 		jmp	.L18
 584      00
 585              	.L58:
 586 0719 8D48D0   		leal	-48(%rax), %ecx
 587 071c 80F909   		cmpb	$9, %cl
 588 071f 760E     		jbe	.L68
 589 0721 83E0DF   		andl	$-33, %eax
 590 0724 83E841   		subl	$65, %eax
 591 0727 3C05     		cmpb	$5, %al
 592 0729 0F870003 		ja	.L118
 592      0000
 593              	.L68:
 594 072f 4883C602 		addq	$2, %rsi
 595              	.L70:
 596 0733 8A06     		movb	(%rsi), %al
 597 0735 8D48D0   		leal	-48(%rax), %ecx
 598 0738 80F909   		cmpb	$9, %cl
 599 073b 7705     		ja	.L162
 600              	.L71:
 601 073d 48FFC6   		incq	%rsi
 602 0740 EBF1     		jmp	.L70
 603              	.L162:
 604 0742 83E0DF   		andl	$-33, %eax
 605 0745 83E841   		subl	$65, %eax
 606 0748 3C05     		cmpb	$5, %al
 607 074a 76F1     		jbe	.L71
 608 074c 4829D6   		subq	%rdx, %rsi
 609 074f 40F6C601 		testb	$1, %sil
 610 0753 0F857601 		jne	.L113
 610      0000
 611 0759 4889F7   		movq	%rsi, %rdi
 612 075c 4531ED   		xorl	%r13d, %r13d
 613 075f 48D1EF   		shrq	%rdi
 614 0762 48897C24 		movq	%rdi, 48(%rsp)
 614      30
 615 0767 E8000000 		call	malloc
 615      00
 616 076c 4889C5   		movq	%rax, %rbp
 617              	.L72:
 618 076f 4C3B6C24 		cmpq	48(%rsp), %r13
 618      30
 619 0774 7353     		jnb	.L163
 620 0776 488B0D00 		movq	ptr(%rip), %rcx
 620      000000
 621 077d 8A01     		movb	(%rcx), %al
 622 077f 8D50D0   		leal	-48(%rax), %edx
 623 0782 80FA09   		cmpb	$9, %dl
 624 0785 0F860D04 		jbe	.L73
 624      0000
 625 078b 8D509F   		leal	-97(%rax), %edx
 626 078e 80FA05   		cmpb	$5, %dl
 627 0791 7708     		ja	.L74
 628 0793 8D50A9   		leal	-87(%rax), %edx
 629 0796 E9FD0300 		jmp	.L73
 629      00
 630              	.L74:
 631 079b 8D50BF   		leal	-65(%rax), %edx
 632 079e 80FA05   		cmpb	$5, %dl
 633 07a1 7708     		ja	.L75
 634 07a3 8D50C9   		leal	-55(%rax), %edx
 635 07a6 E9ED0300 		jmp	.L73
 635      00
 636              	.L75:
 637 07ab BE000000 		movl	$.LC9, %esi
 637      00
 638 07b0 BF010000 		movl	$1, %edi
 638      00
 639 07b5 31C0     		xorl	%eax, %eax
 640 07b7 E8000000 		call	__printf_chk
 640      00
 641              	.L95:
 642 07bc 48830500 		addq	$2, ptr(%rip)
 642      00000002 
 643 07c4 49FFC5   		incq	%r13
 644 07c7 EBA6     		jmp	.L72
 645              	.L163:
 646 07c9 488D7C24 		leaq	64(%rsp), %rdi
 646      40
 647 07ce 31F6     		xorl	%esi, %esi
 648 07d0 E8000000 		call	gettimeofday
 648      00
 649 07d5 488B5424 		movq	48(%rsp), %rdx
 649      30
 650 07da 488B3C24 		movq	(%rsp), %rdi
 651 07de 4989D8   		movq	%rbx, %r8
 652 07e1 4889E9   		movq	%rbp, %rcx
 653 07e4 4489E6   		movl	%r12d, %esi
 654 07e7 E8000000 		call	flWriteChannel
 654      00
 655 07ec 488D7C24 		leaq	80(%rsp), %rdi
 655      50
 656 07f1 31F6     		xorl	%esi, %esi
 657 07f3 4189C5   		movl	%eax, %r13d
 658 07f6 E8000000 		call	gettimeofday
 658      00
 659 07fb 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 659      000000
 660 0802 0F848D00 		je	.L79
 660      0000
 661 0808 488B5424 		movq	48(%rsp), %rdx
 661      30
 662 080d 31C0     		xorl	%eax, %eax
 663 080f 31C9     		xorl	%ecx, %ecx
 664              	.L80:
 665 0811 4839C2   		cmpq	%rax, %rdx
 666 0814 740C     		je	.L164
 667 0816 0FB67405 		movzbl	0(%rbp,%rax), %esi
 667      00
 668 081b 48FFC0   		incq	%rax
 669 081e 01F1     		addl	%esi, %ecx
 670 0820 EBEF     		jmp	.L80
 671              	.L164:
 672 0822 48694424 		imulq	$1000000, 80(%rsp), %rax
 672      5040420F 
 672      00
 673 082b 48697424 		imulq	$1000000, 64(%rsp), %rsi
 673      4040420F 
 673      00
 674 0834 48034424 		addq	88(%rsp), %rax
 674      58
 675 0839 48037424 		addq	72(%rsp), %rsi
 675      48
 676 083e 4829F0   		subq	%rsi, %rax
 677 0841 4885D2   		testq	%rdx, %rdx
 678 0844 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 678      C8
 679 0849 7807     		js	.L82
 680 084b F2480F2A 		cvtsi2sdq	%rdx, %xmm0
 680      C2
 681 0850 EB18     		jmp	.L83
 682              	.L82:
 683 0852 4889D0   		movq	%rdx, %rax
 684 0855 4889D6   		movq	%rdx, %rsi
 685 0858 48D1E8   		shrq	%rax
 686 085b 83E601   		andl	$1, %esi
 687 085e 4809F0   		orq	%rsi, %rax
 688 0861 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 688      C0
 689 0866 F20F58C0 		addsd	%xmm0, %xmm0
 690              	.L83:
 691 086a F20F5E0D 		divsd	.LC4(%rip), %xmm1
 691      00000000 
 692 0872 0FB7C9   		movzwl	%cx, %ecx
 693 0875 4D89E0   		movq	%r12, %r8
 694 0878 BE000000 		movl	$.LC8, %esi
 694      00
 695 087d BF010000 		movl	$1, %edi
 695      00
 696 0882 B001     		movb	$1, %al
 697 0884 F20F590D 		mulsd	.LC5(%rip), %xmm1
 697      00000000 
 698 088c F20F5EC1 		divsd	%xmm1, %xmm0
 699 0890 E8000000 		call	__printf_chk
 699      00
 700              	.L79:
 701 0895 4585ED   		testl	%r13d, %r13d
 702 0898 7549     		jne	.L114
 703 089a 4889EF   		movq	%rbp, %rdi
 704 089d E8000000 		call	free
 704      00
 705 08a2 E9430100 		jmp	.L55
 705      00
 706              	.L106:
 707 08a7 4531ED   		xorl	%r13d, %r13d
 708 08aa 4531FF   		xorl	%r15d, %r15d
 709 08ad 4531E4   		xorl	%r12d, %r12d
 710 08b0 41BE0200 		movl	$2, %r14d
 710      0000
 711 08b6 E9830100 		jmp	.L18
 711      00
 712              	.L107:
 713 08bb 4531ED   		xorl	%r13d, %r13d
 714 08be 4531FF   		xorl	%r15d, %r15d
 715 08c1 4531E4   		xorl	%r12d, %r12d
 716 08c4 41BE0300 		movl	$3, %r14d
 716      0000
 717 08ca E96F0100 		jmp	.L18
 717      00
 718              	.L113:
 719 08cf 4531ED   		xorl	%r13d, %r13d
 720 08d2 4531FF   		xorl	%r15d, %r15d
 721 08d5 4531E4   		xorl	%r12d, %r12d
 722 08d8 41BE0900 		movl	$9, %r14d
 722      0000
 723 08de E95B0100 		jmp	.L18
 723      00
 724              	.L114:
 725 08e3 4989EC   		movq	%rbp, %r12
 726 08e6 4531ED   		xorl	%r13d, %r13d
 727 08e9 4531FF   		xorl	%r15d, %r15d
 728 08ec 41BE0100 		movl	$1, %r14d
 728      0000
 729 08f2 E9470100 		jmp	.L18
 729      00
 730              	.L159:
 731 08f7 488D6F01 		leaq	1(%rdi), %rbp
 732 08fb 48892D00 		movq	%rbp, ptr(%rip)
 732      000000
 733 0902 E8000000 		call	__errno_location
 733      00
 734 0907 488D7424 		leaq	56(%rsp), %rsi
 734      38
 735 090c 4989C4   		movq	%rax, %r12
 736 090f C7000000 		movl	$0, (%rax)
 736      0000
 737 0915 BA100000 		movl	$16, %edx
 737      00
 738 091a 4889EF   		movq	%rbp, %rdi
 739 091d E8000000 		call	strtoul
 739      00
 740 0922 41833C24 		cmpl	$0, (%r12)
 740      00
 741 0927 753D     		jne	.L115
 742 0929 3DFF0000 		cmpl	$255, %eax
 742      00
 743 092e 773E     		ja	.L116
 744 0930 488B5424 		movq	56(%rsp), %rdx
 744      38
 745 0935 48891500 		movq	%rdx, ptr(%rip)
 745      000000
 746 093c 8A12     		movb	(%rdx), %dl
 747 093e 84D2     		testb	%dl, %dl
 748 0940 7405     		je	.L122
 749 0942 80FA3B   		cmpb	$59, %dl
 750 0945 752F     		jne	.L117
 751              	.L122:
 752 0947 488B3C24 		movq	(%rsp), %rdi
 753 094b 0FB6F0   		movzbl	%al, %esi
 754 094e 4889DA   		movq	%rbx, %rdx
 755 0951 E8000000 		call	flSelectConduit
 755      00
 756 0956 85C0     		testl	%eax, %eax
 757 0958 0F848C00 		je	.L55
 757      0000
 758 095e 41BE0100 		movl	$1, %r14d
 758      0000
 759 0964 EB16     		jmp	.L84
 760              	.L115:
 761 0966 41BE0200 		movl	$2, %r14d
 761      0000
 762 096c EB0E     		jmp	.L84
 763              	.L116:
 764 096e 41BE0400 		movl	$4, %r14d
 764      0000
 765 0974 EB06     		jmp	.L84
 766              	.L117:
 767 0976 41BE0500 		movl	$5, %r14d
 767      0000
 768              	.L84:
 769 097c 4531ED   		xorl	%r13d, %r13d
 770 097f 4531FF   		xorl	%r15d, %r15d
 771 0982 4531E4   		xorl	%r12d, %r12d
 772 0985 E9B40000 		jmp	.L18
 772      00
 773              	.L166:
 774 098a 48694424 		imulq	$1000000, 80(%rsp), %rax
 774      5040420F 
 774      00
 775 0993 48695424 		imulq	$1000000, 64(%rsp), %rdx
 775      4040420F 
 775      00
 776 099c F2480F2A 		cvtsi2sdq	%rbp, %xmm0
 776      C5
 777 09a1 0FB7C9   		movzwl	%cx, %ecx
 778 09a4 4589F0   		movl	%r14d, %r8d
 779 09a7 BE000000 		movl	$.LC6, %esi
 779      00
 780 09ac BF010000 		movl	$1, %edi
 780      00
 781 09b1 48034424 		addq	88(%rsp), %rax
 781      58
 782 09b6 48035424 		addq	72(%rsp), %rdx
 782      48
 783 09bb 4829D0   		subq	%rdx, %rax
 784 09be 4489EA   		movl	%r13d, %edx
 785 09c1 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 785      C8
 786 09c6 B001     		movb	$1, %al
 787 09c8 F20F5E0D 		divsd	.LC4(%rip), %xmm1
 787      00000000 
 788 09d0 F20F590D 		mulsd	.LC5(%rip), %xmm1
 788      00000000 
 789 09d8 F20F5EC1 		divsd	%xmm1, %xmm0
 790 09dc E8000000 		call	__printf_chk
 790      00
 791              	.L50:
 792 09e1 4585FF   		testl	%r15d, %r15d
 793 09e4 0F859D01 		jne	.L92
 793      0000
 794              	.L55:
 795 09ea 488B0500 		movq	ptr(%rip), %rax
 795      000000
 796 09f1 8A00     		movb	(%rax), %al
 797 09f3 3C3B     		cmpb	$59, %al
 798 09f5 0F8468F7 		je	.L19
 798      FFFF
 799 09fb 84C0     		testb	%al, %al
 800 09fd 7530     		jne	.L118
 801 09ff 488B5424 		movq	104(%rsp), %rdx
 801      68
 802 0a04 488B7424 		movq	96(%rsp), %rsi
 802      60
 803 0a09 31FF     		xorl	%edi, %edi
 804 0a0b 4531ED   		xorl	%r13d, %r13d
 805 0a0e 4531FF   		xorl	%r15d, %r15d
 806 0a11 4531E4   		xorl	%r12d, %r12d
 807 0a14 4531F6   		xorl	%r14d, %r14d
 808 0a17 E8000000 		call	dump
 808      00
 809 0a1c EB20     		jmp	.L18
 810              	.L97:
 811 0a1e 4531ED   		xorl	%r13d, %r13d
 812 0a21 4531FF   		xorl	%r15d, %r15d
 813 0a24 4531E4   		xorl	%r12d, %r12d
 814 0a27 41BE0100 		movl	$1, %r14d
 814      0000
 815 0a2d EB0F     		jmp	.L18
 816              	.L118:
 817 0a2f 4531ED   		xorl	%r13d, %r13d
 818 0a32 4531FF   		xorl	%r15d, %r15d
 819 0a35 4531E4   		xorl	%r12d, %r12d
 820 0a38 41BE0500 		movl	$5, %r14d
 820      0000
 821              	.L18:
 822 0a3e 488D7C24 		leaq	96(%rsp), %rdi
 822      60
 823 0a43 E8000000 		call	bufDestroy
 823      00
 824 0a48 4D85ED   		testq	%r13, %r13
 825 0a4b 7408     		je	.L88
 826 0a4d 4C89EF   		movq	%r13, %rdi
 827 0a50 E8000000 		call	fclose
 827      00
 828              	.L88:
 829 0a55 4C89FF   		movq	%r15, %rdi
 830 0a58 E8000000 		call	free
 830      00
 831 0a5d 4C89E7   		movq	%r12, %rdi
 832 0a60 E8000000 		call	free
 832      00
 833 0a65 4183FE01 		cmpl	$1, %r14d
 834 0a69 7671     		jbe	.L89
 835 0a6b 4C8B0500 		movq	ptr(%rip), %r8
 835      000000
 836 0a72 4489F0   		movl	%r14d, %eax
 837 0a75 4C2B4424 		subq	16(%rsp), %r8
 837      10
 838 0a7a 488B0CC5 		movq	errMessages(,%rax,8), %rcx
 838      00000000 
 839 0a82 4C8B4C24 		movq	16(%rsp), %r9
 839      10
 840 0a87 BA000000 		movl	$.LC10, %edx
 840      00
 841 0a8c 488B3D00 		movq	stderr(%rip), %rdi
 841      000000
 842 0a93 BE010000 		movl	$1, %esi
 842      00
 843 0a98 31C0     		xorl	%eax, %eax
 844 0a9a 31DB     		xorl	%ebx, %ebx
 845 0a9c 4489C5   		movl	%r8d, %ebp
 846 0a9f E8000000 		call	__fprintf_chk
 846      00
 847              	.L90:
 848 0aa4 39EB     		cmpl	%ebp, %ebx
 849 0aa6 7D1C     		jge	.L165
 850 0aa8 488B3D00 		movq	stderr(%rip), %rdi
 850      000000
 851 0aaf BA000000 		movl	$.LC11, %edx
 851      00
 852 0ab4 BE010000 		movl	$1, %esi
 852      00
 853 0ab9 31C0     		xorl	%eax, %eax
 854 0abb FFC3     		incl	%ebx
 855 0abd E8000000 		call	__fprintf_chk
 855      00
 856 0ac2 EBE0     		jmp	.L90
 857              	.L165:
 858 0ac4 488B3D00 		movq	stderr(%rip), %rdi
 858      000000
 859 0acb BA000000 		movl	$.LC12, %edx
 859      00
 860 0ad0 BE010000 		movl	$1, %esi
 860      00
 861 0ad5 31C0     		xorl	%eax, %eax
 862 0ad7 E8000000 		call	__fprintf_chk
 862      00
 863              	.L89:
 864 0adc 488B9C24 		movq	136(%rsp), %rbx
 864      88000000 
 865 0ae4 6448331C 		xorq	%fs:40, %rbx
 865      25280000 
 865      00
 866 0aed 4489F0   		movl	%r14d, %eax
 867 0af0 0F84D500 		je	.L96
 867      0000
 868 0af6 E8000000 		call	__stack_chk_fail
 868      00
 869              	.L27:
 870 0afb 4489ED   		movl	%r13d, %ebp
 871 0afe 488D7C24 		leaq	96(%rsp), %rdi
 871      60
 872 0b03 31F6     		xorl	%esi, %esi
 873 0b05 4889D9   		movq	%rbx, %rcx
 874 0b08 4889EA   		movq	%rbp, %rdx
 875 0b0b 4C8B6424 		movq	104(%rsp), %r12
 875      68
 876 0b10 E8000000 		call	bufAppendConst
 876      00
 877 0b15 85C0     		testl	%eax, %eax
 878 0b17 756E     		jne	.L92
 879 0b19 488D7C24 		leaq	64(%rsp), %rdi
 879      40
 880 0b1e 31F6     		xorl	%esi, %esi
 881 0b20 E8000000 		call	gettimeofday
 881      00
 882 0b25 4C89E1   		movq	%r12, %rcx
 883 0b28 48034C24 		addq	96(%rsp), %rcx
 883      60
 884 0b2d 488B3C24 		movq	(%rsp), %rdi
 885 0b31 410FB6F6 		movzbl	%r14b, %esi
 886 0b35 4989D8   		movq	%rbx, %r8
 887 0b38 4889EA   		movq	%rbp, %rdx
 888 0b3b E8000000 		call	flReadChannel
 888      00
 889 0b40 4189C7   		movl	%eax, %r15d
 890 0b43 488B4424 		movq	96(%rsp), %rax
 890      60
 891 0b48 488D7C24 		leaq	80(%rsp), %rdi
 891      50
 892 0b4d 31F6     		xorl	%esi, %esi
 893 0b4f 8A00     		movb	(%rax), %al
 894 0b51 88050000 		movb	%al, out(%rip)
 894      0000
 895 0b57 E8000000 		call	gettimeofday
 895      00
 896 0b5c 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 896      000000
 897 0b63 0F8478FE 		je	.L50
 897      FFFF
 898 0b69 4C036424 		addq	96(%rsp), %r12
 898      60
 899 0b6e 31C0     		xorl	%eax, %eax
 900 0b70 31C9     		xorl	%ecx, %ecx
 901              	.L51:
 902 0b72 4839C5   		cmpq	%rax, %rbp
 903 0b75 0F840FFE 		je	.L166
 903      FFFF
 904 0b7b 410FB614 		movzbl	(%r12,%rax), %edx
 904      04
 905 0b80 48FFC0   		incq	%rax
 906 0b83 01D1     		addl	%edx, %ecx
 907 0b85 EBEB     		jmp	.L51
 908              	.L92:
 909 0b87 4531ED   		xorl	%r13d, %r13d
 910 0b8a 4531FF   		xorl	%r15d, %r15d
 911 0b8d 41BE0100 		movl	$1, %r14d
 911      0000
 912 0b93 E979FBFF 		jmp	.L63
 912      FF
 913              	.L73:
 914 0b98 8A4901   		movb	1(%rcx), %cl
 915 0b9b 8D41D0   		leal	-48(%rcx), %eax
 916 0b9e 3C09     		cmpb	$9, %al
 917 0ba0 761A     		jbe	.L77
 918 0ba2 8D419F   		leal	-97(%rcx), %eax
 919 0ba5 3C05     		cmpb	$5, %al
 920 0ba7 7705     		ja	.L76
 921 0ba9 8D41A9   		leal	-87(%rcx), %eax
 922 0bac EB0E     		jmp	.L77
 923              	.L76:
 924 0bae 8D41BF   		leal	-65(%rcx), %eax
 925 0bb1 3C05     		cmpb	$5, %al
 926 0bb3 0F87F2FB 		ja	.L75
 926      FFFF
 927 0bb9 8D41C9   		leal	-55(%rcx), %eax
 928              	.L77:
 929 0bbc C1E204   		sall	$4, %edx
 930 0bbf 09D0     		orl	%edx, %eax
 931 0bc1 4288442D 		movb	%al, 0(%rbp,%r13)
 931      00
 932 0bc6 E9F1FBFF 		jmp	.L95
 932      FF
 933              	.L96:
 934 0bcb 4881C498 		addq	$152, %rsp
 934      000000
 935              		.cfi_def_cfa_offset 56
 936 0bd2 5B       		popq	%rbx
 937              		.cfi_def_cfa_offset 48
 938 0bd3 5D       		popq	%rbp
 939              		.cfi_def_cfa_offset 40
 940 0bd4 415C     		popq	%r12
 941              		.cfi_def_cfa_offset 32
 942 0bd6 415D     		popq	%r13
 943              		.cfi_def_cfa_offset 24
 944 0bd8 415E     		popq	%r14
 945              		.cfi_def_cfa_offset 16
 946 0bda 415F     		popq	%r15
 947              		.cfi_def_cfa_offset 8
 948 0bdc C3       		ret
 949              		.cfi_endproc
 950              	.LFE67:
 952              	.LCOLDE13:
 953              	.LHOTE13:
 954              	.LCOLDB15:
 955              		.text
 956              	.LHOTB15:
 957              		.p2align 4,,15
 958              		.globl	timediff
 960              	timediff:
 961              	.LFB55:
 962              		.cfi_startproc
 963 0000 660FEFC0 		pxor	%xmm0, %xmm0
 964 0004 660FEFC9 		pxor	%xmm1, %xmm1
 965 0008 F2480F2A 		cvtsi2sdq	%rsi, %xmm0
 965      C6
 966 000d F2480F2A 		cvtsi2sdq	%rdi, %xmm1
 966      CF
 967 0012 F20F5CC1 		subsd	%xmm1, %xmm0
 968 0016 F20F5E05 		divsd	.LC4(%rip), %xmm0
 968      00000000 
 969 001e F20F5905 		mulsd	.LC14(%rip), %xmm0
 969      00000000 
 970 0026 F2480F2C 		cvttsd2siq	%xmm0, %rax
 970      C0
 971 002b C3       		ret
 972              		.cfi_endproc
 973              	.LFE55:
 975              		.section	.text.unlikely
 976              	.LCOLDE15:
 977              		.text
 978              	.LHOTE15:
 979              		.section	.rodata.str1.1
 980              	.LC16:
 981 0045 2E637376 		.string	".csv"
 981      00
 982              	.LC17:
 983 004a 74726163 		.string	"track_data"
 983      6B5F6461 
 983      746100
 984              	.LC18:
 985 0055 7700     		.string	"w"
 986              	.LC19:
 987 0057 0A256400 		.string	"\n%d"
 988              	.LC20:
 989 005b 2C256420 		.string	",%d "
 989      00
 990              		.section	.text.unlikely
 991              	.LCOLDB21:
 992              		.text
 993              	.LHOTB21:
 994 002c 0F1F4000 		.p2align 4,,15
 995              		.globl	save_to_file
 997              	save_to_file:
 998              	.LFB56:
 999              		.cfi_startproc
 1000 0030 4156     		pushq	%r14
 1001              		.cfi_def_cfa_offset 16
 1002              		.cfi_offset 14, -16
 1003 0032 4155     		pushq	%r13
 1004              		.cfi_def_cfa_offset 24
 1005              		.cfi_offset 13, -24
 1006 0034 4189F6   		movl	%esi, %r14d
 1007 0037 4154     		pushq	%r12
 1008              		.cfi_def_cfa_offset 32
 1009              		.cfi_offset 12, -32
 1010 0039 55       		pushq	%rbp
 1011              		.cfi_def_cfa_offset 40
 1012              		.cfi_offset 6, -40
 1013 003a BA0B0000 		movl	$11, %edx
 1013      00
 1014 003f 53       		pushq	%rbx
 1015              		.cfi_def_cfa_offset 48
 1016              		.cfi_offset 3, -48
 1017 0040 BE000000 		movl	$.LC16, %esi
 1017      00
 1018 0045 4889FB   		movq	%rdi, %rbx
 1019 0048 BF000000 		movl	$.LC17, %edi
 1019      00
 1020 004d 4531ED   		xorl	%r13d, %r13d
 1021 0050 E8000000 		call	__strcat_chk
 1021      00
 1022 0055 BE000000 		movl	$.LC18, %esi
 1022      00
 1023 005a 4889C7   		movq	%rax, %rdi
 1024 005d E8000000 		call	fopen
 1024      00
 1025 0062 4585F6   		testl	%r14d, %r14d
 1026 0065 4889C5   		movq	%rax, %rbp
 1027 0068 7E49     		jle	.L172
 1028 006a 660F1F44 		.p2align 4,,10
 1028      0000
 1029              		.p2align 3
 1030              	.L173:
 1031 0070 4183C501 		addl	$1, %r13d
 1032 0074 4C8D6314 		leaq	20(%rbx), %r12
 1033 0078 BA000000 		movl	$.LC19, %edx
 1033      00
 1034 007d 4489E9   		movl	%r13d, %ecx
 1035 0080 BE010000 		movl	$1, %esi
 1035      00
 1036 0085 4889EF   		movq	%rbp, %rdi
 1037 0088 31C0     		xorl	%eax, %eax
 1038 008a E8000000 		call	__fprintf_chk
 1038      00
 1039              	.L170:
 1040 008f 8B0B     		movl	(%rbx), %ecx
 1041 0091 31C0     		xorl	%eax, %eax
 1042 0093 BA000000 		movl	$.LC20, %edx
 1042      00
 1043 0098 BE010000 		movl	$1, %esi
 1043      00
 1044 009d 4889EF   		movq	%rbp, %rdi
 1045 00a0 4883C304 		addq	$4, %rbx
 1046 00a4 E8000000 		call	__fprintf_chk
 1046      00
 1047 00a9 4939DC   		cmpq	%rbx, %r12
 1048 00ac 75E1     		jne	.L170
 1049 00ae 4539EE   		cmpl	%r13d, %r14d
 1050 00b1 75BD     		jne	.L173
 1051              	.L172:
 1052 00b3 5B       		popq	%rbx
 1053              		.cfi_def_cfa_offset 40
 1054 00b4 4889EF   		movq	%rbp, %rdi
 1055 00b7 5D       		popq	%rbp
 1056              		.cfi_def_cfa_offset 32
 1057 00b8 415C     		popq	%r12
 1058              		.cfi_def_cfa_offset 24
 1059 00ba 415D     		popq	%r13
 1060              		.cfi_def_cfa_offset 16
 1061 00bc 415E     		popq	%r14
 1062              		.cfi_def_cfa_offset 8
 1063 00be E9000000 		jmp	fclose
 1063      00
 1064              		.cfi_endproc
 1065              	.LFE56:
 1067              		.section	.text.unlikely
 1068              	.LCOLDE21:
 1069              		.text
 1070              	.LHOTE21:
 1071              		.section	.rodata.str1.1
 1072              	.LC22:
 1073 0060 6572726F 		.string	"error %d from tcgetattr"
 1073      72202564 
 1073      2066726F 
 1073      6D207463 
 1073      67657461 
 1074              	.LC23:
 1075 0078 6572726F 		.string	"error %d from tcsetattr"
 1075      72202564 
 1075      2066726F 
 1075      6D207463 
 1075      73657461 
 1076              		.section	.text.unlikely
 1077              	.LCOLDB24:
 1078              		.text
 1079              	.LHOTB24:
 1080 00c3 0F1F0066 		.p2align 4,,15
 1080      2E0F1F84 
 1080      00000000 
 1080      00
 1081              		.globl	set_interface_attribs
 1083              	set_interface_attribs:
 1084              	.LFB57:
 1085              		.cfi_startproc
 1086 00d0 4155     		pushq	%r13
 1087              		.cfi_def_cfa_offset 16
 1088              		.cfi_offset 13, -16
 1089 00d2 4154     		pushq	%r12
 1090              		.cfi_def_cfa_offset 24
 1091              		.cfi_offset 12, -24
 1092 00d4 B9070000 		movl	$7, %ecx
 1092      00
 1093 00d9 55       		pushq	%rbp
 1094              		.cfi_def_cfa_offset 32
 1095              		.cfi_offset 6, -32
 1096 00da 53       		pushq	%rbx
 1097              		.cfi_def_cfa_offset 40
 1098              		.cfi_offset 3, -40
 1099 00db 4189FC   		movl	%edi, %r12d
 1100 00de 4189F5   		movl	%esi, %r13d
 1101 00e1 89D5     		movl	%edx, %ebp
 1102 00e3 4883EC58 		subq	$88, %rsp
 1103              		.cfi_def_cfa_offset 128
 1104 00e7 64488B04 		movq	%fs:40, %rax
 1104      25280000 
 1104      00
 1105 00f0 48894424 		movq	%rax, 72(%rsp)
 1105      48
 1106 00f5 31C0     		xorl	%eax, %eax
 1107 00f7 4889E7   		movq	%rsp, %rdi
 1108 00fa 4889E6   		movq	%rsp, %rsi
 1109 00fd F348AB   		rep stosq
 1110 0100 C7070000 		movl	$0, (%rdi)
 1110      0000
 1111 0106 4489E7   		movl	%r12d, %edi
 1112 0109 E8000000 		call	tcgetattr
 1112      00
 1113 010e 85C0     		testl	%eax, %eax
 1114 0110 757E     		jne	.L186
 1115 0112 4489EE   		movl	%r13d, %esi
 1116 0115 4889E7   		movq	%rsp, %rdi
 1117 0118 E8000000 		call	cfsetospeed
 1117      00
 1118 011d 4489EE   		movl	%r13d, %esi
 1119 0120 4889E7   		movq	%rsp, %rdi
 1120 0123 E8000000 		call	cfsetispeed
 1120      00
 1121 0128 8B0424   		movl	(%rsp), %eax
 1122 012b 31F6     		xorl	%esi, %esi
 1123 012d 4889E2   		movq	%rsp, %rdx
 1124 0130 4489E7   		movl	%r12d, %edi
 1125 0133 C744240C 		movl	$0, 12(%rsp)
 1125      00000000 
 1126 013b C7442404 		movl	$0, 4(%rsp)
 1126      00000000 
 1127 0143 C6442417 		movb	$0, 23(%rsp)
 1127      00
 1128 0148 C6442416 		movb	$5, 22(%rsp)
 1128      05
 1129 014d 25FEE3FF 		andl	$-7170, %eax
 1129      FF
 1130 0152 890424   		movl	%eax, (%rsp)
 1131 0155 8B442408 		movl	8(%rsp), %eax
 1132 0159 80E4FC   		andb	$252, %ah
 1133 015c 0DB00800 		orl	$2224, %eax
 1133      00
 1134 0161 09C5     		orl	%eax, %ebp
 1135 0163 83E5BF   		andl	$-65, %ebp
 1136 0166 896C2408 		movl	%ebp, 8(%rsp)
 1137 016a E8000000 		call	tcsetattr
 1137      00
 1138 016f 85C0     		testl	%eax, %eax
 1139 0171 753D     		jne	.L187
 1140              	.L180:
 1141 0173 488B4C24 		movq	72(%rsp), %rcx
 1141      48
 1142 0178 6448330C 		xorq	%fs:40, %rcx
 1142      25280000 
 1142      00
 1143 0181 754C     		jne	.L188
 1144 0183 4883C458 		addq	$88, %rsp
 1145              		.cfi_remember_state
 1146              		.cfi_def_cfa_offset 40
 1147 0187 5B       		popq	%rbx
 1148              		.cfi_def_cfa_offset 32
 1149 0188 5D       		popq	%rbp
 1150              		.cfi_def_cfa_offset 24
 1151 0189 415C     		popq	%r12
 1152              		.cfi_def_cfa_offset 16
 1153 018b 415D     		popq	%r13
 1154              		.cfi_def_cfa_offset 8
 1155 018d C3       		ret
 1156 018e 6690     		.p2align 4,,10
 1157              		.p2align 3
 1158              	.L186:
 1159              		.cfi_restore_state
 1160 0190 E8000000 		call	__errno_location
 1160      00
 1161 0195 8B10     		movl	(%rax), %edx
 1162 0197 BE000000 		movl	$.LC22, %esi
 1162      00
 1163 019c BF010000 		movl	$1, %edi
 1163      00
 1164 01a1 31C0     		xorl	%eax, %eax
 1165 01a3 E8000000 		call	__printf_chk
 1165      00
 1166 01a8 B8FFFFFF 		movl	$-1, %eax
 1166      FF
 1167 01ad EBC4     		jmp	.L180
 1168 01af 90       		.p2align 4,,10
 1169              		.p2align 3
 1170              	.L187:
 1171 01b0 E8000000 		call	__errno_location
 1171      00
 1172 01b5 8B10     		movl	(%rax), %edx
 1173 01b7 BE000000 		movl	$.LC23, %esi
 1173      00
 1174 01bc BF010000 		movl	$1, %edi
 1174      00
 1175 01c1 31C0     		xorl	%eax, %eax
 1176 01c3 E8000000 		call	__printf_chk
 1176      00
 1177 01c8 B8FFFFFF 		movl	$-1, %eax
 1177      FF
 1178 01cd EBA4     		jmp	.L180
 1179              	.L188:
 1180 01cf E8000000 		call	__stack_chk_fail
 1180      00
 1181              		.cfi_endproc
 1182              	.LFE57:
 1184              		.section	.text.unlikely
 1185              	.LCOLDE24:
 1186              		.text
 1187              	.LHOTE24:
 1188              		.section	.rodata.str1.1
 1189              	.LC25:
 1190 0090 6572726F 		.string	"error %d from tggetattr"
 1190      72202564 
 1190      2066726F 
 1190      6D207467 
 1190      67657461 
 1191              		.section	.rodata.str1.8
 1192 007e 0000     		.align 8
 1193              	.LC26:
 1194 0080 6572726F 		.string	"error %d setting term attributes"
 1194      72202564 
 1194      20736574 
 1194      74696E67 
 1194      20746572 
 1195              		.section	.text.unlikely
 1196              	.LCOLDB27:
 1197              		.text
 1198              	.LHOTB27:
 1199 01d4 6690662E 		.p2align 4,,15
 1199      0F1F8400 
 1199      00000000 
 1200              		.globl	set_blocking
 1202              	set_blocking:
 1203              	.LFB58:
 1204              		.cfi_startproc
 1205 01e0 4154     		pushq	%r12
 1206              		.cfi_def_cfa_offset 16
 1207              		.cfi_offset 12, -16
 1208 01e2 55       		pushq	%rbp
 1209              		.cfi_def_cfa_offset 24
 1210              		.cfi_offset 6, -24
 1211 01e3 B9070000 		movl	$7, %ecx
 1211      00
 1212 01e8 53       		pushq	%rbx
 1213              		.cfi_def_cfa_offset 32
 1214              		.cfi_offset 3, -32
 1215 01e9 89FD     		movl	%edi, %ebp
 1216 01eb 4189F4   		movl	%esi, %r12d
 1217 01ee 4883EC50 		subq	$80, %rsp
 1218              		.cfi_def_cfa_offset 112
 1219 01f2 64488B04 		movq	%fs:40, %rax
 1219      25280000 
 1219      00
 1220 01fb 48894424 		movq	%rax, 72(%rsp)
 1220      48
 1221 0200 31C0     		xorl	%eax, %eax
 1222 0202 4889E7   		movq	%rsp, %rdi
 1223 0205 4889E6   		movq	%rsp, %rsi
 1224 0208 F348AB   		rep stosq
 1225 020b C7070000 		movl	$0, (%rdi)
 1225      0000
 1226 0211 89EF     		movl	%ebp, %edi
 1227 0213 E8000000 		call	tcgetattr
 1227      00
 1228 0218 85C0     		testl	%eax, %eax
 1229 021a 753C     		jne	.L198
 1230 021c 4585E4   		testl	%r12d, %r12d
 1231 021f 4889E2   		movq	%rsp, %rdx
 1232 0222 89EF     		movl	%ebp, %edi
 1233 0224 0F954424 		setne	23(%rsp)
 1233      17
 1234 0229 31F6     		xorl	%esi, %esi
 1235 022b C6442416 		movb	$5, 22(%rsp)
 1235      05
 1236 0230 E8000000 		call	tcsetattr
 1236      00
 1237 0235 85C0     		testl	%eax, %eax
 1238 0237 753F     		jne	.L199
 1239              	.L189:
 1240 0239 488B4424 		movq	72(%rsp), %rax
 1240      48
 1241 023e 64483304 		xorq	%fs:40, %rax
 1241      25280000 
 1241      00
 1242 0247 7549     		jne	.L200
 1243 0249 4883C450 		addq	$80, %rsp
 1244              		.cfi_remember_state
 1245              		.cfi_def_cfa_offset 32
 1246 024d 5B       		popq	%rbx
 1247              		.cfi_def_cfa_offset 24
 1248 024e 5D       		popq	%rbp
 1249              		.cfi_def_cfa_offset 16
 1250 024f 415C     		popq	%r12
 1251              		.cfi_def_cfa_offset 8
 1252 0251 C3       		ret
 1253              		.p2align 4,,10
 1254 0252 660F1F44 		.p2align 3
 1254      0000
 1255              	.L198:
 1256              		.cfi_restore_state
 1257 0258 E8000000 		call	__errno_location
 1257      00
 1258 025d 8B10     		movl	(%rax), %edx
 1259 025f BE000000 		movl	$.LC25, %esi
 1259      00
 1260 0264 BF010000 		movl	$1, %edi
 1260      00
 1261 0269 31C0     		xorl	%eax, %eax
 1262 026b E8000000 		call	__printf_chk
 1262      00
 1263 0270 EBC7     		jmp	.L189
 1264              		.p2align 4,,10
 1265 0272 660F1F44 		.p2align 3
 1265      0000
 1266              	.L199:
 1267 0278 E8000000 		call	__errno_location
 1267      00
 1268 027d 8B10     		movl	(%rax), %edx
 1269 027f BE000000 		movl	$.LC26, %esi
 1269      00
 1270 0284 BF010000 		movl	$1, %edi
 1270      00
 1271 0289 31C0     		xorl	%eax, %eax
 1272 028b E8000000 		call	__printf_chk
 1272      00
 1273 0290 EBA7     		jmp	.L189
 1274              	.L200:
 1275 0292 E8000000 		call	__stack_chk_fail
 1275      00
 1276              		.cfi_endproc
 1277              	.LFE58:
 1279              		.section	.text.unlikely
 1280              	.LCOLDE27:
 1281              		.text
 1282              	.LHOTE27:
 1283              		.section	.rodata.str1.1
 1284              	.LC28:
 1285 00a8 6572726F 		.string	"error %d opening %s: %s"
 1285      72202564 
 1285      206F7065 
 1285      6E696E67 
 1285      2025733A 
 1286              	.LC29:
 1287 00c0 4E206973 		.string	"N is =%d"
 1287      203D2564 
 1287      00
 1288              	.LC30:
 1289 00c9 54686520 		.string	"The read string is %hhx\n"
 1289      72656164 
 1289      20737472 
 1289      696E6720 
 1289      69732025 
 1290              		.section	.rodata.str1.8
 1291 00a1 00000000 		.align 8
 1291      000000
 1292              	.LC31:
 1293 00a8 64617461 		.string	"data read from uart in uint8 %d \n"
 1293      20726561 
 1293      64206672 
 1293      6F6D2075 
 1293      61727420 
 1294              		.section	.rodata.str1.1
 1295              	.LC32:
 1296 00e2 3100     		.string	"1"
 1297              	.LC33:
 1298 00e4 3000     		.string	"0"
 1299              		.section	.text.unlikely
 1300              	.LCOLDB34:
 1301              		.text
 1302              	.LHOTB34:
 1303 0297 660F1F84 		.p2align 4,,15
 1303      00000000 
 1303      00
 1304              		.globl	read_one_byte_from_uart
 1306              	read_one_byte_from_uart:
 1307              	.LFB59:
 1308              		.cfi_startproc
 1309 02a0 55       		pushq	%rbp
 1310              		.cfi_def_cfa_offset 16
 1311              		.cfi_offset 6, -16
 1312 02a1 53       		pushq	%rbx
 1313              		.cfi_def_cfa_offset 24
 1314              		.cfi_offset 3, -24
 1315 02a2 4883EC58 		subq	$88, %rsp
 1316              		.cfi_def_cfa_offset 112
 1317 02a6 8B3D0000 		movl	fd(%rip), %edi
 1317      0000
 1318 02ac 64488B04 		movq	%fs:40, %rax
 1318      25280000 
 1318      00
 1319 02b5 48894424 		movq	%rax, 72(%rsp)
 1319      48
 1320 02ba 31C0     		xorl	%eax, %eax
 1321 02bc 85FF     		testl	%edi, %edi
 1322 02be 0F886C01 		js	.L218
 1322      0000
 1323 02c4 31D2     		xorl	%edx, %edx
 1324 02c6 BE0B0000 		movl	$11, %esi
 1324      00
 1325 02cb E8000000 		call	set_interface_attribs
 1325      00
 1326 02d0 31C0     		xorl	%eax, %eax
 1327 02d2 B9070000 		movl	$7, %ecx
 1327      00
 1328 02d7 4889E7   		movq	%rsp, %rdi
 1329 02da F348AB   		rep stosq
 1330 02dd 8B2D0000 		movl	fd(%rip), %ebp
 1330      0000
 1331 02e3 4889E6   		movq	%rsp, %rsi
 1332 02e6 C7070000 		movl	$0, (%rdi)
 1332      0000
 1333 02ec 89EF     		movl	%ebp, %edi
 1334 02ee E8000000 		call	tcgetattr
 1334      00
 1335 02f3 85C0     		testl	%eax, %eax
 1336 02f5 7569     		jne	.L219
 1337 02f7 31F6     		xorl	%esi, %esi
 1338 02f9 4889E2   		movq	%rsp, %rdx
 1339 02fc 89EF     		movl	%ebp, %edi
 1340 02fe C6442417 		movb	$0, 23(%rsp)
 1340      00
 1341 0303 C6442416 		movb	$5, 22(%rsp)
 1341      05
 1342 0308 E8000000 		call	tcsetattr
 1342      00
 1343 030d 85C0     		testl	%eax, %eax
 1344 030f 756F     		jne	.L220
 1345              	.L205:
 1346 0311 BF090000 		movl	$9, %edi
 1346      00
 1347 0316 E8000000 		call	malloc
 1347      00
 1348 031b 8B3D0000 		movl	fd(%rip), %edi
 1348      0000
 1349 0321 488D7424 		leaq	71(%rsp), %rsi
 1349      47
 1350 0326 BA010000 		movl	$1, %edx
 1350      00
 1351 032b 4889C3   		movq	%rax, %rbx
 1352 032e E8000000 		call	read
 1352      00
 1353 0333 83F801   		cmpl	$1, %eax
 1354 0336 7468     		je	.L221
 1355 0338 C60366   		movb	$102, (%rbx)
 1356 033b 4889D8   		movq	%rbx, %rax
 1357              	.L203:
 1358 033e 488B4C24 		movq	72(%rsp), %rcx
 1358      48
 1359 0343 6448330C 		xorq	%fs:40, %rcx
 1359      25280000 
 1359      00
 1360 034c 0F851101 		jne	.L222
 1360      0000
 1361 0352 4883C458 		addq	$88, %rsp
 1362              		.cfi_remember_state
 1363              		.cfi_def_cfa_offset 24
 1364 0356 5B       		popq	%rbx
 1365              		.cfi_def_cfa_offset 16
 1366 0357 5D       		popq	%rbp
 1367              		.cfi_def_cfa_offset 8
 1368 0358 C3       		ret
 1369 0359 0F1F8000 		.p2align 4,,10
 1369      000000
 1370              		.p2align 3
 1371              	.L219:
 1372              		.cfi_restore_state
 1373 0360 E8000000 		call	__errno_location
 1373      00
 1374 0365 8B10     		movl	(%rax), %edx
 1375 0367 BE000000 		movl	$.LC25, %esi
 1375      00
 1376 036c BF010000 		movl	$1, %edi
 1376      00
 1377 0371 31C0     		xorl	%eax, %eax
 1378 0373 E8000000 		call	__printf_chk
 1378      00
 1379 0378 EB97     		jmp	.L205
 1380 037a 660F1F44 		.p2align 4,,10
 1380      0000
 1381              		.p2align 3
 1382              	.L220:
 1383 0380 E8000000 		call	__errno_location
 1383      00
 1384 0385 8B10     		movl	(%rax), %edx
 1385 0387 BE000000 		movl	$.LC26, %esi
 1385      00
 1386 038c BF010000 		movl	$1, %edi
 1386      00
 1387 0391 31C0     		xorl	%eax, %eax
 1388 0393 E8000000 		call	__printf_chk
 1388      00
 1389 0398 E974FFFF 		jmp	.L205
 1389      FF
 1390 039d 0F1F00   		.p2align 4,,10
 1391              		.p2align 3
 1392              	.L221:
 1393 03a0 BA010000 		movl	$1, %edx
 1393      00
 1394 03a5 BE000000 		movl	$.LC29, %esi
 1394      00
 1395 03aa BF010000 		movl	$1, %edi
 1395      00
 1396 03af 31C0     		xorl	%eax, %eax
 1397 03b1 E8000000 		call	__printf_chk
 1397      00
 1398 03b6 0FBE5424 		movsbl	71(%rsp), %edx
 1398      47
 1399 03bb BE000000 		movl	$.LC30, %esi
 1399      00
 1400 03c0 BF010000 		movl	$1, %edi
 1400      00
 1401 03c5 31C0     		xorl	%eax, %eax
 1402 03c7 E8000000 		call	__printf_chk
 1402      00
 1403 03cc 0FB65424 		movzbl	71(%rsp), %edx
 1403      47
 1404 03d1 31C0     		xorl	%eax, %eax
 1405 03d3 C60300   		movb	$0, (%rbx)
 1406 03d6 BE000000 		movl	$.LC31, %esi
 1406      00
 1407 03db BF010000 		movl	$1, %edi
 1407      00
 1408 03e0 89D5     		movl	%edx, %ebp
 1409 03e2 E8000000 		call	__printf_chk
 1409      00
 1410 03e7 4084ED   		testb	%bpl, %bpl
 1411 03ea 7516     		jne	.L210
 1412 03ec EB31     		jmp	.L212
 1413 03ee 6690     		.p2align 4,,10
 1414              		.p2align 3
 1415              	.L223:
 1416 03f0 BE000000 		movl	$.LC32, %esi
 1416      00
 1417 03f5 4889DF   		movq	%rbx, %rdi
 1418 03f8 E8000000 		call	__strcat_chk
 1418      00
 1419 03fd 40D0ED   		shrb	%bpl
 1420 0400 741D     		je	.L212
 1421              	.L210:
 1422 0402 40F6C501 		testb	$1, %bpl
 1423 0406 BA090000 		movl	$9, %edx
 1423      00
 1424 040b 75E3     		jne	.L223
 1425 040d BE000000 		movl	$.LC33, %esi
 1425      00
 1426 0412 4889DF   		movq	%rbx, %rdi
 1427 0415 E8000000 		call	__strcat_chk
 1427      00
 1428 041a 40D0ED   		shrb	%bpl
 1429 041d 75E3     		jne	.L210
 1430              	.L212:
 1431 041f 4889D8   		movq	%rbx, %rax
 1432 0422 E917FFFF 		jmp	.L203
 1432      FF
 1433 0427 660F1F84 		.p2align 4,,10
 1433      00000000 
 1433      00
 1434              		.p2align 3
 1435              	.L218:
 1436 0430 E8000000 		call	__errno_location
 1436      00
 1437 0435 8B38     		movl	(%rax), %edi
 1438 0437 4889C3   		movq	%rax, %rbx
 1439 043a E8000000 		call	strerror
 1439      00
 1440 043f 488B0D00 		movq	portname(%rip), %rcx
 1440      000000
 1441 0446 8B13     		movl	(%rbx), %edx
 1442 0448 4989C0   		movq	%rax, %r8
 1443 044b BE000000 		movl	$.LC28, %esi
 1443      00
 1444 0450 BF010000 		movl	$1, %edi
 1444      00
 1445 0455 31C0     		xorl	%eax, %eax
 1446 0457 E8000000 		call	__printf_chk
 1446      00
 1447 045c 31C0     		xorl	%eax, %eax
 1448 045e E9DBFEFF 		jmp	.L203
 1448      FF
 1449              	.L222:
 1450 0463 E8000000 		call	__stack_chk_fail
 1450      00
 1451              		.cfi_endproc
 1452              	.LFE59:
 1454              		.section	.text.unlikely
 1455              	.LCOLDE34:
 1456              		.text
 1457              	.LHOTE34:
 1458              		.section	.rodata.str1.8
 1459 00ca 00000000 		.align 8
 1459      0000
 1460              	.LC35:
 1461 00d0 57726974 		.string	"Write to the UART port in hex\n"
 1461      6520746F 
 1461      20746865 
 1461      20554152 
 1461      5420706F 
 1462              		.section	.rodata.str1.1
 1463              	.LC36:
 1464 00e6 25686878 		.string	"%hhx"
 1464      00
 1465              		.section	.rodata.str1.8
 1466 00ef 00       		.align 8
 1467              	.LC37:
 1468 00f0 6572726F 		.string	"error in writing to the board through UART port"
 1468      7220696E 
 1468      20777269 
 1468      74696E67 
 1468      20746F20 
 1469              		.section	.rodata.str1.1
 1470              	.LC38:
 1471 00eb 57726974 		.string	"Write Success\n"
 1471      65205375 
 1471      63636573 
 1471      730A00
 1472              		.section	.text.unlikely
 1473              	.LCOLDB39:
 1474              		.text
 1475              	.LHOTB39:
 1476 0468 0F1F8400 		.p2align 4,,15
 1476      00000000 
 1477              		.globl	write_one_byte_to_uart
 1479              	write_one_byte_to_uart:
 1480              	.LFB60:
 1481              		.cfi_startproc
 1482 0470 4883EC18 		subq	$24, %rsp
 1483              		.cfi_def_cfa_offset 32
 1484 0474 BE000000 		movl	$.LC35, %esi
 1484      00
 1485 0479 BF010000 		movl	$1, %edi
 1485      00
 1486 047e 64488B04 		movq	%fs:40, %rax
 1486      25280000 
 1486      00
 1487 0487 48894424 		movq	%rax, 8(%rsp)
 1487      08
 1488 048c 31C0     		xorl	%eax, %eax
 1489 048e E8000000 		call	__printf_chk
 1489      00
 1490 0493 488D7424 		leaq	7(%rsp), %rsi
 1490      07
 1491 0498 BF000000 		movl	$.LC36, %edi
 1491      00
 1492 049d 31C0     		xorl	%eax, %eax
 1493 049f E8000000 		call	__isoc99_scanf
 1493      00
 1494 04a4 8B3D0000 		movl	fd(%rip), %edi
 1494      0000
 1495 04aa 488D7424 		leaq	7(%rsp), %rsi
 1495      07
 1496 04af BA010000 		movl	$1, %edx
 1496      00
 1497 04b4 E8000000 		call	write
 1497      00
 1498 04b9 83F801   		cmpl	$1, %eax
 1499 04bc 7526     		jne	.L228
 1500 04be 31C0     		xorl	%eax, %eax
 1501 04c0 BE000000 		movl	$.LC38, %esi
 1501      00
 1502 04c5 BF010000 		movl	$1, %edi
 1502      00
 1503 04ca E8000000 		call	__printf_chk
 1503      00
 1504 04cf 488B4424 		movq	8(%rsp), %rax
 1504      08
 1505 04d4 64483304 		xorq	%fs:40, %rax
 1505      25280000 
 1505      00
 1506 04dd 7520     		jne	.L229
 1507 04df 4883C418 		addq	$24, %rsp
 1508              		.cfi_remember_state
 1509              		.cfi_def_cfa_offset 8
 1510 04e3 C3       		ret
 1511              	.L228:
 1512              		.cfi_restore_state
 1513 04e4 BF010000 		movl	$1, %edi
 1513      00
 1514 04e9 BE000000 		movl	$.LC37, %esi
 1514      00
 1515 04ee 31C0     		xorl	%eax, %eax
 1516 04f0 E8000000 		call	__printf_chk
 1516      00
 1517 04f5 BF010000 		movl	$1, %edi
 1517      00
 1518 04fa E8000000 		call	exit
 1518      00
 1519              	.L229:
 1520 04ff E8000000 		call	__stack_chk_fail
 1520      00
 1521              		.cfi_endproc
 1522              	.LFE60:
 1524              		.section	.text.unlikely
 1525              	.LCOLDE39:
 1526              		.text
 1527              	.LHOTE39:
 1528              		.section	.rodata.str1.1
 1529              	.LC40:
 1530 00fa 474F5420 		.string	"GOT INTO FUNNCTION%s"
 1530      494E544F 
 1530      2046554E 
 1530      4E435449 
 1530      4F4E2573 
 1531              	.LC41:
 1532 010f 7200     		.string	"r"
 1533              		.section	.text.unlikely
 1534              	.LCOLDB42:
 1535              		.text
 1536              	.LHOTB42:
 1537 0504 6690662E 		.p2align 4,,15
 1537      0F1F8400 
 1537      00000000 
 1538              		.globl	read_table
 1540              	read_table:
 1541              	.LFB68:
 1542              		.cfi_startproc
 1543 0510 4156     		pushq	%r14
 1544              		.cfi_def_cfa_offset 16
 1545              		.cfi_offset 14, -16
 1546 0512 4155     		pushq	%r13
 1547              		.cfi_def_cfa_offset 24
 1548              		.cfi_offset 13, -24
 1549 0514 4889FA   		movq	%rdi, %rdx
 1550 0517 4154     		pushq	%r12
 1551              		.cfi_def_cfa_offset 32
 1552              		.cfi_offset 12, -32
 1553 0519 55       		pushq	%rbp
 1554              		.cfi_def_cfa_offset 40
 1555              		.cfi_offset 6, -40
 1556 051a 31C0     		xorl	%eax, %eax
 1557 051c 53       		pushq	%rbx
 1558              		.cfi_def_cfa_offset 48
 1559              		.cfi_offset 3, -48
 1560 051d 4989F5   		movq	%rsi, %r13
 1561 0520 4889FB   		movq	%rdi, %rbx
 1562 0523 BE000000 		movl	$.LC40, %esi
 1562      00
 1563 0528 BF010000 		movl	$1, %edi
 1563      00
 1564 052d E8000000 		call	__printf_chk
 1564      00
 1565 0532 BE000000 		movl	$.LC41, %esi
 1565      00
 1566 0537 4889DF   		movq	%rbx, %rdi
 1567 053a E8000000 		call	fopen
 1567      00
 1568 053f 4885C0   		testq	%rax, %rax
 1569 0542 745A     		je	.L231
 1570 0544 4889C3   		movq	%rax, %rbx
 1571 0547 31ED     		xorl	%ebp, %ebp
 1572 0549 4531E4   		xorl	%r12d, %r12d
 1573 054c 0F1F4000 		.p2align 4,,10
 1574              		.p2align 3
 1575              	.L232:
 1576 0550 4889DF   		movq	%rbx, %rdi
 1577 0553 E8000000 		call	_IO_getc
 1577      00
 1578 0558 3CFF     		cmpb	$-1, %al
 1579 055a 743A     		je	.L240
 1580              	.L235:
 1581 055c 3C20     		cmpb	$32, %al
 1582 055e 74F0     		je	.L232
 1583 0560 3C2C     		cmpb	$44, %al
 1584 0562 74EC     		je	.L232
 1585 0564 8D50D0   		leal	-48(%rax), %edx
 1586 0567 80FA09   		cmpb	$9, %dl
 1587 056a 7744     		ja	.L234
 1588 056c 4963D4   		movslq	%r12d, %rdx
 1589 056f 0FBEC0   		movsbl	%al, %eax
 1590 0572 4863CD   		movslq	%ebp, %rcx
 1591 0575 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 1592 0579 83E830   		subl	$48, %eax
 1593 057c 4889DF   		movq	%rbx, %rdi
 1594 057f 83C501   		addl	$1, %ebp
 1595 0582 4589E6   		movl	%r12d, %r14d
 1596 0585 498D5495 		leaq	0(%r13,%rdx,4), %rdx
 1596      00
 1597 058a 89048A   		movl	%eax, (%rdx,%rcx,4)
 1598 058d E8000000 		call	_IO_getc
 1598      00
 1599 0592 3CFF     		cmpb	$-1, %al
 1600 0594 75C6     		jne	.L235
 1601              	.L240:
 1602 0596 4889DF   		movq	%rbx, %rdi
 1603 0599 E8000000 		call	fclose
 1603      00
 1604              	.L231:
 1605 059e 5B       		popq	%rbx
 1606              		.cfi_remember_state
 1607              		.cfi_def_cfa_offset 40
 1608 059f 418D4601 		leal	1(%r14), %eax
 1609 05a3 5D       		popq	%rbp
 1610              		.cfi_def_cfa_offset 32
 1611 05a4 415C     		popq	%r12
 1612              		.cfi_def_cfa_offset 24
 1613 05a6 415D     		popq	%r13
 1614              		.cfi_def_cfa_offset 16
 1615 05a8 415E     		popq	%r14
 1616              		.cfi_def_cfa_offset 8
 1617 05aa C3       		ret
 1618 05ab 0F1F4400 		.p2align 4,,10
 1618      00
 1619              		.p2align 3
 1620              	.L234:
 1621              		.cfi_restore_state
 1622 05b0 3C0A     		cmpb	$10, %al
 1623 05b2 759C     		jne	.L232
 1624 05b4 4183C401 		addl	$1, %r12d
 1625 05b8 31ED     		xorl	%ebp, %ebp
 1626 05ba EB94     		jmp	.L232
 1627              		.cfi_endproc
 1628              	.LFE68:
 1630              		.section	.text.unlikely
 1631              	.LCOLDE42:
 1632              		.text
 1633              	.LHOTE42:
 1634              		.section	.text.unlikely
 1635              	.LCOLDB43:
 1636              		.text
 1637              	.LHOTB43:
 1638 05bc 0F1F4000 		.p2align 4,,15
 1639              		.globl	boolToHex
 1641              	boolToHex:
 1642              	.LFB69:
 1643              		.cfi_startproc
 1644 05c0 53       		pushq	%rbx
 1645              		.cfi_def_cfa_offset 16
 1646              		.cfi_offset 3, -16
 1647 05c1 4889FB   		movq	%rdi, %rbx
 1648 05c4 BF090000 		movl	$9, %edi
 1648      00
 1649 05c9 E8000000 		call	malloc
 1649      00
 1650 05ce 31F6     		xorl	%esi, %esi
 1651 05d0 803B31   		cmpb	$49, (%rbx)
 1652 05d3 4C8B0500 		movq	mm(%rip), %r8
 1652      000000
 1653 05da 488D7B01 		leaq	1(%rbx), %rdi
 1654 05de BA010000 		movl	$1, %edx
 1654      00
 1655 05e3 41B90100 		movl	$1, %r9d
 1655      0000
 1656 05e9 400F94C6 		sete	%sil
 1657 05ed EB2B     		jmp	.L244
 1658 05ef 90       		.p2align 4,,10
 1659              		.p2align 3
 1660              	.L248:
 1661 05f0 4863F6   		movslq	%esi, %rsi
 1662 05f3 89D1     		movl	%edx, %ecx
 1663 05f5 410FB634 		movzbl	(%r8,%rsi), %esi
 1663      30
 1664 05fa C1F902   		sarl	$2, %ecx
 1665 05fd 4863C9   		movslq	%ecx, %rcx
 1666 0600 40887408 		movb	%sil, -1(%rax,%rcx)
 1666      FF
 1667 0605 31F6     		xorl	%esi, %esi
 1668 0607 803F31   		cmpb	$49, (%rdi)
 1669 060a 400F94C6 		sete	%sil
 1670              	.L243:
 1671 060e 83C201   		addl	$1, %edx
 1672 0611 4883C701 		addq	$1, %rdi
 1673 0615 83FA20   		cmpl	$32, %edx
 1674 0618 741F     		je	.L247
 1675              	.L244:
 1676 061a 89D1     		movl	%edx, %ecx
 1677 061c 83E103   		andl	$3, %ecx
 1678 061f 74CF     		je	.L248
 1679 0621 803F31   		cmpb	$49, (%rdi)
 1680 0624 75E8     		jne	.L243
 1681 0626 4489CB   		movl	%r9d, %ebx
 1682 0629 83C201   		addl	$1, %edx
 1683 062c 4883C701 		addq	$1, %rdi
 1684 0630 D3E3     		sall	%cl, %ebx
 1685 0632 01DE     		addl	%ebx, %esi
 1686 0634 83FA20   		cmpl	$32, %edx
 1687 0637 75E1     		jne	.L244
 1688              	.L247:
 1689 0639 0FB610   		movzbl	(%rax), %edx
 1690 063c 4863F6   		movslq	%esi, %rsi
 1691 063f 410FB60C 		movzbl	(%r8,%rsi), %ecx
 1691      30
 1692 0644 0FB67001 		movzbl	1(%rax), %esi
 1693 0648 C6400800 		movb	$0, 8(%rax)
 1694 064c 885001   		movb	%dl, 1(%rax)
 1695 064f 0FB65002 		movzbl	2(%rax), %edx
 1696 0653 408830   		movb	%sil, (%rax)
 1697 0656 0FB67003 		movzbl	3(%rax), %esi
 1698 065a 885003   		movb	%dl, 3(%rax)
 1699 065d 0FB65004 		movzbl	4(%rax), %edx
 1700 0661 40887002 		movb	%sil, 2(%rax)
 1701 0665 0FB67005 		movzbl	5(%rax), %esi
 1702 0669 885005   		movb	%dl, 5(%rax)
 1703 066c 0FB65006 		movzbl	6(%rax), %edx
 1704 0670 40887004 		movb	%sil, 4(%rax)
 1705 0674 884806   		movb	%cl, 6(%rax)
 1706 0677 885007   		movb	%dl, 7(%rax)
 1707 067a 5B       		popq	%rbx
 1708              		.cfi_def_cfa_offset 8
 1709 067b C3       		ret
 1710              		.cfi_endproc
 1711              	.LFE69:
 1713              		.section	.text.unlikely
 1714              	.LCOLDE43:
 1715              		.text
 1716              	.LHOTE43:
 1717              		.section	.rodata.str1.1
 1718              	.LC44:
 1719 0111 25642020 		.string	"%d                       %d\n"
 1719      20202020 
 1719      20202020 
 1719      20202020 
 1719      20202020 
 1720              		.section	.text.unlikely
 1721              	.LCOLDB45:
 1722              		.text
 1723              	.LHOTB45:
 1724 067c 0F1F4000 		.p2align 4,,15
 1725              		.globl	get_coordinate
 1727              	get_coordinate:
 1728              	.LFB70:
 1729              		.cfi_startproc
 1730 0680 C7060000 		movl	$0, (%rsi)
 1730      0000
 1731 0686 C7020000 		movl	$0, (%rdx)
 1731      0000
 1732 068c 803F31   		cmpb	$49, (%rdi)
 1733 068f 743F     		je	.L258
 1734 0691 807F0131 		cmpb	$49, 1(%rdi)
 1735 0695 7442     		je	.L259
 1736              	.L251:
 1737 0697 807F0231 		cmpb	$49, 2(%rdi)
 1738 069b 7445     		je	.L260
 1739              	.L252:
 1740 069d 807F0331 		cmpb	$49, 3(%rdi)
 1741 06a1 7448     		je	.L261
 1742              	.L253:
 1743 06a3 807F0431 		cmpb	$49, 4(%rdi)
 1744 06a7 8B0A     		movl	(%rdx), %ecx
 1745 06a9 744B     		je	.L262
 1746              	.L254:
 1747 06ab 807F0531 		cmpb	$49, 5(%rdi)
 1748 06af 7450     		je	.L263
 1749              	.L255:
 1750 06b1 807F0631 		cmpb	$49, 6(%rdi)
 1751 06b5 7455     		je	.L264
 1752              	.L256:
 1753 06b7 807F0731 		cmpb	$49, 7(%rdi)
 1754 06bb 745A     		je	.L265
 1755              	.L257:
 1756 06bd 8B16     		movl	(%rsi), %edx
 1757 06bf BF010000 		movl	$1, %edi
 1757      00
 1758 06c4 BE000000 		movl	$.LC44, %esi
 1758      00
 1759 06c9 31C0     		xorl	%eax, %eax
 1760 06cb E9000000 		jmp	__printf_chk
 1760      00
 1761              		.p2align 4,,10
 1762              		.p2align 3
 1763              	.L258:
 1764 06d0 830601   		addl	$1, (%rsi)
 1765 06d3 807F0131 		cmpb	$49, 1(%rdi)
 1766 06d7 75BE     		jne	.L251
 1767              	.L259:
 1768 06d9 830602   		addl	$2, (%rsi)
 1769 06dc 807F0231 		cmpb	$49, 2(%rdi)
 1770 06e0 75BB     		jne	.L252
 1771              	.L260:
 1772 06e2 830604   		addl	$4, (%rsi)
 1773 06e5 807F0331 		cmpb	$49, 3(%rdi)
 1774 06e9 75B8     		jne	.L253
 1775              	.L261:
 1776 06eb 830608   		addl	$8, (%rsi)
 1777 06ee 807F0431 		cmpb	$49, 4(%rdi)
 1778 06f2 8B0A     		movl	(%rdx), %ecx
 1779 06f4 75B5     		jne	.L254
 1780              	.L262:
 1781 06f6 83C101   		addl	$1, %ecx
 1782 06f9 890A     		movl	%ecx, (%rdx)
 1783 06fb 807F0531 		cmpb	$49, 5(%rdi)
 1784 06ff 75B0     		jne	.L255
 1785              	.L263:
 1786 0701 83C102   		addl	$2, %ecx
 1787 0704 890A     		movl	%ecx, (%rdx)
 1788 0706 807F0631 		cmpb	$49, 6(%rdi)
 1789 070a 75AB     		jne	.L256
 1790              	.L264:
 1791 070c 83C104   		addl	$4, %ecx
 1792 070f 890A     		movl	%ecx, (%rdx)
 1793 0711 807F0731 		cmpb	$49, 7(%rdi)
 1794 0715 75A6     		jne	.L257
 1795              	.L265:
 1796 0717 83C108   		addl	$8, %ecx
 1797 071a 890A     		movl	%ecx, (%rdx)
 1798 071c EB9F     		jmp	.L257
 1799              		.cfi_endproc
 1800              	.LFE70:
 1802              		.section	.text.unlikely
 1803              	.LCOLDE45:
 1804              		.text
 1805              	.LHOTE45:
 1806              		.section	.text.unlikely
 1807              	.LCOLDB46:
 1808              		.text
 1809              	.LHOTB46:
 1810 071e 6690     		.p2align 4,,15
 1811              		.globl	func
 1813              	func:
 1814              	.LFB71:
 1815              		.cfi_startproc
 1816 0720 4156     		pushq	%r14
 1817              		.cfi_def_cfa_offset 16
 1818              		.cfi_offset 14, -16
 1819 0722 4155     		pushq	%r13
 1820              		.cfi_def_cfa_offset 24
 1821              		.cfi_offset 13, -24
 1822 0724 4989D6   		movq	%rdx, %r14
 1823 0727 4154     		pushq	%r12
 1824              		.cfi_def_cfa_offset 32
 1825              		.cfi_offset 12, -32
 1826 0729 55       		pushq	%rbp
 1827              		.cfi_def_cfa_offset 40
 1828              		.cfi_offset 6, -40
 1829 072a 89FD     		movl	%edi, %ebp
 1830 072c 53       		pushq	%rbx
 1831              		.cfi_def_cfa_offset 48
 1832              		.cfi_offset 3, -48
 1833 072d BF410000 		movl	$65, %edi
 1833      00
 1834 0732 4189CD   		movl	%ecx, %r13d
 1835 0735 4189F4   		movl	%esi, %r12d
 1836 0738 E8000000 		call	malloc
 1836      00
 1837 073d BE010000 		movl	$1, %esi
 1837      00
 1838 0742 BF080000 		movl	$8, %edi
 1838      00
 1839 0747 4889C3   		movq	%rax, %rbx
 1840 074a E8000000 		call	calloc
 1840      00
 1841 074f 4585ED   		testl	%r13d, %r13d
 1842 0752 0F8E6801 		jle	.L286
 1842      0000
 1843 0758 418D4DFF 		leal	-1(%r13), %ecx
 1844 075c 4C89F2   		movq	%r14, %rdx
 1845 075f 488D4C89 		leaq	5(%rcx,%rcx,4), %rcx
 1845      05
 1846 0764 498D348E 		leaq	(%r14,%rcx,4), %rsi
 1847 0768 EB13     		jmp	.L285
 1848 076a 660F1F44 		.p2align 4,,10
 1848      0000
 1849              		.p2align 3
 1850              	.L277:
 1851 0770 4883C214 		addq	$20, %rdx
 1852 0774 4839F2   		cmpq	%rsi, %rdx
 1853 0777 0F844301 		je	.L286
 1853      0000
 1854              	.L285:
 1855 077d 392A     		cmpl	%ebp, (%rdx)
 1856 077f 75EF     		jne	.L277
 1857 0781 44396204 		cmpl	%r12d, 4(%rdx)
 1858 0785 75E9     		jne	.L277
 1859 0787 48637A08 		movslq	8(%rdx), %rdi
 1860 078b 8B4A10   		movl	16(%rdx), %ecx
 1861 078e 448D5703 		leal	3(%rdi), %r10d
 1862 0792 85FF     		testl	%edi, %edi
 1863 0794 448D04FD 		leal	0(,%rdi,8), %r8d
 1863      00000000 
 1864 079c C6043801 		movb	$1, (%rax,%rdi)
 1865 07a0 440F49D7 		cmovns	%edi, %r10d
 1866 07a4 4D63C0   		movslq	%r8d, %r8
 1867 07a7 4589D1   		movl	%r10d, %r9d
 1868 07aa 41C1EA1F 		shrl	$31, %r10d
 1869 07ae 42C60403 		movb	$49, (%rbx,%r8)
 1869      31
 1870 07b3 41C1F902 		sarl	$2, %r9d
 1871 07b7 4501D1   		addl	%r10d, %r9d
 1872 07ba 4183E101 		andl	$1, %r9d
 1873 07be 4529D1   		subl	%r10d, %r9d
 1874 07c1 4189FA   		movl	%edi, %r10d
 1875 07c4 4183F901 		cmpl	$1, %r9d
 1876 07c8 410F94C1 		sete	%r9b
 1877 07cc 41C1EA1F 		shrl	$31, %r10d
 1878 07d0 4183C130 		addl	$48, %r9d
 1879 07d4 4101FA   		addl	%edi, %r10d
 1880 07d7 46884C03 		movb	%r9b, 2(%rbx,%r8)
 1880      02
 1881 07dc 4589D1   		movl	%r10d, %r9d
 1882 07df 41C1EA1F 		shrl	$31, %r10d
 1883 07e3 41D1F9   		sarl	%r9d
 1884 07e6 4501D1   		addl	%r10d, %r9d
 1885 07e9 4183E101 		andl	$1, %r9d
 1886 07ed 4529D1   		subl	%r10d, %r9d
 1887 07f0 4189FA   		movl	%edi, %r10d
 1888 07f3 4183F901 		cmpl	$1, %r9d
 1889 07f7 410F94C1 		sete	%r9b
 1890 07fb 41C1EA1F 		shrl	$31, %r10d
 1891 07ff 4183C130 		addl	$48, %r9d
 1892 0803 46884C03 		movb	%r9b, 3(%rbx,%r8)
 1892      03
 1893 0808 468D0C17 		leal	(%rdi,%r10), %r9d
 1894 080c 4183E101 		andl	$1, %r9d
 1895 0810 4529D1   		subl	%r10d, %r9d
 1896 0813 448D5103 		leal	3(%rcx), %r10d
 1897 0817 4183F901 		cmpl	$1, %r9d
 1898 081b 410F94C1 		sete	%r9b
 1899 081f 4183C130 		addl	$48, %r9d
 1900 0823 837A0C01 		cmpl	$1, 12(%rdx)
 1901 0827 46884C03 		movb	%r9b, 4(%rbx,%r8)
 1901      04
 1902 082c 410F94C1 		sete	%r9b
 1903 0830 4183C130 		addl	$48, %r9d
 1904 0834 85C9     		testl	%ecx, %ecx
 1905 0836 440F49D1 		cmovns	%ecx, %r10d
 1906 083a 46884C03 		movb	%r9b, 1(%rbx,%r8)
 1906      01
 1907 083f 4589D1   		movl	%r10d, %r9d
 1908 0842 41C1EA1F 		shrl	$31, %r10d
 1909 0846 41C1F902 		sarl	$2, %r9d
 1910 084a 4501D1   		addl	%r10d, %r9d
 1911 084d 4183E101 		andl	$1, %r9d
 1912 0851 4529D1   		subl	%r10d, %r9d
 1913 0854 4189CA   		movl	%ecx, %r10d
 1914 0857 4183F901 		cmpl	$1, %r9d
 1915 085b 410F94C1 		sete	%r9b
 1916 085f 41C1EA1F 		shrl	$31, %r10d
 1917 0863 4101CA   		addl	%ecx, %r10d
 1918 0866 4183C130 		addl	$48, %r9d
 1919 086a 46884C03 		movb	%r9b, 5(%rbx,%r8)
 1919      05
 1920 086f 4589D1   		movl	%r10d, %r9d
 1921 0872 41C1EA1F 		shrl	$31, %r10d
 1922 0876 41D1F9   		sarl	%r9d
 1923 0879 4501D1   		addl	%r10d, %r9d
 1924 087c 4183E101 		andl	$1, %r9d
 1925 0880 4529D1   		subl	%r10d, %r9d
 1926 0883 4183F901 		cmpl	$1, %r9d
 1927 0887 410F94C1 		sete	%r9b
 1928 088b 4183C130 		addl	$48, %r9d
 1929 088f 46884C03 		movb	%r9b, 6(%rbx,%r8)
 1929      06
 1930 0894 4189C9   		movl	%ecx, %r9d
 1931 0897 41C1E91F 		shrl	$31, %r9d
 1932 089b 4401C9   		addl	%r9d, %ecx
 1933 089e 83E101   		andl	$1, %ecx
 1934 08a1 4429C9   		subl	%r9d, %ecx
 1935 08a4 83F901   		cmpl	$1, %ecx
 1936 08a7 0F94C1   		sete	%cl
 1937 08aa 4883C214 		addq	$20, %rdx
 1938 08ae 83C130   		addl	$48, %ecx
 1939 08b1 4839F2   		cmpq	%rsi, %rdx
 1940 08b4 42884C03 		movb	%cl, 7(%rbx,%r8)
 1940      07
 1941 08b9 0F85BEFE 		jne	.L285
 1941      FFFF
 1942 08bf 90       		.p2align 4,,10
 1943              		.p2align 3
 1944              	.L286:
 1945 08c0 803800   		cmpb	$0, (%rax)
 1946 08c3 751F     		jne	.L268
 1947 08c5 C6430230 		movb	$48, 2(%rbx)
 1948 08c9 C6430330 		movb	$48, 3(%rbx)
 1949 08cd C6430430 		movb	$48, 4(%rbx)
 1950 08d1 C60330   		movb	$48, (%rbx)
 1951 08d4 C6430130 		movb	$48, 1(%rbx)
 1952 08d8 C6430530 		movb	$48, 5(%rbx)
 1953 08dc C6430630 		movb	$48, 6(%rbx)
 1954 08e0 C6430730 		movb	$48, 7(%rbx)
 1955              	.L268:
 1956 08e4 80780100 		cmpb	$0, 1(%rax)
 1957 08e8 7520     		jne	.L269
 1958 08ea C6430A30 		movb	$48, 10(%rbx)
 1959 08ee C6430B30 		movb	$48, 11(%rbx)
 1960 08f2 C6430C31 		movb	$49, 12(%rbx)
 1961 08f6 C6430830 		movb	$48, 8(%rbx)
 1962 08fa C6430930 		movb	$48, 9(%rbx)
 1963 08fe C6430D30 		movb	$48, 13(%rbx)
 1964 0902 C6430E30 		movb	$48, 14(%rbx)
 1965 0906 C6430F30 		movb	$48, 15(%rbx)
 1966              	.L269:
 1967 090a 80780200 		cmpb	$0, 2(%rax)
 1968 090e 7520     		jne	.L270
 1969 0910 C6431230 		movb	$48, 18(%rbx)
 1970 0914 C6431331 		movb	$49, 19(%rbx)
 1971 0918 C6431430 		movb	$48, 20(%rbx)
 1972 091c C6431030 		movb	$48, 16(%rbx)
 1973 0920 C6431130 		movb	$48, 17(%rbx)
 1974 0924 C6431530 		movb	$48, 21(%rbx)
 1975 0928 C6431630 		movb	$48, 22(%rbx)
 1976 092c C6431730 		movb	$48, 23(%rbx)
 1977              	.L270:
 1978 0930 80780300 		cmpb	$0, 3(%rax)
 1979 0934 7520     		jne	.L271
 1980 0936 C6431A30 		movb	$48, 26(%rbx)
 1981 093a C6431B31 		movb	$49, 27(%rbx)
 1982 093e C6431C31 		movb	$49, 28(%rbx)
 1983 0942 C6431830 		movb	$48, 24(%rbx)
 1984 0946 C6431930 		movb	$48, 25(%rbx)
 1985 094a C6431D30 		movb	$48, 29(%rbx)
 1986 094e C6431E30 		movb	$48, 30(%rbx)
 1987 0952 C6431F30 		movb	$48, 31(%rbx)
 1988              	.L271:
 1989 0956 80780400 		cmpb	$0, 4(%rax)
 1990 095a 7520     		jne	.L272
 1991 095c C6432231 		movb	$49, 34(%rbx)
 1992 0960 C6432330 		movb	$48, 35(%rbx)
 1993 0964 C6432430 		movb	$48, 36(%rbx)
 1994 0968 C6432030 		movb	$48, 32(%rbx)
 1995 096c C6432130 		movb	$48, 33(%rbx)
 1996 0970 C6432530 		movb	$48, 37(%rbx)
 1997 0974 C6432630 		movb	$48, 38(%rbx)
 1998 0978 C6432730 		movb	$48, 39(%rbx)
 1999              	.L272:
 2000 097c 80780500 		cmpb	$0, 5(%rax)
 2001 0980 7520     		jne	.L273
 2002 0982 C6432A31 		movb	$49, 42(%rbx)
 2003 0986 C6432B30 		movb	$48, 43(%rbx)
 2004 098a C6432C31 		movb	$49, 44(%rbx)
 2005 098e C6432830 		movb	$48, 40(%rbx)
 2006 0992 C6432930 		movb	$48, 41(%rbx)
 2007 0996 C6432D30 		movb	$48, 45(%rbx)
 2008 099a C6432E30 		movb	$48, 46(%rbx)
 2009 099e C6432F30 		movb	$48, 47(%rbx)
 2010              	.L273:
 2011 09a2 80780600 		cmpb	$0, 6(%rax)
 2012 09a6 7520     		jne	.L274
 2013 09a8 C6433231 		movb	$49, 50(%rbx)
 2014 09ac C6433331 		movb	$49, 51(%rbx)
 2015 09b0 C6433430 		movb	$48, 52(%rbx)
 2016 09b4 C6433030 		movb	$48, 48(%rbx)
 2017 09b8 C6433130 		movb	$48, 49(%rbx)
 2018 09bc C6433530 		movb	$48, 53(%rbx)
 2019 09c0 C6433630 		movb	$48, 54(%rbx)
 2020 09c4 C6433730 		movb	$48, 55(%rbx)
 2021              	.L274:
 2022 09c8 80780700 		cmpb	$0, 7(%rax)
 2023 09cc 7520     		jne	.L275
 2024 09ce C6433A31 		movb	$49, 58(%rbx)
 2025 09d2 C6433B31 		movb	$49, 59(%rbx)
 2026 09d6 C6433C31 		movb	$49, 60(%rbx)
 2027 09da C6433830 		movb	$48, 56(%rbx)
 2028 09de C6433930 		movb	$48, 57(%rbx)
 2029 09e2 C6433D30 		movb	$48, 61(%rbx)
 2030 09e6 C6433E30 		movb	$48, 62(%rbx)
 2031 09ea C6433F30 		movb	$48, 63(%rbx)
 2032              	.L275:
 2033 09ee 4889D8   		movq	%rbx, %rax
 2034 09f1 C6434000 		movb	$0, 64(%rbx)
 2035 09f5 5B       		popq	%rbx
 2036              		.cfi_def_cfa_offset 40
 2037 09f6 5D       		popq	%rbp
 2038              		.cfi_def_cfa_offset 32
 2039 09f7 415C     		popq	%r12
 2040              		.cfi_def_cfa_offset 24
 2041 09f9 415D     		popq	%r13
 2042              		.cfi_def_cfa_offset 16
 2043 09fb 415E     		popq	%r14
 2044              		.cfi_def_cfa_offset 8
 2045 09fd C3       		ret
 2046              		.cfi_endproc
 2047              	.LFE71:
 2049              		.section	.text.unlikely
 2050              	.LCOLDE46:
 2051              		.text
 2052              	.LHOTE46:
 2053              		.section	.text.unlikely
 2054              	.LCOLDB47:
 2055              		.text
 2056              	.LHOTB47:
 2057 09fe 6690     		.p2align 4,,15
 2058              		.globl	xor
 2060              	xor:
 2061              	.LFB72:
 2062              		.cfi_startproc
 2063 0a00 4038F7   		cmpb	%sil, %dil
 2064 0a03 0F95C0   		setne	%al
 2065 0a06 83C030   		addl	$48, %eax
 2066 0a09 C3       		ret
 2067              		.cfi_endproc
 2068              	.LFE72:
 2070              		.section	.text.unlikely
 2071              	.LCOLDE47:
 2072              		.text
 2073              	.LHOTE47:
 2074              		.section	.text.unlikely
 2075              	.LCOLDB48:
 2076              		.text
 2077              	.LHOTB48:
 2078 0a0a 660F1F44 		.p2align 4,,15
 2078      0000
 2079              		.globl	and
 2081              	and:
 2082              	.LFB73:
 2083              		.cfi_startproc
 2084 0a10 4080FF31 		cmpb	$49, %dil
 2085 0a14 7512     		jne	.L305
 2086 0a16 4080FE31 		cmpb	$49, %sil
 2087 0a1a B8310000 		movl	$49, %eax
 2087      00
 2088 0a1f 7507     		jne	.L305
 2089 0a21 F3C3     		rep ret
 2090              		.p2align 4,,10
 2091 0a23 0F1F4400 		.p2align 3
 2091      00
 2092              	.L305:
 2093 0a28 B8300000 		movl	$48, %eax
 2093      00
 2094 0a2d C3       		ret
 2095              		.cfi_endproc
 2096              	.LFE73:
 2098              		.section	.text.unlikely
 2099              	.LCOLDE48:
 2100              		.text
 2101              	.LHOTE48:
 2102              		.section	.text.unlikely
 2103              	.LCOLDB51:
 2104              		.text
 2105              	.LHOTB51:
 2106 0a2e 6690     		.p2align 4,,15
 2107              		.globl	decrypt
 2109              	decrypt:
 2110              	.LFB74:
 2111              		.cfi_startproc
 2112 0a30 4157     		pushq	%r15
 2113              		.cfi_def_cfa_offset 16
 2114              		.cfi_offset 15, -16
 2115 0a32 4156     		pushq	%r14
 2116              		.cfi_def_cfa_offset 24
 2117              		.cfi_offset 14, -24
 2118 0a34 4155     		pushq	%r13
 2119              		.cfi_def_cfa_offset 32
 2120              		.cfi_offset 13, -32
 2121 0a36 4154     		pushq	%r12
 2122              		.cfi_def_cfa_offset 40
 2123              		.cfi_offset 12, -40
 2124 0a38 4989F5   		movq	%rsi, %r13
 2125 0a3b 55       		pushq	%rbp
 2126              		.cfi_def_cfa_offset 48
 2127              		.cfi_offset 6, -48
 2128 0a3c 53       		pushq	%rbx
 2129              		.cfi_def_cfa_offset 56
 2130              		.cfi_offset 3, -56
 2131 0a3d 4889FD   		movq	%rdi, %rbp
 2132 0a40 BF210000 		movl	$33, %edi
 2132      00
 2133 0a45 4883EC08 		subq	$8, %rsp
 2134              		.cfi_def_cfa_offset 64
 2135 0a49 E8000000 		call	malloc
 2135      00
 2136 0a4e 4C89EA   		movq	%r13, %rdx
 2137 0a51 4889C3   		movq	%rax, %rbx
 2138 0a54 48F7DA   		negq	%rdx
 2139 0a57 83E20F   		andl	$15, %edx
 2140 0a5a 0F845508 		je	.L388
 2140      0000
 2141 0a60 31C0     		xorl	%eax, %eax
 2142 0a62 41807D00 		cmpb	$48, 0(%r13)
 2142      30
 2143 0a67 0F94C0   		sete	%al
 2144 0a6a 83FA01   		cmpl	$1, %edx
 2145 0a6d 0F840C09 		je	.L389
 2145      0000
 2146 0a73 31C9     		xorl	%ecx, %ecx
 2147 0a75 41807D01 		cmpb	$48, 1(%r13)
 2147      30
 2148 0a7a 0F94C1   		sete	%cl
 2149 0a7d 01C8     		addl	%ecx, %eax
 2150 0a7f 83FA02   		cmpl	$2, %edx
 2151 0a82 0F840609 		je	.L390
 2151      0000
 2152 0a88 31C9     		xorl	%ecx, %ecx
 2153 0a8a 41807D02 		cmpb	$48, 2(%r13)
 2153      30
 2154 0a8f 0F94C1   		sete	%cl
 2155 0a92 01C8     		addl	%ecx, %eax
 2156 0a94 83FA03   		cmpl	$3, %edx
 2157 0a97 0F840009 		je	.L391
 2157      0000
 2158 0a9d 31C9     		xorl	%ecx, %ecx
 2159 0a9f 41807D03 		cmpb	$48, 3(%r13)
 2159      30
 2160 0aa4 0F94C1   		sete	%cl
 2161 0aa7 01C8     		addl	%ecx, %eax
 2162 0aa9 83FA04   		cmpl	$4, %edx
 2163 0aac 0F84FA08 		je	.L392
 2163      0000
 2164 0ab2 31C9     		xorl	%ecx, %ecx
 2165 0ab4 41807D04 		cmpb	$48, 4(%r13)
 2165      30
 2166 0ab9 0F94C1   		sete	%cl
 2167 0abc 01C8     		addl	%ecx, %eax
 2168 0abe 83FA05   		cmpl	$5, %edx
 2169 0ac1 0F84F408 		je	.L393
 2169      0000
 2170 0ac7 31C9     		xorl	%ecx, %ecx
 2171 0ac9 41807D05 		cmpb	$48, 5(%r13)
 2171      30
 2172 0ace 0F94C1   		sete	%cl
 2173 0ad1 01C8     		addl	%ecx, %eax
 2174 0ad3 83FA06   		cmpl	$6, %edx
 2175 0ad6 0F84EE08 		je	.L394
 2175      0000
 2176 0adc 31C9     		xorl	%ecx, %ecx
 2177 0ade 41807D06 		cmpb	$48, 6(%r13)
 2177      30
 2178 0ae3 0F94C1   		sete	%cl
 2179 0ae6 01C8     		addl	%ecx, %eax
 2180 0ae8 83FA07   		cmpl	$7, %edx
 2181 0aeb 0F84E808 		je	.L395
 2181      0000
 2182 0af1 31C9     		xorl	%ecx, %ecx
 2183 0af3 41807D07 		cmpb	$48, 7(%r13)
 2183      30
 2184 0af8 0F94C1   		sete	%cl
 2185 0afb 01C8     		addl	%ecx, %eax
 2186 0afd 83FA08   		cmpl	$8, %edx
 2187 0b00 0F84E208 		je	.L396
 2187      0000
 2188 0b06 31C9     		xorl	%ecx, %ecx
 2189 0b08 41807D08 		cmpb	$48, 8(%r13)
 2189      30
 2190 0b0d 0F94C1   		sete	%cl
 2191 0b10 01C8     		addl	%ecx, %eax
 2192 0b12 83FA09   		cmpl	$9, %edx
 2193 0b15 0F84DC08 		je	.L397
 2193      0000
 2194 0b1b 31C9     		xorl	%ecx, %ecx
 2195 0b1d 41807D09 		cmpb	$48, 9(%r13)
 2195      30
 2196 0b22 0F94C1   		sete	%cl
 2197 0b25 01C8     		addl	%ecx, %eax
 2198 0b27 83FA0A   		cmpl	$10, %edx
 2199 0b2a 0F84D608 		je	.L398
 2199      0000
 2200 0b30 31C9     		xorl	%ecx, %ecx
 2201 0b32 41807D0A 		cmpb	$48, 10(%r13)
 2201      30
 2202 0b37 0F94C1   		sete	%cl
 2203 0b3a 01C8     		addl	%ecx, %eax
 2204 0b3c 83FA0B   		cmpl	$11, %edx
 2205 0b3f 0F84D008 		je	.L399
 2205      0000
 2206 0b45 31C9     		xorl	%ecx, %ecx
 2207 0b47 41807D0B 		cmpb	$48, 11(%r13)
 2207      30
 2208 0b4c 0F94C1   		sete	%cl
 2209 0b4f 01C8     		addl	%ecx, %eax
 2210 0b51 83FA0C   		cmpl	$12, %edx
 2211 0b54 0F84CA08 		je	.L400
 2211      0000
 2212 0b5a 31C9     		xorl	%ecx, %ecx
 2213 0b5c 41807D0C 		cmpb	$48, 12(%r13)
 2213      30
 2214 0b61 0F94C1   		sete	%cl
 2215 0b64 01C8     		addl	%ecx, %eax
 2216 0b66 83FA0D   		cmpl	$13, %edx
 2217 0b69 0F84C408 		je	.L401
 2217      0000
 2218 0b6f 31C9     		xorl	%ecx, %ecx
 2219 0b71 41807D0D 		cmpb	$48, 13(%r13)
 2219      30
 2220 0b76 0F94C1   		sete	%cl
 2221 0b79 01C8     		addl	%ecx, %eax
 2222 0b7b 83FA0F   		cmpl	$15, %edx
 2223 0b7e 0F85EC07 		jne	.L402
 2223      0000
 2224 0b84 31C9     		xorl	%ecx, %ecx
 2225 0b86 41807D0E 		cmpb	$48, 14(%r13)
 2225      30
 2226 0b8b BE110000 		movl	$17, %esi
 2226      00
 2227 0b90 0F94C1   		sete	%cl
 2228 0b93 01C8     		addl	%ecx, %eax
 2229 0b95 B90F0000 		movl	$15, %ecx
 2229      00
 2230              	.L311:
 2231 0b9a BF200000 		movl	$32, %edi
 2231      00
 2232 0b9f 4189D0   		movl	%edx, %r8d
 2233 0ba2 41B90100 		movl	$1, %r9d
 2233      0000
 2234 0ba8 29D7     		subl	%edx, %edi
 2235 0baa 89FA     		movl	%edi, %edx
 2236 0bac BF100000 		movl	$16, %edi
 2236      00
 2237              	.L310:
 2238 0bb1 4D01E8   		addq	%r13, %r8
 2239 0bb4 660F6F2D 		movdqa	.LC49(%rip), %xmm5
 2239      00000000 
 2240 0bbc 660FEFE4 		pxor	%xmm4, %xmm4
 2241 0bc0 4183F902 		cmpl	$2, %r9d
 2242 0bc4 66410F6F 		movdqa	(%r8), %xmm1
 2242      08
 2243 0bc9 660F6F15 		movdqa	.LC50(%rip), %xmm2
 2243      00000000 
 2244 0bd1 660F74CD 		pcmpeqb	%xmm5, %xmm1
 2245 0bd5 660F6FDC 		movdqa	%xmm4, %xmm3
 2246 0bd9 660FDBCA 		pand	%xmm2, %xmm1
 2247 0bdd 660F64D9 		pcmpgtb	%xmm1, %xmm3
 2248 0be1 660F6FC1 		movdqa	%xmm1, %xmm0
 2249 0be5 660F68CB 		punpckhbw	%xmm3, %xmm1
 2250 0be9 660F60C3 		punpcklbw	%xmm3, %xmm0
 2251 0bed 660FEFDB 		pxor	%xmm3, %xmm3
 2252 0bf1 660F6FF0 		movdqa	%xmm0, %xmm6
 2253 0bf5 660F6FFB 		movdqa	%xmm3, %xmm7
 2254 0bf9 660F65F8 		pcmpgtw	%xmm0, %xmm7
 2255 0bfd 660F61F7 		punpcklwd	%xmm7, %xmm6
 2256 0c01 660F69C7 		punpckhwd	%xmm7, %xmm0
 2257 0c05 660F6FFB 		movdqa	%xmm3, %xmm7
 2258 0c09 660F65F9 		pcmpgtw	%xmm1, %xmm7
 2259 0c0d 660FFEC6 		paddd	%xmm6, %xmm0
 2260 0c11 660F6FF1 		movdqa	%xmm1, %xmm6
 2261 0c15 660F69CF 		punpckhwd	%xmm7, %xmm1
 2262 0c19 660F61F7 		punpcklwd	%xmm7, %xmm6
 2263 0c1d 660FFEC6 		paddd	%xmm6, %xmm0
 2264 0c21 660FFEC1 		paddd	%xmm1, %xmm0
 2265 0c25 7552     		jne	.L312
 2266 0c27 66410F6F 		movdqa	16(%r8), %xmm1
 2266      4810
 2267 0c2d 660F74CD 		pcmpeqb	%xmm5, %xmm1
 2268 0c31 660F6FEB 		movdqa	%xmm3, %xmm5
 2269 0c35 660FDBCA 		pand	%xmm2, %xmm1
 2270 0c39 660F64E1 		pcmpgtb	%xmm1, %xmm4
 2271 0c3d 660F6FD1 		movdqa	%xmm1, %xmm2
 2272 0c41 660F60D4 		punpcklbw	%xmm4, %xmm2
 2273 0c45 660F68CC 		punpckhbw	%xmm4, %xmm1
 2274 0c49 660F65EA 		pcmpgtw	%xmm2, %xmm5
 2275 0c4d 660F6FE2 		movdqa	%xmm2, %xmm4
 2276 0c51 660F65D9 		pcmpgtw	%xmm1, %xmm3
 2277 0c55 660F61E5 		punpcklwd	%xmm5, %xmm4
 2278 0c59 660F69D5 		punpckhwd	%xmm5, %xmm2
 2279 0c5d 660FFEC4 		paddd	%xmm4, %xmm0
 2280 0c61 660FFED0 		paddd	%xmm0, %xmm2
 2281 0c65 660F6FC1 		movdqa	%xmm1, %xmm0
 2282 0c69 660F69CB 		punpckhwd	%xmm3, %xmm1
 2283 0c6d 660F61C3 		punpcklwd	%xmm3, %xmm0
 2284 0c71 660FFEC2 		paddd	%xmm2, %xmm0
 2285 0c75 660FFEC1 		paddd	%xmm1, %xmm0
 2286              	.L312:
 2287 0c79 660F6FC8 		movdqa	%xmm0, %xmm1
 2288 0c7d 29FE     		subl	%edi, %esi
 2289 0c7f 660F73D9 		psrldq	$8, %xmm1
 2289      08
 2290 0c84 660FFEC1 		paddd	%xmm1, %xmm0
 2291 0c88 660F6FC8 		movdqa	%xmm0, %xmm1
 2292 0c8c 660F73D9 		psrldq	$4, %xmm1
 2292      04
 2293 0c91 660FFEC1 		paddd	%xmm1, %xmm0
 2294 0c95 66410F7E 		movd	%xmm0, %r12d
 2294      C4
 2295 0c9a 4101C4   		addl	%eax, %r12d
 2296 0c9d 39D7     		cmpl	%edx, %edi
 2297 0c9f 8D040F   		leal	(%rdi,%rcx), %eax
 2298 0ca2 0F84A101 		je	.L314
 2298      0000
 2299 0ca8 4863D0   		movslq	%eax, %rdx
 2300 0cab 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2300      0030
 2301 0cb1 0F94C2   		sete	%dl
 2302 0cb4 0FB6D2   		movzbl	%dl, %edx
 2303 0cb7 4101D4   		addl	%edx, %r12d
 2304 0cba 83FE01   		cmpl	$1, %esi
 2305 0cbd 8D5001   		leal	1(%rax), %edx
 2306 0cc0 0F848301 		je	.L314
 2306      0000
 2307 0cc6 4863D2   		movslq	%edx, %rdx
 2308 0cc9 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2308      0030
 2309 0ccf 0F94C2   		sete	%dl
 2310 0cd2 0FB6D2   		movzbl	%dl, %edx
 2311 0cd5 4101D4   		addl	%edx, %r12d
 2312 0cd8 83FE02   		cmpl	$2, %esi
 2313 0cdb 8D5002   		leal	2(%rax), %edx
 2314 0cde 0F846501 		je	.L314
 2314      0000
 2315 0ce4 4863D2   		movslq	%edx, %rdx
 2316 0ce7 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2316      0030
 2317 0ced 0F94C2   		sete	%dl
 2318 0cf0 0FB6D2   		movzbl	%dl, %edx
 2319 0cf3 4101D4   		addl	%edx, %r12d
 2320 0cf6 83FE03   		cmpl	$3, %esi
 2321 0cf9 8D5003   		leal	3(%rax), %edx
 2322 0cfc 0F844701 		je	.L314
 2322      0000
 2323 0d02 4863D2   		movslq	%edx, %rdx
 2324 0d05 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2324      0030
 2325 0d0b 0F94C2   		sete	%dl
 2326 0d0e 0FB6D2   		movzbl	%dl, %edx
 2327 0d11 4101D4   		addl	%edx, %r12d
 2328 0d14 83FE04   		cmpl	$4, %esi
 2329 0d17 8D5004   		leal	4(%rax), %edx
 2330 0d1a 0F842901 		je	.L314
 2330      0000
 2331 0d20 4863D2   		movslq	%edx, %rdx
 2332 0d23 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2332      0030
 2333 0d29 0F94C2   		sete	%dl
 2334 0d2c 0FB6D2   		movzbl	%dl, %edx
 2335 0d2f 4101D4   		addl	%edx, %r12d
 2336 0d32 83FE05   		cmpl	$5, %esi
 2337 0d35 8D5005   		leal	5(%rax), %edx
 2338 0d38 0F840B01 		je	.L314
 2338      0000
 2339 0d3e 4863D2   		movslq	%edx, %rdx
 2340 0d41 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2340      0030
 2341 0d47 0F94C2   		sete	%dl
 2342 0d4a 0FB6D2   		movzbl	%dl, %edx
 2343 0d4d 4101D4   		addl	%edx, %r12d
 2344 0d50 83FE06   		cmpl	$6, %esi
 2345 0d53 8D5006   		leal	6(%rax), %edx
 2346 0d56 0F84ED00 		je	.L314
 2346      0000
 2347 0d5c 4863D2   		movslq	%edx, %rdx
 2348 0d5f 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2348      0030
 2349 0d65 0F94C2   		sete	%dl
 2350 0d68 0FB6D2   		movzbl	%dl, %edx
 2351 0d6b 4101D4   		addl	%edx, %r12d
 2352 0d6e 83FE07   		cmpl	$7, %esi
 2353 0d71 8D5007   		leal	7(%rax), %edx
 2354 0d74 0F84CF00 		je	.L314
 2354      0000
 2355 0d7a 4863D2   		movslq	%edx, %rdx
 2356 0d7d 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2356      0030
 2357 0d83 0F94C2   		sete	%dl
 2358 0d86 0FB6D2   		movzbl	%dl, %edx
 2359 0d89 4101D4   		addl	%edx, %r12d
 2360 0d8c 83FE08   		cmpl	$8, %esi
 2361 0d8f 8D5008   		leal	8(%rax), %edx
 2362 0d92 0F84B100 		je	.L314
 2362      0000
 2363 0d98 4863D2   		movslq	%edx, %rdx
 2364 0d9b 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2364      0030
 2365 0da1 0F94C2   		sete	%dl
 2366 0da4 0FB6D2   		movzbl	%dl, %edx
 2367 0da7 4101D4   		addl	%edx, %r12d
 2368 0daa 83FE09   		cmpl	$9, %esi
 2369 0dad 8D5009   		leal	9(%rax), %edx
 2370 0db0 0F849300 		je	.L314
 2370      0000
 2371 0db6 4863D2   		movslq	%edx, %rdx
 2372 0db9 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2372      0030
 2373 0dbf 0F94C2   		sete	%dl
 2374 0dc2 0FB6D2   		movzbl	%dl, %edx
 2375 0dc5 4101D4   		addl	%edx, %r12d
 2376 0dc8 83FE0A   		cmpl	$10, %esi
 2377 0dcb 8D500A   		leal	10(%rax), %edx
 2378 0dce 7479     		je	.L314
 2379 0dd0 4863D2   		movslq	%edx, %rdx
 2380 0dd3 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2380      0030
 2381 0dd9 0F94C2   		sete	%dl
 2382 0ddc 0FB6D2   		movzbl	%dl, %edx
 2383 0ddf 4101D4   		addl	%edx, %r12d
 2384 0de2 83FE0B   		cmpl	$11, %esi
 2385 0de5 8D500B   		leal	11(%rax), %edx
 2386 0de8 745F     		je	.L314
 2387 0dea 4863D2   		movslq	%edx, %rdx
 2388 0ded 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2388      0030
 2389 0df3 0F94C2   		sete	%dl
 2390 0df6 0FB6D2   		movzbl	%dl, %edx
 2391 0df9 4101D4   		addl	%edx, %r12d
 2392 0dfc 83FE0C   		cmpl	$12, %esi
 2393 0dff 8D500C   		leal	12(%rax), %edx
 2394 0e02 7445     		je	.L314
 2395 0e04 4863D2   		movslq	%edx, %rdx
 2396 0e07 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2396      0030
 2397 0e0d 0F94C2   		sete	%dl
 2398 0e10 0FB6D2   		movzbl	%dl, %edx
 2399 0e13 4101D4   		addl	%edx, %r12d
 2400 0e16 83FE0D   		cmpl	$13, %esi
 2401 0e19 8D500D   		leal	13(%rax), %edx
 2402 0e1c 742B     		je	.L314
 2403 0e1e 4863D2   		movslq	%edx, %rdx
 2404 0e21 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2404      0030
 2405 0e27 0F94C2   		sete	%dl
 2406 0e2a 83C00E   		addl	$14, %eax
 2407 0e2d 0FB6D2   		movzbl	%dl, %edx
 2408 0e30 4101D4   		addl	%edx, %r12d
 2409 0e33 83FE0E   		cmpl	$14, %esi
 2410 0e36 7411     		je	.L314
 2411 0e38 4898     		cltq
 2412 0e3a 41807C05 		cmpb	$48, 0(%r13,%rax)
 2412      0030
 2413 0e40 0F94C0   		sete	%al
 2414 0e43 0FB6C0   		movzbl	%al, %eax
 2415 0e46 4101C4   		addl	%eax, %r12d
 2416              	.L314:
 2417 0e49 488B4500 		movq	0(%rbp), %rax
 2418 0e4d BF050000 		movl	$5, %edi
 2418      00
 2419 0e52 C6432000 		movb	$0, 32(%rbx)
 2420 0e56 488903   		movq	%rax, (%rbx)
 2421 0e59 488B4508 		movq	8(%rbp), %rax
 2422 0e5d 48894308 		movq	%rax, 8(%rbx)
 2423 0e61 488B4510 		movq	16(%rbp), %rax
 2424 0e65 48894310 		movq	%rax, 16(%rbx)
 2425 0e69 488B4518 		movq	24(%rbp), %rax
 2426 0e6d 48894318 		movq	%rax, 24(%rbx)
 2427 0e71 E8000000 		call	malloc
 2427      00
 2428 0e76 C6400400 		movb	$0, 4(%rax)
 2429 0e7a 4889C5   		movq	%rax, %rbp
 2430 0e7d 410FB645 		movzbl	7(%r13), %eax
 2430      07
 2431 0e82 41384503 		cmpb	%al, 3(%r13)
 2432 0e86 0F95C0   		setne	%al
 2433 0e89 83C030   		addl	$48, %eax
 2434 0e8c 4138450B 		cmpb	%al, 11(%r13)
 2435 0e90 0F95C0   		setne	%al
 2436 0e93 83C030   		addl	$48, %eax
 2437 0e96 4138450F 		cmpb	%al, 15(%r13)
 2438 0e9a 0F95C0   		setne	%al
 2439 0e9d 83C030   		addl	$48, %eax
 2440 0ea0 41384513 		cmpb	%al, 19(%r13)
 2441 0ea4 0F95C0   		setne	%al
 2442 0ea7 83C030   		addl	$48, %eax
 2443 0eaa 41384517 		cmpb	%al, 23(%r13)
 2444 0eae 0F95C0   		setne	%al
 2445 0eb1 83C030   		addl	$48, %eax
 2446 0eb4 4138451B 		cmpb	%al, 27(%r13)
 2447 0eb8 0F95C0   		setne	%al
 2448 0ebb 83C030   		addl	$48, %eax
 2449 0ebe 4138451F 		cmpb	%al, 31(%r13)
 2450 0ec2 0F95C0   		setne	%al
 2451 0ec5 83C030   		addl	$48, %eax
 2452 0ec8 884503   		movb	%al, 3(%rbp)
 2453 0ecb 410FB645 		movzbl	6(%r13), %eax
 2453      06
 2454 0ed0 41384502 		cmpb	%al, 2(%r13)
 2455 0ed4 0F95C0   		setne	%al
 2456 0ed7 83C030   		addl	$48, %eax
 2457 0eda 4138450A 		cmpb	%al, 10(%r13)
 2458 0ede 0F95C0   		setne	%al
 2459 0ee1 83C030   		addl	$48, %eax
 2460 0ee4 4138450E 		cmpb	%al, 14(%r13)
 2461 0ee8 0F95C0   		setne	%al
 2462 0eeb 83C030   		addl	$48, %eax
 2463 0eee 41384512 		cmpb	%al, 18(%r13)
 2464 0ef2 0F95C0   		setne	%al
 2465 0ef5 83C030   		addl	$48, %eax
 2466 0ef8 41384516 		cmpb	%al, 22(%r13)
 2467 0efc 0F95C0   		setne	%al
 2468 0eff 83C030   		addl	$48, %eax
 2469 0f02 4138451A 		cmpb	%al, 26(%r13)
 2470 0f06 0F95C0   		setne	%al
 2471 0f09 83C030   		addl	$48, %eax
 2472 0f0c 4138451E 		cmpb	%al, 30(%r13)
 2473 0f10 0F95C0   		setne	%al
 2474 0f13 83C030   		addl	$48, %eax
 2475 0f16 884502   		movb	%al, 2(%rbp)
 2476 0f19 410FB645 		movzbl	5(%r13), %eax
 2476      05
 2477 0f1e 41384501 		cmpb	%al, 1(%r13)
 2478 0f22 0F95C0   		setne	%al
 2479 0f25 83C030   		addl	$48, %eax
 2480 0f28 413A4509 		cmpb	9(%r13), %al
 2481 0f2c 0F95C0   		setne	%al
 2482 0f2f 83C030   		addl	$48, %eax
 2483 0f32 413A450D 		cmpb	13(%r13), %al
 2484 0f36 0F95C0   		setne	%al
 2485 0f39 83C030   		addl	$48, %eax
 2486 0f3c 413A4511 		cmpb	17(%r13), %al
 2487 0f40 0F95C0   		setne	%al
 2488 0f43 83C030   		addl	$48, %eax
 2489 0f46 413A4515 		cmpb	21(%r13), %al
 2490 0f4a 0F95C0   		setne	%al
 2491 0f4d 83C030   		addl	$48, %eax
 2492 0f50 413A4519 		cmpb	25(%r13), %al
 2493 0f54 0F95C0   		setne	%al
 2494 0f57 83C030   		addl	$48, %eax
 2495 0f5a 4138451D 		cmpb	%al, 29(%r13)
 2496 0f5e 0F95C0   		setne	%al
 2497 0f61 83C030   		addl	$48, %eax
 2498 0f64 884501   		movb	%al, 1(%rbp)
 2499 0f67 410FB645 		movzbl	4(%r13), %eax
 2499      04
 2500 0f6c 41384500 		cmpb	%al, 0(%r13)
 2501 0f70 0F95C0   		setne	%al
 2502 0f73 83C030   		addl	$48, %eax
 2503 0f76 41384508 		cmpb	%al, 8(%r13)
 2504 0f7a 0F95C0   		setne	%al
 2505 0f7d 83C030   		addl	$48, %eax
 2506 0f80 4138450C 		cmpb	%al, 12(%r13)
 2507 0f84 0F95C0   		setne	%al
 2508 0f87 83C030   		addl	$48, %eax
 2509 0f8a 41384510 		cmpb	%al, 16(%r13)
 2510 0f8e 0F95C0   		setne	%al
 2511 0f91 83C030   		addl	$48, %eax
 2512 0f94 41384514 		cmpb	%al, 20(%r13)
 2513 0f98 0F95C0   		setne	%al
 2514 0f9b 83C030   		addl	$48, %eax
 2515 0f9e 41384518 		cmpb	%al, 24(%r13)
 2516 0fa2 0F95C0   		setne	%al
 2517 0fa5 83C030   		addl	$48, %eax
 2518 0fa8 4138451C 		cmpb	%al, 28(%r13)
 2519 0fac 0F848503 		je	.L539
 2519      0000
 2520 0fb2 BF040000 		movl	$4, %edi
 2520      00
 2521 0fb7 C6450031 		movb	$49, 0(%rbp)
 2522 0fbb E8000000 		call	malloc
 2522      00
 2523 0fc0 BF040000 		movl	$4, %edi
 2523      00
 2524 0fc5 4989C5   		movq	%rax, %r13
 2525 0fc8 E8000000 		call	malloc
 2525      00
 2526 0fcd 488D7801 		leaq	1(%rax), %rdi
 2527 0fd1 41C74500 		movl	$808464432, 0(%r13)
 2527      30303030 
 2528 0fd9 C60030   		movb	$48, (%rax)
 2529 0fdc 41C64500 		movb	$49, 0(%r13)
 2529      31
 2530 0fe1 BE310000 		movl	$49, %esi
 2530      00
 2531 0fe6 B9300000 		movl	$48, %ecx
 2531      00
 2532              	.L381:
 2533 0feb 0FB65501 		movzbl	1(%rbp), %edx
 2534 0fef 38D1     		cmpb	%dl, %cl
 2535 0ff1 0F95C1   		setne	%cl
 2536 0ff4 83C130   		addl	$48, %ecx
 2537 0ff7 80FA31   		cmpb	$49, %dl
 2538 0ffa 880F     		movb	%cl, (%rdi)
 2539 0ffc 0F841C03 		je	.L540
 2539      0000
 2540 1002 4080FE31 		cmpb	$49, %sil
 2541 1006 0F84FA02 		je	.L347
 2541      0000
 2542 100c 488D7802 		leaq	2(%rax), %rdi
 2543 1010 41C64501 		movb	$48, 1(%r13)
 2543      30
 2544 1015 BA300000 		movl	$48, %edx
 2544      00
 2545 101a BE310000 		movl	$49, %esi
 2545      00
 2546              	.L382:
 2547 101f 0FB64D02 		movzbl	2(%rbp), %ecx
 2548 1023 4038F1   		cmpb	%sil, %cl
 2549 1026 400F95C6 		setne	%sil
 2550 102a 83C630   		addl	$48, %esi
 2551 102d 80F931   		cmpb	$49, %cl
 2552 1030 408837   		movb	%sil, (%rdi)
 2553 1033 0F84B502 		je	.L541
 2553      0000
 2554 1039 80FA31   		cmpb	$49, %dl
 2555 103c 0F849402 		je	.L352
 2555      0000
 2556 1042 488D7803 		leaq	3(%rax), %rdi
 2557 1046 41C64502 		movb	$48, 2(%r13)
 2557      30
 2558 104b B9300000 		movl	$48, %ecx
 2558      00
 2559 1050 BE310000 		movl	$49, %esi
 2559      00
 2560              	.L383:
 2561 1055 0FB65503 		movzbl	3(%rbp), %edx
 2562 1059 4038F2   		cmpb	%sil, %dl
 2563 105c 400F95C6 		setne	%sil
 2564 1060 83C630   		addl	$48, %esi
 2565 1063 80FA31   		cmpb	$49, %dl
 2566 1066 408837   		movb	%sil, (%rdi)
 2567 1069 7409     		je	.L373
 2568 106b 80F931   		cmpb	$49, %cl
 2569 106e 0F94C2   		sete	%dl
 2570 1071 83C230   		addl	$48, %edx
 2571              	.L373:
 2572 1074 8B00     		movl	(%rax), %eax
 2573 1076 4585E4   		testl	%r12d, %r12d
 2574 1079 41885503 		movb	%dl, 3(%r13)
 2575 107d 894500   		movl	%eax, 0(%rbp)
 2576 1080 0F8E5801 		jle	.L526
 2576      0000
 2577 1086 440FB675 		movzbl	0(%rbp), %r14d
 2577      00
 2578 108b 4531FF   		xorl	%r15d, %r15d
 2579 108e 6690     		.p2align 4,,10
 2580              		.p2align 3
 2581              	.L370:
 2582 1090 31C0     		xorl	%eax, %eax
 2583              		.p2align 4,,10
 2584 1092 660F1F44 		.p2align 3
 2584      0000
 2585              	.L358:
 2586 1098 4889C2   		movq	%rax, %rdx
 2587 109b 0FB63403 		movzbl	(%rbx,%rax), %esi
 2588 109f 83E203   		andl	$3, %edx
 2589 10a2 40387415 		cmpb	%sil, 0(%rbp,%rdx)
 2589      00
 2590 10a7 0F95C2   		setne	%dl
 2591 10aa 83C230   		addl	$48, %edx
 2592 10ad 881403   		movb	%dl, (%rbx,%rax)
 2593 10b0 4883C001 		addq	$1, %rax
 2594 10b4 4883F820 		cmpq	$32, %rax
 2595 10b8 75DE     		jne	.L358
 2596 10ba BF050000 		movl	$5, %edi
 2596      00
 2597 10bf E8000000 		call	malloc
 2597      00
 2598 10c4 BF050000 		movl	$5, %edi
 2598      00
 2599 10c9 4989C5   		movq	%rax, %r13
 2600 10cc E8000000 		call	malloc
 2600      00
 2601 10d1 4180FE31 		cmpb	$49, %r14b
 2602 10d5 41C64500 		movb	$48, 0(%r13)
 2602      30
 2603 10da 41C64501 		movb	$48, 1(%r13)
 2603      30
 2604 10df 41C64502 		movb	$48, 2(%r13)
 2604      30
 2605 10e4 41C64503 		movb	$48, 3(%r13)
 2605      30
 2606 10e9 0F849F01 		je	.L542
 2606      0000
 2607 10ef C60031   		movb	$49, (%rax)
 2608 10f2 31D2     		xorl	%edx, %edx
 2609 10f4 BF300000 		movl	$48, %edi
 2609      00
 2610 10f9 41BE3100 		movl	$49, %r14d
 2610      0000
 2611              	.L374:
 2612 10ff 0FB64D01 		movzbl	1(%rbp), %ecx
 2613 1103 4138CE   		cmpb	%cl, %r14b
 2614 1106 400F95C6 		setne	%sil
 2615 110a 83C630   		addl	$48, %esi
 2616 110d 80F931   		cmpb	$49, %cl
 2617 1110 40887001 		movb	%sil, 1(%rax)
 2618 1114 0F84FC00 		je	.L543
 2618      0000
 2619 111a 4080FF31 		cmpb	$49, %dil
 2620 111e 0F84FC00 		je	.L385
 2620      0000
 2621              	.L384:
 2622 1124 80F931   		cmpb	$49, %cl
 2623 1127 0F94C1   		sete	%cl
 2624 112a 21CA     		andl	%ecx, %edx
 2625 112c 80FA01   		cmpb	$1, %dl
 2626 112f 89D7     		movl	%edx, %edi
 2627 1131 4519C0   		sbbl	%r8d, %r8d
 2628 1134 F7DF     		negl	%edi
 2629 1136 4183C031 		addl	$49, %r8d
 2630 113a 83C731   		addl	$49, %edi
 2631              	.L376:
 2632 113d 0FB64D02 		movzbl	2(%rbp), %ecx
 2633 1141 45884501 		movb	%r8b, 1(%r13)
 2634 1145 4038CF   		cmpb	%cl, %dil
 2635 1148 400F95C7 		setne	%dil
 2636 114c 83C730   		addl	$48, %edi
 2637 114f 80F931   		cmpb	$49, %cl
 2638 1152 40887802 		movb	%dil, 2(%rax)
 2639 1156 0F849400 		je	.L544
 2639      0000
 2640 115c 4180F831 		cmpb	$49, %r8b
 2641 1160 0F849400 		je	.L387
 2641      0000
 2642              	.L386:
 2643 1166 80F931   		cmpb	$49, %cl
 2644 1169 0F94C1   		sete	%cl
 2645 116c 21CA     		andl	%ecx, %edx
 2646 116e 80FA01   		cmpb	$1, %dl
 2647 1171 4189D0   		movl	%edx, %r8d
 2648 1174 4519C9   		sbbl	%r9d, %r9d
 2649 1177 41F7D8   		negl	%r8d
 2650 117a 4183C131 		addl	$49, %r9d
 2651 117e 4183C031 		addl	$49, %r8d
 2652              	.L378:
 2653 1182 0FB64D03 		movzbl	3(%rbp), %ecx
 2654 1186 45884D02 		movb	%r9b, 2(%r13)
 2655 118a 4138C8   		cmpb	%cl, %r8b
 2656 118d 410F95C0 		setne	%r8b
 2657 1191 4183C030 		addl	$48, %r8d
 2658 1195 80F931   		cmpb	$49, %cl
 2659 1198 44884003 		movb	%r8b, 3(%rax)
 2660 119c 0F84D300 		je	.L545
 2660      0000
 2661 11a2 4180F931 		cmpb	$49, %r9b
 2662 11a6 0F84FF00 		je	.L546
 2662      0000
 2663              	.L379:
 2664 11ac 80F931   		cmpb	$49, %cl
 2665 11af 0F858D02 		jne	.L436
 2665      0000
 2666 11b5 84D2     		testb	%dl, %dl
 2667 11b7 0F848502 		je	.L436
 2667      0000
 2668              	.L372:
 2669 11bd 4183C701 		addl	$1, %r15d
 2670 11c1 41884D03 		movb	%cl, 3(%r13)
 2671 11c5 44887500 		movb	%r14b, 0(%rbp)
 2672 11c9 4539FC   		cmpl	%r15d, %r12d
 2673 11cc 40887501 		movb	%sil, 1(%rbp)
 2674 11d0 40887D02 		movb	%dil, 2(%rbp)
 2675 11d4 44884503 		movb	%r8b, 3(%rbp)
 2676 11d8 0F85B2FE 		jne	.L370
 2676      FFFF
 2677              	.L526:
 2678 11de 4883C408 		addq	$8, %rsp
 2679              		.cfi_remember_state
 2680              		.cfi_def_cfa_offset 56
 2681 11e2 4889D8   		movq	%rbx, %rax
 2682 11e5 5B       		popq	%rbx
 2683              		.cfi_def_cfa_offset 48
 2684 11e6 5D       		popq	%rbp
 2685              		.cfi_def_cfa_offset 40
 2686 11e7 415C     		popq	%r12
 2687              		.cfi_def_cfa_offset 32
 2688 11e9 415D     		popq	%r13
 2689              		.cfi_def_cfa_offset 24
 2690 11eb 415E     		popq	%r14
 2691              		.cfi_def_cfa_offset 16
 2692 11ed 415F     		popq	%r15
 2693              		.cfi_def_cfa_offset 8
 2694 11ef C3       		ret
 2695              	.L544:
 2696              		.cfi_restore_state
 2697 11f0 4180F831 		cmpb	$49, %r8b
 2698 11f4 0F846CFF 		je	.L386
 2698      FFFF
 2699              	.L387:
 2700 11fa 80F931   		cmpb	$49, %cl
 2701 11fd 7541     		jne	.L439
 2702 11ff 84D2     		testb	%dl, %dl
 2703 1201 743D     		je	.L439
 2704 1203 31D2     		xorl	%edx, %edx
 2705 1205 41B93000 		movl	$48, %r9d
 2705      0000
 2706 120b 41B83100 		movl	$49, %r8d
 2706      0000
 2707 1211 E96CFFFF 		jmp	.L378
 2707      FF
 2708              	.L543:
 2709 1216 4080FF31 		cmpb	$49, %dil
 2710 121a 0F8404FF 		je	.L384
 2710      FFFF
 2711              	.L385:
 2712 1220 80F931   		cmpb	$49, %cl
 2713 1223 753B     		jne	.L438
 2714 1225 84D2     		testb	%dl, %dl
 2715 1227 7437     		je	.L438
 2716 1229 31D2     		xorl	%edx, %edx
 2717 122b 41B83000 		movl	$48, %r8d
 2717      0000
 2718 1231 BF310000 		movl	$49, %edi
 2718      00
 2719 1236 E902FFFF 		jmp	.L376
 2719      FF
 2720 123b 0F1F4400 		.p2align 4,,10
 2720      00
 2721              		.p2align 3
 2722              	.L439:
 2723 1240 BA010000 		movl	$1, %edx
 2723      00
 2724 1245 41B93100 		movl	$49, %r9d
 2724      0000
 2725 124b 41B83000 		movl	$48, %r8d
 2725      0000
 2726 1251 E92CFFFF 		jmp	.L378
 2726      FF
 2727 1256 662E0F1F 		.p2align 4,,10
 2727      84000000 
 2727      0000
 2728              		.p2align 3
 2729              	.L438:
 2730 1260 BA010000 		movl	$1, %edx
 2730      00
 2731 1265 41B83100 		movl	$49, %r8d
 2731      0000
 2732 126b BF300000 		movl	$48, %edi
 2732      00
 2733 1270 E9C8FEFF 		jmp	.L376
 2733      FF
 2734              	.L545:
 2735 1275 4180F931 		cmpb	$49, %r9b
 2736 1279 0F842DFF 		je	.L379
 2736      FFFF
 2737 127f 84D2     		testb	%dl, %dl
 2738 1281 B8300000 		movl	$48, %eax
 2738      00
 2739 1286 0F45C8   		cmovne	%eax, %ecx
 2740 1289 E92FFFFF 		jmp	.L372
 2740      FF
 2741              	.L542:
 2742 128e C60030   		movb	$48, (%rax)
 2743 1291 41C64500 		movb	$49, 0(%r13)
 2743      31
 2744 1296 BF310000 		movl	$49, %edi
 2744      00
 2745 129b BA010000 		movl	$1, %edx
 2745      00
 2746 12a0 41BE3000 		movl	$48, %r14d
 2746      0000
 2747 12a6 E954FEFF 		jmp	.L374
 2747      FF
 2748              	.L546:
 2749 12ab B9310000 		movl	$49, %ecx
 2749      00
 2750 12b0 E908FFFF 		jmp	.L372
 2750      FF
 2751              	.L388:
 2752 12b5 31C0     		xorl	%eax, %eax
 2753 12b7 31C9     		xorl	%ecx, %ecx
 2754 12b9 BE200000 		movl	$32, %esi
 2754      00
 2755 12be 4531C0   		xorl	%r8d, %r8d
 2756 12c1 BA200000 		movl	$32, %edx
 2756      00
 2757 12c6 41B90200 		movl	$2, %r9d
 2757      0000
 2758 12cc BF200000 		movl	$32, %edi
 2758      00
 2759 12d1 E9DBF8FF 		jmp	.L310
 2759      FF
 2760              	.L352:
 2761 12d6 41C64502 		movb	$49, 2(%r13)
 2761      31
 2762 12db 488D7803 		leaq	3(%rax), %rdi
 2763 12df B9310000 		movl	$49, %ecx
 2763      00
 2764 12e4 BE300000 		movl	$48, %esi
 2764      00
 2765 12e9 E967FDFF 		jmp	.L383
 2765      FF
 2766              	.L541:
 2767 12ee 80FA31   		cmpb	$49, %dl
 2768 12f1 74E3     		je	.L352
 2769 12f3 41C64502 		movb	$49, 2(%r13)
 2769      31
 2770 12f8 488D7803 		leaq	3(%rax), %rdi
 2771 12fc BE300000 		movl	$48, %esi
 2771      00
 2772 1301 E94FFDFF 		jmp	.L383
 2772      FF
 2773              	.L347:
 2774 1306 41C64501 		movb	$49, 1(%r13)
 2774      31
 2775 130b 488D7802 		leaq	2(%rax), %rdi
 2776 130f BA310000 		movl	$49, %edx
 2776      00
 2777 1314 BE300000 		movl	$48, %esi
 2777      00
 2778 1319 E901FDFF 		jmp	.L382
 2778      FF
 2779              	.L540:
 2780 131e 4080FE31 		cmpb	$49, %sil
 2781 1322 74E2     		je	.L347
 2782 1324 41C64501 		movb	$49, 1(%r13)
 2782      31
 2783 1329 488D7802 		leaq	2(%rax), %rdi
 2784 132d BE300000 		movl	$48, %esi
 2784      00
 2785 1332 E9E8FCFF 		jmp	.L382
 2785      FF
 2786              	.L539:
 2787 1337 BF040000 		movl	$4, %edi
 2787      00
 2788 133c C6450030 		movb	$48, 0(%rbp)
 2789 1340 E8000000 		call	malloc
 2789      00
 2790 1345 BF040000 		movl	$4, %edi
 2790      00
 2791 134a 4989C5   		movq	%rax, %r13
 2792 134d E8000000 		call	malloc
 2792      00
 2793 1352 41C74500 		movl	$808464432, 0(%r13)
 2793      30303030 
 2794 135a C60031   		movb	$49, (%rax)
 2795 135d 488D7801 		leaq	1(%rax), %rdi
 2796 1361 BE300000 		movl	$48, %esi
 2796      00
 2797 1366 B9310000 		movl	$49, %ecx
 2797      00
 2798 136b E97BFCFF 		jmp	.L381
 2798      FF
 2799              	.L402:
 2800 1370 BE120000 		movl	$18, %esi
 2800      00
 2801 1375 B90E0000 		movl	$14, %ecx
 2801      00
 2802 137a E91BF8FF 		jmp	.L311
 2802      FF
 2803              	.L389:
 2804 137f BE1F0000 		movl	$31, %esi
 2804      00
 2805 1384 B9010000 		movl	$1, %ecx
 2805      00
 2806 1389 E90CF8FF 		jmp	.L311
 2806      FF
 2807              	.L390:
 2808 138e BE1E0000 		movl	$30, %esi
 2808      00
 2809 1393 B9020000 		movl	$2, %ecx
 2809      00
 2810 1398 E9FDF7FF 		jmp	.L311
 2810      FF
 2811              	.L391:
 2812 139d BE1D0000 		movl	$29, %esi
 2812      00
 2813 13a2 B9030000 		movl	$3, %ecx
 2813      00
 2814 13a7 E9EEF7FF 		jmp	.L311
 2814      FF
 2815              	.L392:
 2816 13ac BE1C0000 		movl	$28, %esi
 2816      00
 2817 13b1 B9040000 		movl	$4, %ecx
 2817      00
 2818 13b6 E9DFF7FF 		jmp	.L311
 2818      FF
 2819              	.L393:
 2820 13bb BE1B0000 		movl	$27, %esi
 2820      00
 2821 13c0 B9050000 		movl	$5, %ecx
 2821      00
 2822 13c5 E9D0F7FF 		jmp	.L311
 2822      FF
 2823              	.L394:
 2824 13ca BE1A0000 		movl	$26, %esi
 2824      00
 2825 13cf B9060000 		movl	$6, %ecx
 2825      00
 2826 13d4 E9C1F7FF 		jmp	.L311
 2826      FF
 2827              	.L395:
 2828 13d9 BE190000 		movl	$25, %esi
 2828      00
 2829 13de B9070000 		movl	$7, %ecx
 2829      00
 2830 13e3 E9B2F7FF 		jmp	.L311
 2830      FF
 2831              	.L396:
 2832 13e8 BE180000 		movl	$24, %esi
 2832      00
 2833 13ed B9080000 		movl	$8, %ecx
 2833      00
 2834 13f2 E9A3F7FF 		jmp	.L311
 2834      FF
 2835              	.L397:
 2836 13f7 BE170000 		movl	$23, %esi
 2836      00
 2837 13fc B9090000 		movl	$9, %ecx
 2837      00
 2838 1401 E994F7FF 		jmp	.L311
 2838      FF
 2839              	.L398:
 2840 1406 BE160000 		movl	$22, %esi
 2840      00
 2841 140b B90A0000 		movl	$10, %ecx
 2841      00
 2842 1410 E985F7FF 		jmp	.L311
 2842      FF
 2843              	.L399:
 2844 1415 BE150000 		movl	$21, %esi
 2844      00
 2845 141a B90B0000 		movl	$11, %ecx
 2845      00
 2846 141f E976F7FF 		jmp	.L311
 2846      FF
 2847              	.L400:
 2848 1424 BE140000 		movl	$20, %esi
 2848      00
 2849 1429 B90C0000 		movl	$12, %ecx
 2849      00
 2850 142e E967F7FF 		jmp	.L311
 2850      FF
 2851              	.L401:
 2852 1433 BE130000 		movl	$19, %esi
 2852      00
 2853 1438 B90D0000 		movl	$13, %ecx
 2853      00
 2854 143d E958F7FF 		jmp	.L311
 2854      FF
 2855              	.L436:
 2856 1442 B9300000 		movl	$48, %ecx
 2856      00
 2857 1447 E971FDFF 		jmp	.L372
 2857      FF
 2858              		.cfi_endproc
 2859              	.LFE74:
 2861              		.section	.text.unlikely
 2862              	.LCOLDE51:
 2863              		.text
 2864              	.LHOTE51:
 2865              		.section	.rodata.str1.1
 2866              	.LC52:
 2867 012e 30303030 		.string	"0000"
 2867      00
 2868              	.LC54:
 2869 0133 31313131 		.string	"1111"
 2869      00
 2870              		.section	.text.unlikely
 2871              	.LCOLDB55:
 2872              		.text
 2873              	.LHOTB55:
 2874 144c 0F1F4000 		.p2align 4,,15
 2875              		.globl	encrypt
 2877              	encrypt:
 2878              	.LFB75:
 2879              		.cfi_startproc
 2880 1450 4157     		pushq	%r15
 2881              		.cfi_def_cfa_offset 16
 2882              		.cfi_offset 15, -16
 2883 1452 4156     		pushq	%r14
 2884              		.cfi_def_cfa_offset 24
 2885              		.cfi_offset 14, -24
 2886 1454 4155     		pushq	%r13
 2887              		.cfi_def_cfa_offset 32
 2888              		.cfi_offset 13, -32
 2889 1456 4154     		pushq	%r12
 2890              		.cfi_def_cfa_offset 40
 2891              		.cfi_offset 12, -40
 2892 1458 4989F4   		movq	%rsi, %r12
 2893 145b 55       		pushq	%rbp
 2894              		.cfi_def_cfa_offset 48
 2895              		.cfi_offset 6, -48
 2896 145c 53       		pushq	%rbx
 2897              		.cfi_def_cfa_offset 56
 2898              		.cfi_offset 3, -56
 2899 145d 4889FD   		movq	%rdi, %rbp
 2900 1460 BF210000 		movl	$33, %edi
 2900      00
 2901 1465 4883EC08 		subq	$8, %rsp
 2902              		.cfi_def_cfa_offset 64
 2903 1469 E8000000 		call	malloc
 2903      00
 2904 146e 4C89E2   		movq	%r12, %rdx
 2905 1471 4889C3   		movq	%rax, %rbx
 2906 1474 48F7DA   		negq	%rdx
 2907 1477 83E20F   		andl	$15, %edx
 2908 147a 0F843007 		je	.L598
 2908      0000
 2909 1480 31C0     		xorl	%eax, %eax
 2910 1482 41803C24 		cmpb	$49, (%r12)
 2910      31
 2911 1487 0F94C0   		sete	%al
 2912 148a 83FA01   		cmpl	$1, %edx
 2913 148d 0F842508 		je	.L599
 2913      0000
 2914 1493 31C9     		xorl	%ecx, %ecx
 2915 1495 41807C24 		cmpb	$49, 1(%r12)
 2915      0131
 2916 149b 0F94C1   		sete	%cl
 2917 149e 01C8     		addl	%ecx, %eax
 2918 14a0 83FA02   		cmpl	$2, %edx
 2919 14a3 0F844C07 		je	.L600
 2919      0000
 2920 14a9 31C9     		xorl	%ecx, %ecx
 2921 14ab 41807C24 		cmpb	$49, 2(%r12)
 2921      0231
 2922 14b1 0F94C1   		sete	%cl
 2923 14b4 01C8     		addl	%ecx, %eax
 2924 14b6 83FA03   		cmpl	$3, %edx
 2925 14b9 0F84BD07 		je	.L601
 2925      0000
 2926 14bf 31C9     		xorl	%ecx, %ecx
 2927 14c1 41807C24 		cmpb	$49, 3(%r12)
 2927      0331
 2928 14c7 0F94C1   		sete	%cl
 2929 14ca 01C8     		addl	%ecx, %eax
 2930 14cc 83FA04   		cmpl	$4, %edx
 2931 14cf 0F84B607 		je	.L602
 2931      0000
 2932 14d5 31C9     		xorl	%ecx, %ecx
 2933 14d7 41807C24 		cmpb	$49, 4(%r12)
 2933      0431
 2934 14dd 0F94C1   		sete	%cl
 2935 14e0 01C8     		addl	%ecx, %eax
 2936 14e2 83FA05   		cmpl	$5, %edx
 2937 14e5 0F84AF07 		je	.L603
 2937      0000
 2938 14eb 31C9     		xorl	%ecx, %ecx
 2939 14ed 41807C24 		cmpb	$49, 5(%r12)
 2939      0531
 2940 14f3 0F94C1   		sete	%cl
 2941 14f6 01C8     		addl	%ecx, %eax
 2942 14f8 83FA06   		cmpl	$6, %edx
 2943 14fb 0F84A807 		je	.L604
 2943      0000
 2944 1501 31C9     		xorl	%ecx, %ecx
 2945 1503 41807C24 		cmpb	$49, 6(%r12)
 2945      0631
 2946 1509 0F94C1   		sete	%cl
 2947 150c 01C8     		addl	%ecx, %eax
 2948 150e 83FA07   		cmpl	$7, %edx
 2949 1511 0F84ED06 		je	.L605
 2949      0000
 2950 1517 31C9     		xorl	%ecx, %ecx
 2951 1519 41807C24 		cmpb	$49, 7(%r12)
 2951      0731
 2952 151f 0F94C1   		sete	%cl
 2953 1522 01C8     		addl	%ecx, %eax
 2954 1524 83FA08   		cmpl	$8, %edx
 2955 1527 0F84E606 		je	.L606
 2955      0000
 2956 152d 31C9     		xorl	%ecx, %ecx
 2957 152f 41807C24 		cmpb	$49, 8(%r12)
 2957      0831
 2958 1535 0F94C1   		sete	%cl
 2959 1538 01C8     		addl	%ecx, %eax
 2960 153a 83FA09   		cmpl	$9, %edx
 2961 153d 0F84DF06 		je	.L607
 2961      0000
 2962 1543 31C9     		xorl	%ecx, %ecx
 2963 1545 41807C24 		cmpb	$49, 9(%r12)
 2963      0931
 2964 154b 0F94C1   		sete	%cl
 2965 154e 01C8     		addl	%ecx, %eax
 2966 1550 83FA0A   		cmpl	$10, %edx
 2967 1553 0F84D806 		je	.L608
 2967      0000
 2968 1559 31C9     		xorl	%ecx, %ecx
 2969 155b 41807C24 		cmpb	$49, 10(%r12)
 2969      0A31
 2970 1561 0F94C1   		sete	%cl
 2971 1564 01C8     		addl	%ecx, %eax
 2972 1566 83FA0B   		cmpl	$11, %edx
 2973 1569 0F84D106 		je	.L609
 2973      0000
 2974 156f 31C9     		xorl	%ecx, %ecx
 2975 1571 41807C24 		cmpb	$49, 11(%r12)
 2975      0B31
 2976 1577 0F94C1   		sete	%cl
 2977 157a 01C8     		addl	%ecx, %eax
 2978 157c 83FA0C   		cmpl	$12, %edx
 2979 157f 0F84CA06 		je	.L610
 2979      0000
 2980 1585 31C9     		xorl	%ecx, %ecx
 2981 1587 41807C24 		cmpb	$49, 12(%r12)
 2981      0C31
 2982 158d 0F94C1   		sete	%cl
 2983 1590 01C8     		addl	%ecx, %eax
 2984 1592 83FA0D   		cmpl	$13, %edx
 2985 1595 0F84C306 		je	.L611
 2985      0000
 2986 159b 31C9     		xorl	%ecx, %ecx
 2987 159d 41807C24 		cmpb	$49, 13(%r12)
 2987      0D31
 2988 15a3 0F94C1   		sete	%cl
 2989 15a6 01C8     		addl	%ecx, %eax
 2990 15a8 83FA0F   		cmpl	$15, %edx
 2991 15ab 0F85BC06 		jne	.L612
 2991      0000
 2992 15b1 31C9     		xorl	%ecx, %ecx
 2993 15b3 41807C24 		cmpb	$49, 14(%r12)
 2993      0E31
 2994 15b9 BE110000 		movl	$17, %esi
 2994      00
 2995 15be 0F94C1   		sete	%cl
 2996 15c1 01C8     		addl	%ecx, %eax
 2997 15c3 B90F0000 		movl	$15, %ecx
 2997      00
 2998              	.L549:
 2999 15c8 BF200000 		movl	$32, %edi
 2999      00
 3000 15cd 4189D0   		movl	%edx, %r8d
 3001 15d0 41B90100 		movl	$1, %r9d
 3001      0000
 3002 15d6 29D7     		subl	%edx, %edi
 3003 15d8 89FA     		movl	%edi, %edx
 3004 15da BF100000 		movl	$16, %edi
 3004      00
 3005              	.L548:
 3006 15df 4D01E0   		addq	%r12, %r8
 3007 15e2 660F6F2D 		movdqa	.LC53(%rip), %xmm5
 3007      00000000 
 3008 15ea 660FEFE4 		pxor	%xmm4, %xmm4
 3009 15ee 4183F902 		cmpl	$2, %r9d
 3010 15f2 66410F6F 		movdqa	(%r8), %xmm1
 3010      08
 3011 15f7 660F6F15 		movdqa	.LC50(%rip), %xmm2
 3011      00000000 
 3012 15ff 660F74CD 		pcmpeqb	%xmm5, %xmm1
 3013 1603 660F6FDC 		movdqa	%xmm4, %xmm3
 3014 1607 660FDBCA 		pand	%xmm2, %xmm1
 3015 160b 660F64D9 		pcmpgtb	%xmm1, %xmm3
 3016 160f 660F6FC1 		movdqa	%xmm1, %xmm0
 3017 1613 660F68CB 		punpckhbw	%xmm3, %xmm1
 3018 1617 660F60C3 		punpcklbw	%xmm3, %xmm0
 3019 161b 660FEFDB 		pxor	%xmm3, %xmm3
 3020 161f 660F6FF0 		movdqa	%xmm0, %xmm6
 3021 1623 660F6FFB 		movdqa	%xmm3, %xmm7
 3022 1627 660F65F8 		pcmpgtw	%xmm0, %xmm7
 3023 162b 660F61F7 		punpcklwd	%xmm7, %xmm6
 3024 162f 660F69C7 		punpckhwd	%xmm7, %xmm0
 3025 1633 660F6FFB 		movdqa	%xmm3, %xmm7
 3026 1637 660F65F9 		pcmpgtw	%xmm1, %xmm7
 3027 163b 660FFEC6 		paddd	%xmm6, %xmm0
 3028 163f 660F6FF1 		movdqa	%xmm1, %xmm6
 3029 1643 660F69CF 		punpckhwd	%xmm7, %xmm1
 3030 1647 660F61F7 		punpcklwd	%xmm7, %xmm6
 3031 164b 660FFEC6 		paddd	%xmm6, %xmm0
 3032 164f 660FFEC1 		paddd	%xmm1, %xmm0
 3033 1653 7552     		jne	.L550
 3034 1655 66410F6F 		movdqa	16(%r8), %xmm1
 3034      4810
 3035 165b 660F74CD 		pcmpeqb	%xmm5, %xmm1
 3036 165f 660F6FEB 		movdqa	%xmm3, %xmm5
 3037 1663 660FDBCA 		pand	%xmm2, %xmm1
 3038 1667 660F64E1 		pcmpgtb	%xmm1, %xmm4
 3039 166b 660F6FD1 		movdqa	%xmm1, %xmm2
 3040 166f 660F60D4 		punpcklbw	%xmm4, %xmm2
 3041 1673 660F68CC 		punpckhbw	%xmm4, %xmm1
 3042 1677 660F65EA 		pcmpgtw	%xmm2, %xmm5
 3043 167b 660F6FE2 		movdqa	%xmm2, %xmm4
 3044 167f 660F65D9 		pcmpgtw	%xmm1, %xmm3
 3045 1683 660F61E5 		punpcklwd	%xmm5, %xmm4
 3046 1687 660F69D5 		punpckhwd	%xmm5, %xmm2
 3047 168b 660FFEC4 		paddd	%xmm4, %xmm0
 3048 168f 660FFED0 		paddd	%xmm0, %xmm2
 3049 1693 660F6FC1 		movdqa	%xmm1, %xmm0
 3050 1697 660F69CB 		punpckhwd	%xmm3, %xmm1
 3051 169b 660F61C3 		punpcklwd	%xmm3, %xmm0
 3052 169f 660FFEC2 		paddd	%xmm2, %xmm0
 3053 16a3 660FFEC1 		paddd	%xmm1, %xmm0
 3054              	.L550:
 3055 16a7 660F6FC8 		movdqa	%xmm0, %xmm1
 3056 16ab 29FE     		subl	%edi, %esi
 3057 16ad 660F73D9 		psrldq	$8, %xmm1
 3057      08
 3058 16b2 660FFEC1 		paddd	%xmm1, %xmm0
 3059 16b6 660F6FC8 		movdqa	%xmm0, %xmm1
 3060 16ba 660F73D9 		psrldq	$4, %xmm1
 3060      04
 3061 16bf 660FFEC1 		paddd	%xmm1, %xmm0
 3062 16c3 66410F7E 		movd	%xmm0, %r13d
 3062      C5
 3063 16c8 4101C5   		addl	%eax, %r13d
 3064 16cb 39D7     		cmpl	%edx, %edi
 3065 16cd 8D040F   		leal	(%rdi,%rcx), %eax
 3066 16d0 0F849201 		je	.L552
 3066      0000
 3067 16d6 4863D0   		movslq	%eax, %rdx
 3068 16d9 41803C14 		cmpb	$49, (%r12,%rdx)
 3068      31
 3069 16de 0F94C2   		sete	%dl
 3070 16e1 0FB6D2   		movzbl	%dl, %edx
 3071 16e4 4101D5   		addl	%edx, %r13d
 3072 16e7 83FE01   		cmpl	$1, %esi
 3073 16ea 8D5001   		leal	1(%rax), %edx
 3074 16ed 0F847501 		je	.L552
 3074      0000
 3075 16f3 4863D2   		movslq	%edx, %rdx
 3076 16f6 41803C14 		cmpb	$49, (%r12,%rdx)
 3076      31
 3077 16fb 0F94C2   		sete	%dl
 3078 16fe 0FB6D2   		movzbl	%dl, %edx
 3079 1701 4101D5   		addl	%edx, %r13d
 3080 1704 83FE02   		cmpl	$2, %esi
 3081 1707 8D5002   		leal	2(%rax), %edx
 3082 170a 0F845801 		je	.L552
 3082      0000
 3083 1710 4863D2   		movslq	%edx, %rdx
 3084 1713 41803C14 		cmpb	$49, (%r12,%rdx)
 3084      31
 3085 1718 0F94C2   		sete	%dl
 3086 171b 0FB6D2   		movzbl	%dl, %edx
 3087 171e 4101D5   		addl	%edx, %r13d
 3088 1721 83FE03   		cmpl	$3, %esi
 3089 1724 8D5003   		leal	3(%rax), %edx
 3090 1727 0F843B01 		je	.L552
 3090      0000
 3091 172d 4863D2   		movslq	%edx, %rdx
 3092 1730 41803C14 		cmpb	$49, (%r12,%rdx)
 3092      31
 3093 1735 0F94C2   		sete	%dl
 3094 1738 0FB6D2   		movzbl	%dl, %edx
 3095 173b 4101D5   		addl	%edx, %r13d
 3096 173e 83FE04   		cmpl	$4, %esi
 3097 1741 8D5004   		leal	4(%rax), %edx
 3098 1744 0F841E01 		je	.L552
 3098      0000
 3099 174a 4863D2   		movslq	%edx, %rdx
 3100 174d 41803C14 		cmpb	$49, (%r12,%rdx)
 3100      31
 3101 1752 0F94C2   		sete	%dl
 3102 1755 0FB6D2   		movzbl	%dl, %edx
 3103 1758 4101D5   		addl	%edx, %r13d
 3104 175b 83FE05   		cmpl	$5, %esi
 3105 175e 8D5005   		leal	5(%rax), %edx
 3106 1761 0F840101 		je	.L552
 3106      0000
 3107 1767 4863D2   		movslq	%edx, %rdx
 3108 176a 41803C14 		cmpb	$49, (%r12,%rdx)
 3108      31
 3109 176f 0F94C2   		sete	%dl
 3110 1772 0FB6D2   		movzbl	%dl, %edx
 3111 1775 4101D5   		addl	%edx, %r13d
 3112 1778 83FE06   		cmpl	$6, %esi
 3113 177b 8D5006   		leal	6(%rax), %edx
 3114 177e 0F84E400 		je	.L552
 3114      0000
 3115 1784 4863D2   		movslq	%edx, %rdx
 3116 1787 41803C14 		cmpb	$49, (%r12,%rdx)
 3116      31
 3117 178c 0F94C2   		sete	%dl
 3118 178f 0FB6D2   		movzbl	%dl, %edx
 3119 1792 4101D5   		addl	%edx, %r13d
 3120 1795 83FE07   		cmpl	$7, %esi
 3121 1798 8D5007   		leal	7(%rax), %edx
 3122 179b 0F84C700 		je	.L552
 3122      0000
 3123 17a1 4863D2   		movslq	%edx, %rdx
 3124 17a4 41803C14 		cmpb	$49, (%r12,%rdx)
 3124      31
 3125 17a9 0F94C2   		sete	%dl
 3126 17ac 0FB6D2   		movzbl	%dl, %edx
 3127 17af 4101D5   		addl	%edx, %r13d
 3128 17b2 83FE08   		cmpl	$8, %esi
 3129 17b5 8D5008   		leal	8(%rax), %edx
 3130 17b8 0F84AA00 		je	.L552
 3130      0000
 3131 17be 4863D2   		movslq	%edx, %rdx
 3132 17c1 41803C14 		cmpb	$49, (%r12,%rdx)
 3132      31
 3133 17c6 0F94C2   		sete	%dl
 3134 17c9 0FB6D2   		movzbl	%dl, %edx
 3135 17cc 4101D5   		addl	%edx, %r13d
 3136 17cf 83FE09   		cmpl	$9, %esi
 3137 17d2 8D5009   		leal	9(%rax), %edx
 3138 17d5 0F848D00 		je	.L552
 3138      0000
 3139 17db 4863D2   		movslq	%edx, %rdx
 3140 17de 41803C14 		cmpb	$49, (%r12,%rdx)
 3140      31
 3141 17e3 0F94C2   		sete	%dl
 3142 17e6 0FB6D2   		movzbl	%dl, %edx
 3143 17e9 4101D5   		addl	%edx, %r13d
 3144 17ec 83FE0A   		cmpl	$10, %esi
 3145 17ef 8D500A   		leal	10(%rax), %edx
 3146 17f2 7474     		je	.L552
 3147 17f4 4863D2   		movslq	%edx, %rdx
 3148 17f7 41803C14 		cmpb	$49, (%r12,%rdx)
 3148      31
 3149 17fc 0F94C2   		sete	%dl
 3150 17ff 0FB6D2   		movzbl	%dl, %edx
 3151 1802 4101D5   		addl	%edx, %r13d
 3152 1805 83FE0B   		cmpl	$11, %esi
 3153 1808 8D500B   		leal	11(%rax), %edx
 3154 180b 745B     		je	.L552
 3155 180d 4863D2   		movslq	%edx, %rdx
 3156 1810 41803C14 		cmpb	$49, (%r12,%rdx)
 3156      31
 3157 1815 0F94C2   		sete	%dl
 3158 1818 0FB6D2   		movzbl	%dl, %edx
 3159 181b 4101D5   		addl	%edx, %r13d
 3160 181e 83FE0C   		cmpl	$12, %esi
 3161 1821 8D500C   		leal	12(%rax), %edx
 3162 1824 7442     		je	.L552
 3163 1826 4863D2   		movslq	%edx, %rdx
 3164 1829 41803C14 		cmpb	$49, (%r12,%rdx)
 3164      31
 3165 182e 0F94C2   		sete	%dl
 3166 1831 0FB6D2   		movzbl	%dl, %edx
 3167 1834 4101D5   		addl	%edx, %r13d
 3168 1837 83FE0D   		cmpl	$13, %esi
 3169 183a 8D500D   		leal	13(%rax), %edx
 3170 183d 7429     		je	.L552
 3171 183f 4863D2   		movslq	%edx, %rdx
 3172 1842 41803C14 		cmpb	$49, (%r12,%rdx)
 3172      31
 3173 1847 0F94C2   		sete	%dl
 3174 184a 83C00E   		addl	$14, %eax
 3175 184d 0FB6D2   		movzbl	%dl, %edx
 3176 1850 4101D5   		addl	%edx, %r13d
 3177 1853 83FE0E   		cmpl	$14, %esi
 3178 1856 7410     		je	.L552
 3179 1858 4898     		cltq
 3180 185a 41803C04 		cmpb	$49, (%r12,%rax)
 3180      31
 3181 185f 0F94C0   		sete	%al
 3182 1862 0FB6C0   		movzbl	%al, %eax
 3183 1865 4101C5   		addl	%eax, %r13d
 3184              	.L552:
 3185 1868 488B4500 		movq	0(%rbp), %rax
 3186 186c BF050000 		movl	$5, %edi
 3186      00
 3187 1871 488903   		movq	%rax, (%rbx)
 3188 1874 488B4508 		movq	8(%rbp), %rax
 3189 1878 48894308 		movq	%rax, 8(%rbx)
 3190 187c 488B4510 		movq	16(%rbp), %rax
 3191 1880 48894310 		movq	%rax, 16(%rbx)
 3192 1884 488B4518 		movq	24(%rbp), %rax
 3193 1888 48894318 		movq	%rax, 24(%rbx)
 3194 188c E8000000 		call	malloc
 3194      00
 3195 1891 4889C5   		movq	%rax, %rbp
 3196 1894 C6400400 		movb	$0, 4(%rax)
 3197 1898 410FB644 		movzbl	7(%r12), %eax
 3197      2407
 3198 189e 41384424 		cmpb	%al, 3(%r12)
 3198      03
 3199 18a3 C6432000 		movb	$0, 32(%rbx)
 3200 18a7 0F95C0   		setne	%al
 3201 18aa 83C030   		addl	$48, %eax
 3202 18ad 41384424 		cmpb	%al, 11(%r12)
 3202      0B
 3203 18b2 0F95C0   		setne	%al
 3204 18b5 83C030   		addl	$48, %eax
 3205 18b8 41384424 		cmpb	%al, 15(%r12)
 3205      0F
 3206 18bd 0F95C0   		setne	%al
 3207 18c0 83C030   		addl	$48, %eax
 3208 18c3 41384424 		cmpb	%al, 19(%r12)
 3208      13
 3209 18c8 0F95C0   		setne	%al
 3210 18cb 83C030   		addl	$48, %eax
 3211 18ce 41384424 		cmpb	%al, 23(%r12)
 3211      17
 3212 18d3 0F95C0   		setne	%al
 3213 18d6 83C030   		addl	$48, %eax
 3214 18d9 41384424 		cmpb	%al, 27(%r12)
 3214      1B
 3215 18de 0F95C0   		setne	%al
 3216 18e1 83C030   		addl	$48, %eax
 3217 18e4 41384424 		cmpb	%al, 31(%r12)
 3217      1F
 3218 18e9 0F95C0   		setne	%al
 3219 18ec 83C030   		addl	$48, %eax
 3220 18ef 884503   		movb	%al, 3(%rbp)
 3221 18f2 410FB644 		movzbl	6(%r12), %eax
 3221      2406
 3222 18f8 41384424 		cmpb	%al, 2(%r12)
 3222      02
 3223 18fd 0F95C0   		setne	%al
 3224 1900 83C030   		addl	$48, %eax
 3225 1903 41384424 		cmpb	%al, 10(%r12)
 3225      0A
 3226 1908 0F95C0   		setne	%al
 3227 190b 83C030   		addl	$48, %eax
 3228 190e 41384424 		cmpb	%al, 14(%r12)
 3228      0E
 3229 1913 0F95C0   		setne	%al
 3230 1916 83C030   		addl	$48, %eax
 3231 1919 41384424 		cmpb	%al, 18(%r12)
 3231      12
 3232 191e 0F95C0   		setne	%al
 3233 1921 83C030   		addl	$48, %eax
 3234 1924 41384424 		cmpb	%al, 22(%r12)
 3234      16
 3235 1929 0F95C0   		setne	%al
 3236 192c 83C030   		addl	$48, %eax
 3237 192f 41384424 		cmpb	%al, 26(%r12)
 3237      1A
 3238 1934 0F95C0   		setne	%al
 3239 1937 83C030   		addl	$48, %eax
 3240 193a 41384424 		cmpb	%al, 30(%r12)
 3240      1E
 3241 193f 0F95C0   		setne	%al
 3242 1942 83C030   		addl	$48, %eax
 3243 1945 884502   		movb	%al, 2(%rbp)
 3244 1948 410FB644 		movzbl	5(%r12), %eax
 3244      2405
 3245 194e 41384424 		cmpb	%al, 1(%r12)
 3245      01
 3246 1953 0F95C0   		setne	%al
 3247 1956 83C030   		addl	$48, %eax
 3248 1959 41384424 		cmpb	%al, 9(%r12)
 3248      09
 3249 195e 0F95C0   		setne	%al
 3250 1961 83C030   		addl	$48, %eax
 3251 1964 41384424 		cmpb	%al, 13(%r12)
 3251      0D
 3252 1969 0F95C0   		setne	%al
 3253 196c 83C030   		addl	$48, %eax
 3254 196f 41384424 		cmpb	%al, 17(%r12)
 3254      11
 3255 1974 0F95C0   		setne	%al
 3256 1977 83C030   		addl	$48, %eax
 3257 197a 413A4424 		cmpb	21(%r12), %al
 3257      15
 3258 197f 0F95C0   		setne	%al
 3259 1982 83C030   		addl	$48, %eax
 3260 1985 413A4424 		cmpb	25(%r12), %al
 3260      19
 3261 198a 0F95C0   		setne	%al
 3262 198d 83C030   		addl	$48, %eax
 3263 1990 413A4424 		cmpb	29(%r12), %al
 3263      1D
 3264 1995 0F95C0   		setne	%al
 3265 1998 83C030   		addl	$48, %eax
 3266 199b 884501   		movb	%al, 1(%rbp)
 3267 199e 410FB644 		movzbl	4(%r12), %eax
 3267      2404
 3268 19a4 41380424 		cmpb	%al, (%r12)
 3269 19a8 0F95C0   		setne	%al
 3270 19ab 83C030   		addl	$48, %eax
 3271 19ae 413A4424 		cmpb	8(%r12), %al
 3271      08
 3272 19b3 0F95C0   		setne	%al
 3273 19b6 83C030   		addl	$48, %eax
 3274 19b9 413A4424 		cmpb	12(%r12), %al
 3274      0C
 3275 19be 0F95C0   		setne	%al
 3276 19c1 83C030   		addl	$48, %eax
 3277 19c4 413A4424 		cmpb	16(%r12), %al
 3277      10
 3278 19c9 0F95C0   		setne	%al
 3279 19cc 83C030   		addl	$48, %eax
 3280 19cf 413A4424 		cmpb	20(%r12), %al
 3280      14
 3281 19d4 0F95C0   		setne	%al
 3282 19d7 83C030   		addl	$48, %eax
 3283 19da 413A4424 		cmpb	24(%r12), %al
 3283      18
 3284 19df 0F95C0   		setne	%al
 3285 19e2 83C030   		addl	$48, %eax
 3286 19e5 41384424 		cmpb	%al, 28(%r12)
 3286      1C
 3287 19ea 41BC0000 		movl	$.LC54, %r12d
 3287      0000
 3288 19f0 0F95C0   		setne	%al
 3289 19f3 4531FF   		xorl	%r15d, %r15d
 3290 19f6 83C030   		addl	$48, %eax
 3291 19f9 4585ED   		testl	%r13d, %r13d
 3292 19fc 884500   		movb	%al, 0(%rbp)
 3293 19ff 0F8E0B01 		jle	.L692
 3293      0000
 3294              		.p2align 4,,10
 3295 1a05 0F1F00   		.p2align 3
 3296              	.L674:
 3297 1a08 31C0     		xorl	%eax, %eax
 3298 1a0a 660F1F44 		.p2align 4,,10
 3298      0000
 3299              		.p2align 3
 3300              	.L583:
 3301 1a10 4889C2   		movq	%rax, %rdx
 3302 1a13 0FB63C03 		movzbl	(%rbx,%rax), %edi
 3303 1a17 83E203   		andl	$3, %edx
 3304 1a1a 40387C15 		cmpb	%dil, 0(%rbp,%rdx)
 3304      00
 3305 1a1f 0F95C2   		setne	%dl
 3306 1a22 83C230   		addl	$48, %edx
 3307 1a25 881403   		movb	%dl, (%rbx,%rax)
 3308 1a28 4883C001 		addq	$1, %rax
 3309 1a2c 4883F820 		cmpq	$32, %rax
 3310 1a30 75DE     		jne	.L583
 3311 1a32 B9050000 		movl	$5, %ecx
 3311      00
 3312 1a37 4889EE   		movq	%rbp, %rsi
 3313 1a3a 4C89E7   		movq	%r12, %rdi
 3314 1a3d F3A6     		repz cmpsb
 3315 1a3f 0F97C0   		seta	%al
 3316 1a42 0F92C2   		setb	%dl
 3317 1a45 29D0     		subl	%edx, %eax
 3318 1a47 3C01     		cmpb	$1, %al
 3319 1a49 0F84D900 		je	.L641
 3319      0000
 3320 1a4f BF040000 		movl	$4, %edi
 3320      00
 3321 1a54 E8000000 		call	malloc
 3321      00
 3322 1a59 BF040000 		movl	$4, %edi
 3322      00
 3323 1a5e 4989C6   		movq	%rax, %r14
 3324 1a61 E8000000 		call	malloc
 3324      00
 3325 1a66 807D0031 		cmpb	$49, 0(%rbp)
 3326 1a6a 41C60630 		movb	$48, (%r14)
 3327 1a6e 41C64601 		movb	$48, 1(%r14)
 3327      30
 3328 1a73 41C64602 		movb	$48, 2(%r14)
 3328      30
 3329 1a78 41C64603 		movb	$48, 3(%r14)
 3329      30
 3330 1a7d 0F84F200 		je	.L697
 3330      0000
 3331 1a83 0FB64D01 		movzbl	1(%rbp), %ecx
 3332 1a87 C60031   		movb	$49, (%rax)
 3333 1a8a 41B83100 		movl	$49, %r8d
 3333      0000
 3334 1a90 80F930   		cmpb	$48, %cl
 3335 1a93 0F849600 		je	.L698
 3335      0000
 3336              	.L586:
 3337 1a99 C6400131 		movb	$49, 1(%rax)
 3338 1a9d 31FF     		xorl	%edi, %edi
 3339 1a9f B9310000 		movl	$49, %ecx
 3339      00
 3340 1aa4 BA300000 		movl	$48, %edx
 3340      00
 3341              	.L597:
 3342 1aa9 0FB67502 		movzbl	2(%rbp), %esi
 3343 1aad 41885601 		movb	%dl, 1(%r14)
 3344 1ab1 4038F2   		cmpb	%sil, %dl
 3345 1ab4 0F95C2   		setne	%dl
 3346 1ab7 83C230   		addl	$48, %edx
 3347 1aba 4080FE31 		cmpb	$49, %sil
 3348 1abe 885002   		movb	%dl, 2(%rax)
 3349 1ac1 0F858D00 		jne	.L588
 3349      0000
 3350 1ac7 4084FF   		testb	%dil, %dil
 3351 1aca 0F848400 		je	.L588
 3351      0000
 3352 1ad0 0FB67503 		movzbl	3(%rbp), %esi
 3353 1ad4 41C64602 		movb	$49, 2(%r14)
 3353      31
 3354 1ad9 4080FE31 		cmpb	$49, %sil
 3355 1add 0F84BF00 		je	.L699
 3355      0000
 3356              	.L589:
 3357 1ae3 C6400331 		movb	$49, 3(%rax)
 3358 1ae7 BF310000 		movl	$49, %edi
 3358      00
 3359 1aec BE300000 		movl	$48, %esi
 3359      00
 3360              	.L595:
 3361 1af1 41887603 		movb	%sil, 3(%r14)
 3362 1af5 44884500 		movb	%r8b, 0(%rbp)
 3363 1af9 884D01   		movb	%cl, 1(%rbp)
 3364 1afc 885502   		movb	%dl, 2(%rbp)
 3365 1aff 40887D03 		movb	%dil, 3(%rbp)
 3366              	.L584:
 3367 1b03 4183C701 		addl	$1, %r15d
 3368 1b07 4539EF   		cmpl	%r13d, %r15d
 3369 1b0a 0F85F8FE 		jne	.L674
 3369      FFFF
 3370              	.L692:
 3371 1b10 4883C408 		addq	$8, %rsp
 3372              		.cfi_remember_state
 3373              		.cfi_def_cfa_offset 56
 3374 1b14 4889D8   		movq	%rbx, %rax
 3375 1b17 5B       		popq	%rbx
 3376              		.cfi_def_cfa_offset 48
 3377 1b18 5D       		popq	%rbp
 3378              		.cfi_def_cfa_offset 40
 3379 1b19 415C     		popq	%r12
 3380              		.cfi_def_cfa_offset 32
 3381 1b1b 415D     		popq	%r13
 3382              		.cfi_def_cfa_offset 24
 3383 1b1d 415E     		popq	%r14
 3384              		.cfi_def_cfa_offset 16
 3385 1b1f 415F     		popq	%r15
 3386              		.cfi_def_cfa_offset 8
 3387 1b21 C3       		ret
 3388              		.p2align 4,,10
 3389 1b22 660F1F44 		.p2align 3
 3389      0000
 3390              	.L641:
 3391              		.cfi_restore_state
 3392 1b28 BD000000 		movl	$.LC52, %ebp
 3392      00
 3393 1b2d EBD4     		jmp	.L584
 3394              	.L698:
 3395 1b2f 0FB65502 		movzbl	2(%rbp), %edx
 3396 1b33 C6400130 		movb	$48, 1(%rax)
 3397 1b37 41C64601 		movb	$48, 1(%r14)
 3397      30
 3398 1b3c 80FA30   		cmpb	$48, %dl
 3399 1b3f 0F848C00 		je	.L700
 3399      0000
 3400 1b45 C6400231 		movb	$49, 2(%rax)
 3401 1b49 BA310000 		movl	$49, %edx
 3401      00
 3402 1b4e 41B83100 		movl	$49, %r8d
 3402      0000
 3403              	.L588:
 3404 1b54 0FB67D03 		movzbl	3(%rbp), %edi
 3405 1b58 41C64602 		movb	$48, 2(%r14)
 3405      30
 3406 1b5d 4080FF30 		cmpb	$48, %dil
 3407 1b61 0F857CFF 		jne	.L589
 3407      FFFF
 3408              	.L701:
 3409 1b67 C6400330 		movb	$48, 3(%rax)
 3410 1b6b BE300000 		movl	$48, %esi
 3410      00
 3411 1b70 E97CFFFF 		jmp	.L595
 3411      FF
 3412              	.L697:
 3413 1b75 0FB65501 		movzbl	1(%rbp), %edx
 3414 1b79 C60030   		movb	$48, (%rax)
 3415 1b7c 41B83000 		movl	$48, %r8d
 3415      0000
 3416 1b82 41C60631 		movb	$49, (%r14)
 3417 1b86 80FA31   		cmpb	$49, %dl
 3418 1b89 0F850AFF 		jne	.L586
 3418      FFFF
 3419 1b8f C6400130 		movb	$48, 1(%rax)
 3420 1b93 BF010000 		movl	$1, %edi
 3420      00
 3421 1b98 B9300000 		movl	$48, %ecx
 3421      00
 3422 1b9d E907FFFF 		jmp	.L597
 3422      FF
 3423              	.L699:
 3424 1ba2 C6400330 		movb	$48, 3(%rax)
 3425 1ba6 BF300000 		movl	$48, %edi
 3425      00
 3426 1bab E941FFFF 		jmp	.L595
 3426      FF
 3427              	.L598:
 3428 1bb0 31C0     		xorl	%eax, %eax
 3429 1bb2 31C9     		xorl	%ecx, %ecx
 3430 1bb4 BE200000 		movl	$32, %esi
 3430      00
 3431 1bb9 4531C0   		xorl	%r8d, %r8d
 3432 1bbc BA200000 		movl	$32, %edx
 3432      00
 3433 1bc1 41B90200 		movl	$2, %r9d
 3433      0000
 3434 1bc7 BF200000 		movl	$32, %edi
 3434      00
 3435 1bcc E90EFAFF 		jmp	.L548
 3435      FF
 3436              	.L700:
 3437 1bd1 0FB67D03 		movzbl	3(%rbp), %edi
 3438 1bd5 C6400230 		movb	$48, 2(%rax)
 3439 1bd9 89D1     		movl	%edx, %ecx
 3440 1bdb 41B83100 		movl	$49, %r8d
 3440      0000
 3441 1be1 41C64602 		movb	$48, 2(%r14)
 3441      30
 3442 1be6 4080FF30 		cmpb	$48, %dil
 3443 1bea 0F85F3FE 		jne	.L589
 3443      FFFF
 3444 1bf0 E972FFFF 		jmp	.L701
 3444      FF
 3445              	.L600:
 3446 1bf5 BE1E0000 		movl	$30, %esi
 3446      00
 3447 1bfa B9020000 		movl	$2, %ecx
 3447      00
 3448 1bff E9C4F9FF 		jmp	.L549
 3448      FF
 3449              	.L605:
 3450 1c04 BE190000 		movl	$25, %esi
 3450      00
 3451 1c09 B9070000 		movl	$7, %ecx
 3451      00
 3452 1c0e E9B5F9FF 		jmp	.L549
 3452      FF
 3453              	.L606:
 3454 1c13 BE180000 		movl	$24, %esi
 3454      00
 3455 1c18 B9080000 		movl	$8, %ecx
 3455      00
 3456 1c1d E9A6F9FF 		jmp	.L549
 3456      FF
 3457              	.L607:
 3458 1c22 BE170000 		movl	$23, %esi
 3458      00
 3459 1c27 B9090000 		movl	$9, %ecx
 3459      00
 3460 1c2c E997F9FF 		jmp	.L549
 3460      FF
 3461              	.L608:
 3462 1c31 BE160000 		movl	$22, %esi
 3462      00
 3463 1c36 B90A0000 		movl	$10, %ecx
 3463      00
 3464 1c3b E988F9FF 		jmp	.L549
 3464      FF
 3465              	.L609:
 3466 1c40 BE150000 		movl	$21, %esi
 3466      00
 3467 1c45 B90B0000 		movl	$11, %ecx
 3467      00
 3468 1c4a E979F9FF 		jmp	.L549
 3468      FF
 3469              	.L610:
 3470 1c4f BE140000 		movl	$20, %esi
 3470      00
 3471 1c54 B90C0000 		movl	$12, %ecx
 3471      00
 3472 1c59 E96AF9FF 		jmp	.L549
 3472      FF
 3473              	.L611:
 3474 1c5e BE130000 		movl	$19, %esi
 3474      00
 3475 1c63 B90D0000 		movl	$13, %ecx
 3475      00
 3476 1c68 E95BF9FF 		jmp	.L549
 3476      FF
 3477              	.L612:
 3478 1c6d BE120000 		movl	$18, %esi
 3478      00
 3479 1c72 B90E0000 		movl	$14, %ecx
 3479      00
 3480 1c77 E94CF9FF 		jmp	.L549
 3480      FF
 3481              	.L601:
 3482 1c7c BE1D0000 		movl	$29, %esi
 3482      00
 3483 1c81 B9030000 		movl	$3, %ecx
 3483      00
 3484 1c86 E93DF9FF 		jmp	.L549
 3484      FF
 3485              	.L602:
 3486 1c8b BE1C0000 		movl	$28, %esi
 3486      00
 3487 1c90 B9040000 		movl	$4, %ecx
 3487      00
 3488 1c95 E92EF9FF 		jmp	.L549
 3488      FF
 3489              	.L603:
 3490 1c9a BE1B0000 		movl	$27, %esi
 3490      00
 3491 1c9f B9050000 		movl	$5, %ecx
 3491      00
 3492 1ca4 E91FF9FF 		jmp	.L549
 3492      FF
 3493              	.L604:
 3494 1ca9 BE1A0000 		movl	$26, %esi
 3494      00
 3495 1cae B9060000 		movl	$6, %ecx
 3495      00
 3496 1cb3 E910F9FF 		jmp	.L549
 3496      FF
 3497              	.L599:
 3498 1cb8 BE1F0000 		movl	$31, %esi
 3498      00
 3499 1cbd B9010000 		movl	$1, %ecx
 3499      00
 3500 1cc2 E901F9FF 		jmp	.L549
 3500      FF
 3501              		.cfi_endproc
 3502              	.LFE75:
 3504              		.section	.text.unlikely
 3505              	.LCOLDE55:
 3506              		.text
 3507              	.LHOTE55:
 3508              		.section	.text.unlikely
 3509              	.LCOLDB56:
 3510              		.text
 3511              	.LHOTB56:
 3512 1cc7 660F1F84 		.p2align 4,,15
 3512      00000000 
 3512      00
 3513              		.globl	read_byte
 3515              	read_byte:
 3516              	.LFB76:
 3517              		.cfi_startproc
 3518 1cd0 53       		pushq	%rbx
 3519              		.cfi_def_cfa_offset 16
 3520              		.cfi_offset 3, -16
 3521 1cd1 89FB     		movl	%edi, %ebx
 3522 1cd3 BF090000 		movl	$9, %edi
 3522      00
 3523 1cd8 E8000000 		call	malloc
 3523      00
 3524 1cdd 89DA     		movl	%ebx, %edx
 3525 1cdf C6400800 		movb	$0, 8(%rax)
 3526 1ce3 83E201   		andl	$1, %edx
 3527 1ce6 80FA01   		cmpb	$1, %dl
 3528 1ce9 19D2     		sbbl	%edx, %edx
 3529 1ceb 83C231   		addl	$49, %edx
 3530 1cee 8810     		movb	%dl, (%rax)
 3531 1cf0 89DA     		movl	%ebx, %edx
 3532 1cf2 D0EA     		shrb	%dl
 3533 1cf4 83E201   		andl	$1, %edx
 3534 1cf7 80FA01   		cmpb	$1, %dl
 3535 1cfa 19D2     		sbbl	%edx, %edx
 3536 1cfc 83C231   		addl	$49, %edx
 3537 1cff 885001   		movb	%dl, 1(%rax)
 3538 1d02 89DA     		movl	%ebx, %edx
 3539 1d04 C0EA02   		shrb	$2, %dl
 3540 1d07 83E201   		andl	$1, %edx
 3541 1d0a 80FA01   		cmpb	$1, %dl
 3542 1d0d 19D2     		sbbl	%edx, %edx
 3543 1d0f 83C231   		addl	$49, %edx
 3544 1d12 885002   		movb	%dl, 2(%rax)
 3545 1d15 89DA     		movl	%ebx, %edx
 3546 1d17 C0EA03   		shrb	$3, %dl
 3547 1d1a 83E201   		andl	$1, %edx
 3548 1d1d 80FA01   		cmpb	$1, %dl
 3549 1d20 19D2     		sbbl	%edx, %edx
 3550 1d22 83C231   		addl	$49, %edx
 3551 1d25 885003   		movb	%dl, 3(%rax)
 3552 1d28 89DA     		movl	%ebx, %edx
 3553 1d2a C0EA04   		shrb	$4, %dl
 3554 1d2d 83E201   		andl	$1, %edx
 3555 1d30 80FA01   		cmpb	$1, %dl
 3556 1d33 19D2     		sbbl	%edx, %edx
 3557 1d35 83C231   		addl	$49, %edx
 3558 1d38 885004   		movb	%dl, 4(%rax)
 3559 1d3b 89DA     		movl	%ebx, %edx
 3560 1d3d C0EA05   		shrb	$5, %dl
 3561 1d40 83E201   		andl	$1, %edx
 3562 1d43 80FA01   		cmpb	$1, %dl
 3563 1d46 19D2     		sbbl	%edx, %edx
 3564 1d48 83C231   		addl	$49, %edx
 3565 1d4b 885005   		movb	%dl, 5(%rax)
 3566 1d4e 89DA     		movl	%ebx, %edx
 3567 1d50 C0EA06   		shrb	$6, %dl
 3568 1d53 83E201   		andl	$1, %edx
 3569 1d56 80FA01   		cmpb	$1, %dl
 3570 1d59 19D2     		sbbl	%edx, %edx
 3571 1d5b C0EB07   		shrb	$7, %bl
 3572 1d5e 83C231   		addl	$49, %edx
 3573 1d61 80FB01   		cmpb	$1, %bl
 3574 1d64 885006   		movb	%dl, 6(%rax)
 3575 1d67 19D2     		sbbl	%edx, %edx
 3576 1d69 83C231   		addl	$49, %edx
 3577 1d6c 885007   		movb	%dl, 7(%rax)
 3578 1d6f 5B       		popq	%rbx
 3579              		.cfi_def_cfa_offset 8
 3580 1d70 C3       		ret
 3581              		.cfi_endproc
 3582              	.LFE76:
 3584              		.section	.text.unlikely
 3585              	.LCOLDE56:
 3586              		.text
 3587              	.LHOTE56:
 3588              		.section	.text.unlikely
 3589              	.LCOLDB57:
 3590              		.text
 3591              	.LHOTB57:
 3592 1d71 0F1F4400 		.p2align 4,,15
 3592      00662E0F 
 3592      1F840000 
 3592      000000
 3593              		.globl	write_4byte_to_board
 3595              	write_4byte_to_board:
 3596              	.LFB77:
 3597              		.cfi_startproc
 3598 1d80 4155     		pushq	%r13
 3599              		.cfi_def_cfa_offset 16
 3600              		.cfi_offset 13, -16
 3601 1d82 4154     		pushq	%r12
 3602              		.cfi_def_cfa_offset 24
 3603              		.cfi_offset 12, -24
 3604 1d84 4989CD   		movq	%rcx, %r13
 3605 1d87 55       		pushq	%rbp
 3606              		.cfi_def_cfa_offset 32
 3607              		.cfi_offset 6, -32
 3608 1d88 53       		pushq	%rbx
 3609              		.cfi_def_cfa_offset 40
 3610              		.cfi_offset 3, -40
 3611 1d89 89FD     		movl	%edi, %ebp
 3612 1d8b 4889F3   		movq	%rsi, %rbx
 3613 1d8e BF210000 		movl	$33, %edi
 3613      00
 3614 1d93 4989D4   		movq	%rdx, %r12
 3615 1d96 4883EC18 		subq	$24, %rsp
 3616              		.cfi_def_cfa_offset 64
 3617 1d9a 64488B04 		movq	%fs:40, %rax
 3617      25280000 
 3617      00
 3618 1da3 48894424 		movq	%rax, 8(%rsp)
 3618      08
 3619 1da8 31C0     		xorl	%eax, %eax
 3620 1daa E8000000 		call	malloc
 3620      00
 3621 1daf 0FB65307 		movzbl	7(%rbx), %edx
 3622 1db3 4889C7   		movq	%rax, %rdi
 3623 1db6 8810     		movb	%dl, (%rax)
 3624 1db8 0FB65306 		movzbl	6(%rbx), %edx
 3625 1dbc 885001   		movb	%dl, 1(%rax)
 3626 1dbf 0FB65305 		movzbl	5(%rbx), %edx
 3627 1dc3 885002   		movb	%dl, 2(%rax)
 3628 1dc6 0FB65304 		movzbl	4(%rbx), %edx
 3629 1dca 885003   		movb	%dl, 3(%rax)
 3630 1dcd 0FB65303 		movzbl	3(%rbx), %edx
 3631 1dd1 885004   		movb	%dl, 4(%rax)
 3632 1dd4 0FB65302 		movzbl	2(%rbx), %edx
 3633 1dd8 885005   		movb	%dl, 5(%rax)
 3634 1ddb 0FB65301 		movzbl	1(%rbx), %edx
 3635 1ddf 885006   		movb	%dl, 6(%rax)
 3636 1de2 0FB613   		movzbl	(%rbx), %edx
 3637 1de5 885007   		movb	%dl, 7(%rax)
 3638 1de8 0FB6530F 		movzbl	15(%rbx), %edx
 3639 1dec 885008   		movb	%dl, 8(%rax)
 3640 1def 0FB6530E 		movzbl	14(%rbx), %edx
 3641 1df3 885009   		movb	%dl, 9(%rax)
 3642 1df6 0FB6530D 		movzbl	13(%rbx), %edx
 3643 1dfa 88500A   		movb	%dl, 10(%rax)
 3644 1dfd 0FB6530C 		movzbl	12(%rbx), %edx
 3645 1e01 88500B   		movb	%dl, 11(%rax)
 3646 1e04 0FB6530B 		movzbl	11(%rbx), %edx
 3647 1e08 88500C   		movb	%dl, 12(%rax)
 3648 1e0b 0FB6530A 		movzbl	10(%rbx), %edx
 3649 1e0f 88500D   		movb	%dl, 13(%rax)
 3650 1e12 0FB65309 		movzbl	9(%rbx), %edx
 3651 1e16 88500E   		movb	%dl, 14(%rax)
 3652 1e19 0FB65308 		movzbl	8(%rbx), %edx
 3653 1e1d 88500F   		movb	%dl, 15(%rax)
 3654 1e20 0FB65317 		movzbl	23(%rbx), %edx
 3655 1e24 885010   		movb	%dl, 16(%rax)
 3656 1e27 0FB65316 		movzbl	22(%rbx), %edx
 3657 1e2b 885011   		movb	%dl, 17(%rax)
 3658 1e2e 0FB65315 		movzbl	21(%rbx), %edx
 3659 1e32 885012   		movb	%dl, 18(%rax)
 3660 1e35 0FB65314 		movzbl	20(%rbx), %edx
 3661 1e39 885013   		movb	%dl, 19(%rax)
 3662 1e3c 0FB65313 		movzbl	19(%rbx), %edx
 3663 1e40 885014   		movb	%dl, 20(%rax)
 3664 1e43 0FB65312 		movzbl	18(%rbx), %edx
 3665 1e47 885015   		movb	%dl, 21(%rax)
 3666 1e4a 0FB65311 		movzbl	17(%rbx), %edx
 3667 1e4e 885016   		movb	%dl, 22(%rax)
 3668 1e51 0FB65310 		movzbl	16(%rbx), %edx
 3669 1e55 885017   		movb	%dl, 23(%rax)
 3670 1e58 0FB6531F 		movzbl	31(%rbx), %edx
 3671 1e5c 885018   		movb	%dl, 24(%rax)
 3672 1e5f 0FB6531E 		movzbl	30(%rbx), %edx
 3673 1e63 885019   		movb	%dl, 25(%rax)
 3674 1e66 0FB6531D 		movzbl	29(%rbx), %edx
 3675 1e6a 88501A   		movb	%dl, 26(%rax)
 3676 1e6d 0FB6531C 		movzbl	28(%rbx), %edx
 3677 1e71 88501B   		movb	%dl, 27(%rax)
 3678 1e74 0FB6531B 		movzbl	27(%rbx), %edx
 3679 1e78 88501C   		movb	%dl, 28(%rax)
 3680 1e7b 0FB6531A 		movzbl	26(%rbx), %edx
 3681 1e7f 88501D   		movb	%dl, 29(%rax)
 3682 1e82 0FB65319 		movzbl	25(%rbx), %edx
 3683 1e86 88501E   		movb	%dl, 30(%rax)
 3684 1e89 0FB65318 		movzbl	24(%rbx), %edx
 3685 1e8d 88501F   		movb	%dl, 31(%rax)
 3686 1e90 C6402000 		movb	$0, 32(%rax)
 3687 1e94 488B3500 		movq	key(%rip), %rsi
 3687      000000
 3688 1e9b E8000000 		call	encrypt
 3688      00
 3689 1ea0 803831   		cmpb	$49, (%rax)
 3690 1ea3 4C89E7   		movq	%r12, %rdi
 3691 1ea6 400FB6F5 		movzbl	%bpl, %esi
 3692 1eaa 4D89E8   		movq	%r13, %r8
 3693 1ead 0F94C1   		sete	%cl
 3694 1eb0 80780131 		cmpb	$49, 1(%rax)
 3695 1eb4 8D5102   		leal	2(%rcx), %edx
 3696 1eb7 0F44CA   		cmove	%edx, %ecx
 3697 1eba 80780231 		cmpb	$49, 2(%rax)
 3698 1ebe 8D5104   		leal	4(%rcx), %edx
 3699 1ec1 0F44CA   		cmove	%edx, %ecx
 3700 1ec4 80780331 		cmpb	$49, 3(%rax)
 3701 1ec8 8D5108   		leal	8(%rcx), %edx
 3702 1ecb 0F44CA   		cmove	%edx, %ecx
 3703 1ece 80780431 		cmpb	$49, 4(%rax)
 3704 1ed2 8D5110   		leal	16(%rcx), %edx
 3705 1ed5 0F44CA   		cmove	%edx, %ecx
 3706 1ed8 80780531 		cmpb	$49, 5(%rax)
 3707 1edc 8D5120   		leal	32(%rcx), %edx
 3708 1edf 0F44CA   		cmove	%edx, %ecx
 3709 1ee2 80780631 		cmpb	$49, 6(%rax)
 3710 1ee6 8D5140   		leal	64(%rcx), %edx
 3711 1ee9 0F45D1   		cmovne	%ecx, %edx
 3712 1eec 80780731 		cmpb	$49, 7(%rax)
 3713 1ef0 8D4A80   		leal	-128(%rdx), %ecx
 3714 1ef3 0F44D1   		cmove	%ecx, %edx
 3715 1ef6 80780831 		cmpb	$49, 8(%rax)
 3716 1efa 881424   		movb	%dl, (%rsp)
 3717 1efd 0F94C1   		sete	%cl
 3718 1f00 80780931 		cmpb	$49, 9(%rax)
 3719 1f04 8D5102   		leal	2(%rcx), %edx
 3720 1f07 0F44CA   		cmove	%edx, %ecx
 3721 1f0a 80780A31 		cmpb	$49, 10(%rax)
 3722 1f0e 8D5104   		leal	4(%rcx), %edx
 3723 1f11 0F44CA   		cmove	%edx, %ecx
 3724 1f14 80780B31 		cmpb	$49, 11(%rax)
 3725 1f18 8D5108   		leal	8(%rcx), %edx
 3726 1f1b 0F44CA   		cmove	%edx, %ecx
 3727 1f1e 80780C31 		cmpb	$49, 12(%rax)
 3728 1f22 8D5110   		leal	16(%rcx), %edx
 3729 1f25 0F45D1   		cmovne	%ecx, %edx
 3730 1f28 80780D31 		cmpb	$49, 13(%rax)
 3731 1f2c 8D4A20   		leal	32(%rdx), %ecx
 3732 1f2f 0F44D1   		cmove	%ecx, %edx
 3733 1f32 80780E31 		cmpb	$49, 14(%rax)
 3734 1f36 8D4A40   		leal	64(%rdx), %ecx
 3735 1f39 0F44D1   		cmove	%ecx, %edx
 3736 1f3c 80780F31 		cmpb	$49, 15(%rax)
 3737 1f40 8D4A80   		leal	-128(%rdx), %ecx
 3738 1f43 0F44D1   		cmove	%ecx, %edx
 3739 1f46 80781031 		cmpb	$49, 16(%rax)
 3740 1f4a 88542401 		movb	%dl, 1(%rsp)
 3741 1f4e 0F94C1   		sete	%cl
 3742 1f51 80781131 		cmpb	$49, 17(%rax)
 3743 1f55 8D5102   		leal	2(%rcx), %edx
 3744 1f58 0F45D1   		cmovne	%ecx, %edx
 3745 1f5b 80781231 		cmpb	$49, 18(%rax)
 3746 1f5f 8D4A04   		leal	4(%rdx), %ecx
 3747 1f62 0F44D1   		cmove	%ecx, %edx
 3748 1f65 80781331 		cmpb	$49, 19(%rax)
 3749 1f69 8D4A08   		leal	8(%rdx), %ecx
 3750 1f6c 0F44D1   		cmove	%ecx, %edx
 3751 1f6f 80781431 		cmpb	$49, 20(%rax)
 3752 1f73 8D4A10   		leal	16(%rdx), %ecx
 3753 1f76 0F44D1   		cmove	%ecx, %edx
 3754 1f79 80781531 		cmpb	$49, 21(%rax)
 3755 1f7d 8D4A20   		leal	32(%rdx), %ecx
 3756 1f80 0F44D1   		cmove	%ecx, %edx
 3757 1f83 80781631 		cmpb	$49, 22(%rax)
 3758 1f87 8D4A40   		leal	64(%rdx), %ecx
 3759 1f8a 0F44D1   		cmove	%ecx, %edx
 3760 1f8d 80781731 		cmpb	$49, 23(%rax)
 3761 1f91 8D4A80   		leal	-128(%rdx), %ecx
 3762 1f94 0F44D1   		cmove	%ecx, %edx
 3763 1f97 80781831 		cmpb	$49, 24(%rax)
 3764 1f9b 88542402 		movb	%dl, 2(%rsp)
 3765 1f9f 0F94C1   		sete	%cl
 3766 1fa2 80781931 		cmpb	$49, 25(%rax)
 3767 1fa6 8D5102   		leal	2(%rcx), %edx
 3768 1fa9 0F45D1   		cmovne	%ecx, %edx
 3769 1fac 80781A31 		cmpb	$49, 26(%rax)
 3770 1fb0 8D4A04   		leal	4(%rdx), %ecx
 3771 1fb3 0F44D1   		cmove	%ecx, %edx
 3772 1fb6 80781B31 		cmpb	$49, 27(%rax)
 3773 1fba 8D4A08   		leal	8(%rdx), %ecx
 3774 1fbd 0F44D1   		cmove	%ecx, %edx
 3775 1fc0 80781C31 		cmpb	$49, 28(%rax)
 3776 1fc4 8D4A10   		leal	16(%rdx), %ecx
 3777 1fc7 0F44D1   		cmove	%ecx, %edx
 3778 1fca 80781D31 		cmpb	$49, 29(%rax)
 3779 1fce 8D4A20   		leal	32(%rdx), %ecx
 3780 1fd1 0F44D1   		cmove	%ecx, %edx
 3781 1fd4 80781E31 		cmpb	$49, 30(%rax)
 3782 1fd8 8D4A40   		leal	64(%rdx), %ecx
 3783 1fdb 0F44D1   		cmove	%ecx, %edx
 3784 1fde 80781F31 		cmpb	$49, 31(%rax)
 3785 1fe2 8D4A80   		leal	-128(%rdx), %ecx
 3786 1fe5 0F44D1   		cmove	%ecx, %edx
 3787 1fe8 4889E1   		movq	%rsp, %rcx
 3788 1feb 88542403 		movb	%dl, 3(%rsp)
 3789 1fef BA040000 		movl	$4, %edx
 3789      00
 3790 1ff4 E8000000 		call	flWriteChannel
 3790      00
 3791 1ff9 83F801   		cmpl	$1, %eax
 3792 1ffc 19C0     		sbbl	%eax, %eax
 3793 1ffe 83E00D   		andl	$13, %eax
 3794 2001 83C066   		addl	$102, %eax
 3795 2004 488B7C24 		movq	8(%rsp), %rdi
 3795      08
 3796 2009 6448333C 		xorq	%fs:40, %rdi
 3796      25280000 
 3796      00
 3797 2012 750B     		jne	.L725
 3798 2014 4883C418 		addq	$24, %rsp
 3799              		.cfi_remember_state
 3800              		.cfi_def_cfa_offset 40
 3801 2018 5B       		popq	%rbx
 3802              		.cfi_def_cfa_offset 32
 3803 2019 5D       		popq	%rbp
 3804              		.cfi_def_cfa_offset 24
 3805 201a 415C     		popq	%r12
 3806              		.cfi_def_cfa_offset 16
 3807 201c 415D     		popq	%r13
 3808              		.cfi_def_cfa_offset 8
 3809 201e C3       		ret
 3810              	.L725:
 3811              		.cfi_restore_state
 3812 201f E8000000 		call	__stack_chk_fail
 3812      00
 3813              		.cfi_endproc
 3814              	.LFE77:
 3816              		.section	.text.unlikely
 3817              	.LCOLDE57:
 3818              		.text
 3819              	.LHOTE57:
 3820              		.section	.text.unlikely
 3821              	.LCOLDB58:
 3822              		.text
 3823              	.LHOTB58:
 3824 2024 6690662E 		.p2align 4,,15
 3824      0F1F8400 
 3824      00000000 
 3825              		.globl	read_4byte_from_fpga
 3827              	read_4byte_from_fpga:
 3828              	.LFB78:
 3829              		.cfi_startproc
 3830 2030 4155     		pushq	%r13
 3831              		.cfi_def_cfa_offset 16
 3832              		.cfi_offset 13, -16
 3833 2032 4154     		pushq	%r12
 3834              		.cfi_def_cfa_offset 24
 3835              		.cfi_offset 12, -24
 3836 2034 4989D5   		movq	%rdx, %r13
 3837 2037 55       		pushq	%rbp
 3838              		.cfi_def_cfa_offset 32
 3839              		.cfi_offset 6, -32
 3840 2038 53       		pushq	%rbx
 3841              		.cfi_def_cfa_offset 40
 3842              		.cfi_offset 3, -40
 3843 2039 89FD     		movl	%edi, %ebp
 3844 203b 4989F4   		movq	%rsi, %r12
 3845 203e BF210000 		movl	$33, %edi
 3845      00
 3846 2043 400FB6ED 		movzbl	%bpl, %ebp
 3847 2047 4883EC18 		subq	$24, %rsp
 3848              		.cfi_def_cfa_offset 64
 3849 204b 64488B04 		movq	%fs:40, %rax
 3849      25280000 
 3849      00
 3850 2054 48894424 		movq	%rax, 8(%rsp)
 3850      08
 3851 2059 31C0     		xorl	%eax, %eax
 3852 205b E8000000 		call	malloc
 3852      00
 3853 2060 4D89E8   		movq	%r13, %r8
 3854 2063 4889E1   		movq	%rsp, %rcx
 3855 2066 BA020000 		movl	$2, %edx
 3855      00
 3856 206b 89EE     		movl	%ebp, %esi
 3857 206d 4C89E7   		movq	%r12, %rdi
 3858 2070 4889C3   		movq	%rax, %rbx
 3859 2073 E8000000 		call	flReadChannel
 3859      00
 3860 2078 4D89E8   		movq	%r13, %r8
 3861 207b 4889E1   		movq	%rsp, %rcx
 3862 207e BA040000 		movl	$4, %edx
 3862      00
 3863 2083 89EE     		movl	%ebp, %esi
 3864 2085 4C89E7   		movq	%r12, %rdi
 3865 2088 E8000000 		call	flReadChannel
 3865      00
 3866 208d 85C0     		testl	%eax, %eax
 3867 208f 0F852302 		jne	.L795
 3867      0000
 3868 2095 0FB60424 		movzbl	(%rsp), %eax
 3869 2099 4889DF   		movq	%rbx, %rdi
 3870 209c 89C2     		movl	%eax, %edx
 3871 209e 83E201   		andl	$1, %edx
 3872 20a1 83C230   		addl	$48, %edx
 3873 20a4 8813     		movb	%dl, (%rbx)
 3874 20a6 89C2     		movl	%eax, %edx
 3875 20a8 83E202   		andl	$2, %edx
 3876 20ab 80FA01   		cmpb	$1, %dl
 3877 20ae 19D2     		sbbl	%edx, %edx
 3878 20b0 83C231   		addl	$49, %edx
 3879 20b3 885301   		movb	%dl, 1(%rbx)
 3880 20b6 89C2     		movl	%eax, %edx
 3881 20b8 83E204   		andl	$4, %edx
 3882 20bb 80FA01   		cmpb	$1, %dl
 3883 20be 19D2     		sbbl	%edx, %edx
 3884 20c0 83C231   		addl	$49, %edx
 3885 20c3 885302   		movb	%dl, 2(%rbx)
 3886 20c6 89C2     		movl	%eax, %edx
 3887 20c8 83E208   		andl	$8, %edx
 3888 20cb 80FA01   		cmpb	$1, %dl
 3889 20ce 19D2     		sbbl	%edx, %edx
 3890 20d0 83C231   		addl	$49, %edx
 3891 20d3 885303   		movb	%dl, 3(%rbx)
 3892 20d6 89C2     		movl	%eax, %edx
 3893 20d8 83E210   		andl	$16, %edx
 3894 20db 80FA01   		cmpb	$1, %dl
 3895 20de 19D2     		sbbl	%edx, %edx
 3896 20e0 83C231   		addl	$49, %edx
 3897 20e3 885304   		movb	%dl, 4(%rbx)
 3898 20e6 89C2     		movl	%eax, %edx
 3899 20e8 83E220   		andl	$32, %edx
 3900 20eb 80FA01   		cmpb	$1, %dl
 3901 20ee 19D2     		sbbl	%edx, %edx
 3902 20f0 83C231   		addl	$49, %edx
 3903 20f3 885305   		movb	%dl, 5(%rbx)
 3904 20f6 89C2     		movl	%eax, %edx
 3905 20f8 83E240   		andl	$64, %edx
 3906 20fb 80FA01   		cmpb	$1, %dl
 3907 20fe 19D2     		sbbl	%edx, %edx
 3908 2100 83E080   		andl	$-128, %eax
 3909 2103 83C231   		addl	$49, %edx
 3910 2106 3C01     		cmpb	$1, %al
 3911 2108 19C0     		sbbl	%eax, %eax
 3912 210a 885306   		movb	%dl, 6(%rbx)
 3913 210d 83C031   		addl	$49, %eax
 3914 2110 884307   		movb	%al, 7(%rbx)
 3915 2113 0FB64424 		movzbl	1(%rsp), %eax
 3915      01
 3916 2118 89C2     		movl	%eax, %edx
 3917 211a 83E201   		andl	$1, %edx
 3918 211d 83C230   		addl	$48, %edx
 3919 2120 885308   		movb	%dl, 8(%rbx)
 3920 2123 89C2     		movl	%eax, %edx
 3921 2125 83E202   		andl	$2, %edx
 3922 2128 80FA01   		cmpb	$1, %dl
 3923 212b 19D2     		sbbl	%edx, %edx
 3924 212d 83C231   		addl	$49, %edx
 3925 2130 885309   		movb	%dl, 9(%rbx)
 3926 2133 89C2     		movl	%eax, %edx
 3927 2135 83E204   		andl	$4, %edx
 3928 2138 80FA01   		cmpb	$1, %dl
 3929 213b 19D2     		sbbl	%edx, %edx
 3930 213d 83C231   		addl	$49, %edx
 3931 2140 88530A   		movb	%dl, 10(%rbx)
 3932 2143 89C2     		movl	%eax, %edx
 3933 2145 83E208   		andl	$8, %edx
 3934 2148 80FA01   		cmpb	$1, %dl
 3935 214b 19D2     		sbbl	%edx, %edx
 3936 214d 83C231   		addl	$49, %edx
 3937 2150 88530B   		movb	%dl, 11(%rbx)
 3938 2153 89C2     		movl	%eax, %edx
 3939 2155 83E210   		andl	$16, %edx
 3940 2158 80FA01   		cmpb	$1, %dl
 3941 215b 19D2     		sbbl	%edx, %edx
 3942 215d 83C231   		addl	$49, %edx
 3943 2160 88530C   		movb	%dl, 12(%rbx)
 3944 2163 89C2     		movl	%eax, %edx
 3945 2165 83E220   		andl	$32, %edx
 3946 2168 80FA01   		cmpb	$1, %dl
 3947 216b 19D2     		sbbl	%edx, %edx
 3948 216d 83C231   		addl	$49, %edx
 3949 2170 88530D   		movb	%dl, 13(%rbx)
 3950 2173 89C2     		movl	%eax, %edx
 3951 2175 83E240   		andl	$64, %edx
 3952 2178 80FA01   		cmpb	$1, %dl
 3953 217b 19D2     		sbbl	%edx, %edx
 3954 217d 83E080   		andl	$-128, %eax
 3955 2180 83C231   		addl	$49, %edx
 3956 2183 3C01     		cmpb	$1, %al
 3957 2185 19C0     		sbbl	%eax, %eax
 3958 2187 88530E   		movb	%dl, 14(%rbx)
 3959 218a 83C031   		addl	$49, %eax
 3960 218d 88430F   		movb	%al, 15(%rbx)
 3961 2190 0FB64424 		movzbl	2(%rsp), %eax
 3961      02
 3962 2195 89C2     		movl	%eax, %edx
 3963 2197 83E201   		andl	$1, %edx
 3964 219a 83C230   		addl	$48, %edx
 3965 219d 885310   		movb	%dl, 16(%rbx)
 3966 21a0 89C2     		movl	%eax, %edx
 3967 21a2 83E202   		andl	$2, %edx
 3968 21a5 80FA01   		cmpb	$1, %dl
 3969 21a8 19D2     		sbbl	%edx, %edx
 3970 21aa 83C231   		addl	$49, %edx
 3971 21ad 885311   		movb	%dl, 17(%rbx)
 3972 21b0 89C2     		movl	%eax, %edx
 3973 21b2 83E204   		andl	$4, %edx
 3974 21b5 80FA01   		cmpb	$1, %dl
 3975 21b8 19D2     		sbbl	%edx, %edx
 3976 21ba 83C231   		addl	$49, %edx
 3977 21bd 885312   		movb	%dl, 18(%rbx)
 3978 21c0 89C2     		movl	%eax, %edx
 3979 21c2 83E208   		andl	$8, %edx
 3980 21c5 80FA01   		cmpb	$1, %dl
 3981 21c8 19D2     		sbbl	%edx, %edx
 3982 21ca 83C231   		addl	$49, %edx
 3983 21cd 885313   		movb	%dl, 19(%rbx)
 3984 21d0 89C2     		movl	%eax, %edx
 3985 21d2 83E210   		andl	$16, %edx
 3986 21d5 80FA01   		cmpb	$1, %dl
 3987 21d8 19D2     		sbbl	%edx, %edx
 3988 21da 83C231   		addl	$49, %edx
 3989 21dd 885314   		movb	%dl, 20(%rbx)
 3990 21e0 89C2     		movl	%eax, %edx
 3991 21e2 83E220   		andl	$32, %edx
 3992 21e5 80FA01   		cmpb	$1, %dl
 3993 21e8 19D2     		sbbl	%edx, %edx
 3994 21ea 83C231   		addl	$49, %edx
 3995 21ed 885315   		movb	%dl, 21(%rbx)
 3996 21f0 89C2     		movl	%eax, %edx
 3997 21f2 83E240   		andl	$64, %edx
 3998 21f5 80FA01   		cmpb	$1, %dl
 3999 21f8 19D2     		sbbl	%edx, %edx
 4000 21fa 83E080   		andl	$-128, %eax
 4001 21fd 83C231   		addl	$49, %edx
 4002 2200 3C01     		cmpb	$1, %al
 4003 2202 19C0     		sbbl	%eax, %eax
 4004 2204 885316   		movb	%dl, 22(%rbx)
 4005 2207 83C031   		addl	$49, %eax
 4006 220a 884317   		movb	%al, 23(%rbx)
 4007 220d 0FB64424 		movzbl	3(%rsp), %eax
 4007      03
 4008 2212 89C2     		movl	%eax, %edx
 4009 2214 83E201   		andl	$1, %edx
 4010 2217 83C230   		addl	$48, %edx
 4011 221a 885318   		movb	%dl, 24(%rbx)
 4012 221d 89C2     		movl	%eax, %edx
 4013 221f 83E202   		andl	$2, %edx
 4014 2222 80FA01   		cmpb	$1, %dl
 4015 2225 19D2     		sbbl	%edx, %edx
 4016 2227 83C231   		addl	$49, %edx
 4017 222a 885319   		movb	%dl, 25(%rbx)
 4018 222d 89C2     		movl	%eax, %edx
 4019 222f 83E204   		andl	$4, %edx
 4020 2232 80FA01   		cmpb	$1, %dl
 4021 2235 19D2     		sbbl	%edx, %edx
 4022 2237 83C231   		addl	$49, %edx
 4023 223a 88531A   		movb	%dl, 26(%rbx)
 4024 223d 89C2     		movl	%eax, %edx
 4025 223f 83E208   		andl	$8, %edx
 4026 2242 80FA01   		cmpb	$1, %dl
 4027 2245 19D2     		sbbl	%edx, %edx
 4028 2247 83C231   		addl	$49, %edx
 4029 224a 88531B   		movb	%dl, 27(%rbx)
 4030 224d 89C2     		movl	%eax, %edx
 4031 224f 83E210   		andl	$16, %edx
 4032 2252 80FA01   		cmpb	$1, %dl
 4033 2255 19D2     		sbbl	%edx, %edx
 4034 2257 83C231   		addl	$49, %edx
 4035 225a 88531C   		movb	%dl, 28(%rbx)
 4036 225d 89C2     		movl	%eax, %edx
 4037 225f 488B3500 		movq	key(%rip), %rsi
 4037      000000
 4038 2266 83E220   		andl	$32, %edx
 4039 2269 80FA01   		cmpb	$1, %dl
 4040 226c 19D2     		sbbl	%edx, %edx
 4041 226e 83C231   		addl	$49, %edx
 4042 2271 88531D   		movb	%dl, 29(%rbx)
 4043 2274 89C2     		movl	%eax, %edx
 4044 2276 83E240   		andl	$64, %edx
 4045 2279 80FA01   		cmpb	$1, %dl
 4046 227c 19D2     		sbbl	%edx, %edx
 4047 227e 83E080   		andl	$-128, %eax
 4048 2281 83C231   		addl	$49, %edx
 4049 2284 3C01     		cmpb	$1, %al
 4050 2286 19C0     		sbbl	%eax, %eax
 4051 2288 88531E   		movb	%dl, 30(%rbx)
 4052 228b 83C031   		addl	$49, %eax
 4053 228e 88431F   		movb	%al, 31(%rbx)
 4054 2291 E8000000 		call	decrypt
 4054      00
 4055              	.L728:
 4056 2296 488B4C24 		movq	8(%rsp), %rcx
 4056      08
 4057 229b 6448330C 		xorq	%fs:40, %rcx
 4057      25280000 
 4057      00
 4058 22a4 751A     		jne	.L796
 4059 22a6 4883C418 		addq	$24, %rsp
 4060              		.cfi_remember_state
 4061              		.cfi_def_cfa_offset 40
 4062 22aa 5B       		popq	%rbx
 4063              		.cfi_def_cfa_offset 32
 4064 22ab 5D       		popq	%rbp
 4065              		.cfi_def_cfa_offset 24
 4066 22ac 415C     		popq	%r12
 4067              		.cfi_def_cfa_offset 16
 4068 22ae 415D     		popq	%r13
 4069              		.cfi_def_cfa_offset 8
 4070 22b0 C3       		ret
 4071              		.p2align 4,,10
 4072 22b1 0F1F8000 		.p2align 3
 4072      000000
 4073              	.L795:
 4074              		.cfi_restore_state
 4075 22b8 C60366   		movb	$102, (%rbx)
 4076 22bb 4889D8   		movq	%rbx, %rax
 4077 22be EBD6     		jmp	.L728
 4078              	.L796:
 4079 22c0 E8000000 		call	__stack_chk_fail
 4079      00
 4080              		.cfi_endproc
 4081              	.LFE78:
 4083              		.section	.text.unlikely
 4084              	.LCOLDE58:
 4085              		.text
 4086              	.LHOTE58:
 4087              		.section	.text.unlikely
 4088              	.LCOLDB59:
 4089              		.text
 4090              	.LHOTB59:
 4091 22c5 90662E0F 		.p2align 4,,15
 4091      1F840000 
 4091      000000
 4092              		.globl	read_1byte_from_fpgalink
 4094              	read_1byte_from_fpgalink:
 4095              	.LFB79:
 4096              		.cfi_startproc
 4097 22d0 4156     		pushq	%r14
 4098              		.cfi_def_cfa_offset 16
 4099              		.cfi_offset 14, -16
 4100 22d2 4155     		pushq	%r13
 4101              		.cfi_def_cfa_offset 24
 4102              		.cfi_offset 13, -24
 4103 22d4 4989D6   		movq	%rdx, %r14
 4104 22d7 4154     		pushq	%r12
 4105              		.cfi_def_cfa_offset 32
 4106              		.cfi_offset 12, -32
 4107 22d9 55       		pushq	%rbp
 4108              		.cfi_def_cfa_offset 40
 4109              		.cfi_offset 6, -40
 4110 22da 4189FC   		movl	%edi, %r12d
 4111 22dd 53       		pushq	%rbx
 4112              		.cfi_def_cfa_offset 48
 4113              		.cfi_offset 3, -48
 4114 22de BF210000 		movl	$33, %edi
 4114      00
 4115 22e3 89CB     		movl	%ecx, %ebx
 4116 22e5 4989F5   		movq	%rsi, %r13
 4117 22e8 4883EC10 		subq	$16, %rsp
 4118              		.cfi_def_cfa_offset 64
 4119 22ec 64488B04 		movq	%fs:40, %rax
 4119      25280000 
 4119      00
 4120 22f5 48894424 		movq	%rax, 8(%rsp)
 4120      08
 4121 22fa 31C0     		xorl	%eax, %eax
 4122 22fc E8000000 		call	malloc
 4122      00
 4123 2301 85DB     		testl	%ebx, %ebx
 4124 2303 4889C5   		movq	%rax, %rbp
 4125 2306 0F8E7402 		jle	.L798
 4125      0000
 4126 230c 450FB6E4 		movzbl	%r12b, %r12d
 4127 2310 EB0E     		jmp	.L850
 4128              		.p2align 4,,10
 4129 2312 660F1F44 		.p2align 3
 4129      0000
 4130              	.L799:
 4131 2318 85DB     		testl	%ebx, %ebx
 4132 231a 0F846002 		je	.L798
 4132      0000
 4133              	.L850:
 4134 2320 31FF     		xorl	%edi, %edi
 4135 2322 83EB01   		subl	$1, %ebx
 4136 2325 E8000000 		call	sleep
 4136      00
 4137 232a 4D89F0   		movq	%r14, %r8
 4138 232d 4889E1   		movq	%rsp, %rcx
 4139 2330 BA010000 		movl	$1, %edx
 4139      00
 4140 2335 4489E6   		movl	%r12d, %esi
 4141 2338 4C89EF   		movq	%r13, %rdi
 4142 233b E8000000 		call	flReadChannel
 4142      00
 4143 2340 803C2400 		cmpb	$0, (%rsp)
 4144 2344 74D2     		je	.L799
 4145 2346 488D4C24 		leaq	1(%rsp), %rcx
 4145      01
 4146 234b BA030000 		movl	$3, %edx
 4146      00
 4147 2350 4489E6   		movl	%r12d, %esi
 4148 2353 4C89EF   		movq	%r13, %rdi
 4149 2356 4D89F0   		movq	%r14, %r8
 4150 2359 E8000000 		call	flReadChannel
 4150      00
 4151 235e 0FB60424 		movzbl	(%rsp), %eax
 4152 2362 4889EF   		movq	%rbp, %rdi
 4153 2365 89C2     		movl	%eax, %edx
 4154 2367 83E201   		andl	$1, %edx
 4155 236a 83C230   		addl	$48, %edx
 4156 236d 885500   		movb	%dl, 0(%rbp)
 4157 2370 89C2     		movl	%eax, %edx
 4158 2372 83E202   		andl	$2, %edx
 4159 2375 80FA01   		cmpb	$1, %dl
 4160 2378 19D2     		sbbl	%edx, %edx
 4161 237a 83C231   		addl	$49, %edx
 4162 237d 885501   		movb	%dl, 1(%rbp)
 4163 2380 89C2     		movl	%eax, %edx
 4164 2382 83E204   		andl	$4, %edx
 4165 2385 80FA01   		cmpb	$1, %dl
 4166 2388 19D2     		sbbl	%edx, %edx
 4167 238a 83C231   		addl	$49, %edx
 4168 238d 885502   		movb	%dl, 2(%rbp)
 4169 2390 89C2     		movl	%eax, %edx
 4170 2392 83E208   		andl	$8, %edx
 4171 2395 80FA01   		cmpb	$1, %dl
 4172 2398 19D2     		sbbl	%edx, %edx
 4173 239a 83C231   		addl	$49, %edx
 4174 239d 885503   		movb	%dl, 3(%rbp)
 4175 23a0 89C2     		movl	%eax, %edx
 4176 23a2 83E210   		andl	$16, %edx
 4177 23a5 80FA01   		cmpb	$1, %dl
 4178 23a8 19D2     		sbbl	%edx, %edx
 4179 23aa 83C231   		addl	$49, %edx
 4180 23ad 885504   		movb	%dl, 4(%rbp)
 4181 23b0 89C2     		movl	%eax, %edx
 4182 23b2 83E220   		andl	$32, %edx
 4183 23b5 80FA01   		cmpb	$1, %dl
 4184 23b8 19D2     		sbbl	%edx, %edx
 4185 23ba 83C231   		addl	$49, %edx
 4186 23bd 885505   		movb	%dl, 5(%rbp)
 4187 23c0 89C2     		movl	%eax, %edx
 4188 23c2 83E240   		andl	$64, %edx
 4189 23c5 80FA01   		cmpb	$1, %dl
 4190 23c8 19D2     		sbbl	%edx, %edx
 4191 23ca 83E080   		andl	$-128, %eax
 4192 23cd 83C231   		addl	$49, %edx
 4193 23d0 3C01     		cmpb	$1, %al
 4194 23d2 19C0     		sbbl	%eax, %eax
 4195 23d4 885506   		movb	%dl, 6(%rbp)
 4196 23d7 83C031   		addl	$49, %eax
 4197 23da 884507   		movb	%al, 7(%rbp)
 4198 23dd 0FB64424 		movzbl	1(%rsp), %eax
 4198      01
 4199 23e2 89C2     		movl	%eax, %edx
 4200 23e4 83E201   		andl	$1, %edx
 4201 23e7 83C230   		addl	$48, %edx
 4202 23ea 885508   		movb	%dl, 8(%rbp)
 4203 23ed 89C2     		movl	%eax, %edx
 4204 23ef 83E202   		andl	$2, %edx
 4205 23f2 80FA01   		cmpb	$1, %dl
 4206 23f5 19D2     		sbbl	%edx, %edx
 4207 23f7 83C231   		addl	$49, %edx
 4208 23fa 885509   		movb	%dl, 9(%rbp)
 4209 23fd 89C2     		movl	%eax, %edx
 4210 23ff 83E204   		andl	$4, %edx
 4211 2402 80FA01   		cmpb	$1, %dl
 4212 2405 19D2     		sbbl	%edx, %edx
 4213 2407 83C231   		addl	$49, %edx
 4214 240a 88550A   		movb	%dl, 10(%rbp)
 4215 240d 89C2     		movl	%eax, %edx
 4216 240f 83E208   		andl	$8, %edx
 4217 2412 80FA01   		cmpb	$1, %dl
 4218 2415 19D2     		sbbl	%edx, %edx
 4219 2417 83C231   		addl	$49, %edx
 4220 241a 88550B   		movb	%dl, 11(%rbp)
 4221 241d 89C2     		movl	%eax, %edx
 4222 241f 83E210   		andl	$16, %edx
 4223 2422 80FA01   		cmpb	$1, %dl
 4224 2425 19D2     		sbbl	%edx, %edx
 4225 2427 83C231   		addl	$49, %edx
 4226 242a 88550C   		movb	%dl, 12(%rbp)
 4227 242d 89C2     		movl	%eax, %edx
 4228 242f 83E220   		andl	$32, %edx
 4229 2432 80FA01   		cmpb	$1, %dl
 4230 2435 19D2     		sbbl	%edx, %edx
 4231 2437 83C231   		addl	$49, %edx
 4232 243a 88550D   		movb	%dl, 13(%rbp)
 4233 243d 89C2     		movl	%eax, %edx
 4234 243f 83E240   		andl	$64, %edx
 4235 2442 80FA01   		cmpb	$1, %dl
 4236 2445 19D2     		sbbl	%edx, %edx
 4237 2447 83E080   		andl	$-128, %eax
 4238 244a 83C231   		addl	$49, %edx
 4239 244d 3C01     		cmpb	$1, %al
 4240 244f 19C0     		sbbl	%eax, %eax
 4241 2451 88550E   		movb	%dl, 14(%rbp)
 4242 2454 83C031   		addl	$49, %eax
 4243 2457 88450F   		movb	%al, 15(%rbp)
 4244 245a 0FB64424 		movzbl	2(%rsp), %eax
 4244      02
 4245 245f 89C2     		movl	%eax, %edx
 4246 2461 83E201   		andl	$1, %edx
 4247 2464 83C230   		addl	$48, %edx
 4248 2467 885510   		movb	%dl, 16(%rbp)
 4249 246a 89C2     		movl	%eax, %edx
 4250 246c 83E202   		andl	$2, %edx
 4251 246f 80FA01   		cmpb	$1, %dl
 4252 2472 19D2     		sbbl	%edx, %edx
 4253 2474 83C231   		addl	$49, %edx
 4254 2477 885511   		movb	%dl, 17(%rbp)
 4255 247a 89C2     		movl	%eax, %edx
 4256 247c 83E204   		andl	$4, %edx
 4257 247f 80FA01   		cmpb	$1, %dl
 4258 2482 19D2     		sbbl	%edx, %edx
 4259 2484 83C231   		addl	$49, %edx
 4260 2487 885512   		movb	%dl, 18(%rbp)
 4261 248a 89C2     		movl	%eax, %edx
 4262 248c 83E208   		andl	$8, %edx
 4263 248f 80FA01   		cmpb	$1, %dl
 4264 2492 19D2     		sbbl	%edx, %edx
 4265 2494 83C231   		addl	$49, %edx
 4266 2497 885513   		movb	%dl, 19(%rbp)
 4267 249a 89C2     		movl	%eax, %edx
 4268 249c 83E210   		andl	$16, %edx
 4269 249f 80FA01   		cmpb	$1, %dl
 4270 24a2 19D2     		sbbl	%edx, %edx
 4271 24a4 83C231   		addl	$49, %edx
 4272 24a7 885514   		movb	%dl, 20(%rbp)
 4273 24aa 89C2     		movl	%eax, %edx
 4274 24ac 83E220   		andl	$32, %edx
 4275 24af 80FA01   		cmpb	$1, %dl
 4276 24b2 19D2     		sbbl	%edx, %edx
 4277 24b4 83C231   		addl	$49, %edx
 4278 24b7 885515   		movb	%dl, 21(%rbp)
 4279 24ba 89C2     		movl	%eax, %edx
 4280 24bc 83E240   		andl	$64, %edx
 4281 24bf 80FA01   		cmpb	$1, %dl
 4282 24c2 19D2     		sbbl	%edx, %edx
 4283 24c4 83E080   		andl	$-128, %eax
 4284 24c7 83C231   		addl	$49, %edx
 4285 24ca 3C01     		cmpb	$1, %al
 4286 24cc 19C0     		sbbl	%eax, %eax
 4287 24ce 885516   		movb	%dl, 22(%rbp)
 4288 24d1 83C031   		addl	$49, %eax
 4289 24d4 884517   		movb	%al, 23(%rbp)
 4290 24d7 0FB64424 		movzbl	3(%rsp), %eax
 4290      03
 4291 24dc 89C2     		movl	%eax, %edx
 4292 24de 83E201   		andl	$1, %edx
 4293 24e1 83C230   		addl	$48, %edx
 4294 24e4 885518   		movb	%dl, 24(%rbp)
 4295 24e7 89C2     		movl	%eax, %edx
 4296 24e9 83E202   		andl	$2, %edx
 4297 24ec 80FA01   		cmpb	$1, %dl
 4298 24ef 19D2     		sbbl	%edx, %edx
 4299 24f1 83C231   		addl	$49, %edx
 4300 24f4 885519   		movb	%dl, 25(%rbp)
 4301 24f7 89C2     		movl	%eax, %edx
 4302 24f9 83E204   		andl	$4, %edx
 4303 24fc 80FA01   		cmpb	$1, %dl
 4304 24ff 19D2     		sbbl	%edx, %edx
 4305 2501 83C231   		addl	$49, %edx
 4306 2504 88551A   		movb	%dl, 26(%rbp)
 4307 2507 89C2     		movl	%eax, %edx
 4308 2509 83E208   		andl	$8, %edx
 4309 250c 80FA01   		cmpb	$1, %dl
 4310 250f 19D2     		sbbl	%edx, %edx
 4311 2511 83C231   		addl	$49, %edx
 4312 2514 88551B   		movb	%dl, 27(%rbp)
 4313 2517 89C2     		movl	%eax, %edx
 4314 2519 83E210   		andl	$16, %edx
 4315 251c 80FA01   		cmpb	$1, %dl
 4316 251f 19D2     		sbbl	%edx, %edx
 4317 2521 83C231   		addl	$49, %edx
 4318 2524 88551C   		movb	%dl, 28(%rbp)
 4319 2527 89C2     		movl	%eax, %edx
 4320 2529 488B3500 		movq	key(%rip), %rsi
 4320      000000
 4321 2530 83E220   		andl	$32, %edx
 4322 2533 80FA01   		cmpb	$1, %dl
 4323 2536 19D2     		sbbl	%edx, %edx
 4324 2538 83C231   		addl	$49, %edx
 4325 253b 88551D   		movb	%dl, 29(%rbp)
 4326 253e 89C2     		movl	%eax, %edx
 4327 2540 83E240   		andl	$64, %edx
 4328 2543 80FA01   		cmpb	$1, %dl
 4329 2546 19D2     		sbbl	%edx, %edx
 4330 2548 83E080   		andl	$-128, %eax
 4331 254b 83C231   		addl	$49, %edx
 4332 254e 3C01     		cmpb	$1, %al
 4333 2550 19C0     		sbbl	%eax, %eax
 4334 2552 88551E   		movb	%dl, 30(%rbp)
 4335 2555 83C031   		addl	$49, %eax
 4336 2558 88451F   		movb	%al, 31(%rbp)
 4337 255b E8000000 		call	decrypt
 4337      00
 4338              	.L866:
 4339 2560 488B7424 		movq	8(%rsp), %rsi
 4339      08
 4340 2565 64483334 		xorq	%fs:40, %rsi
 4340      25280000 
 4340      00
 4341 256e 7519     		jne	.L872
 4342 2570 4883C410 		addq	$16, %rsp
 4343              		.cfi_remember_state
 4344              		.cfi_def_cfa_offset 48
 4345 2574 5B       		popq	%rbx
 4346              		.cfi_def_cfa_offset 40
 4347 2575 5D       		popq	%rbp
 4348              		.cfi_def_cfa_offset 32
 4349 2576 415C     		popq	%r12
 4350              		.cfi_def_cfa_offset 24
 4351 2578 415D     		popq	%r13
 4352              		.cfi_def_cfa_offset 16
 4353 257a 415E     		popq	%r14
 4354              		.cfi_def_cfa_offset 8
 4355 257c C3       		ret
 4356 257d 0F1F00   		.p2align 4,,10
 4357              		.p2align 3
 4358              	.L798:
 4359              		.cfi_restore_state
 4360 2580 C6450066 		movb	$102, 0(%rbp)
 4361 2584 4889E8   		movq	%rbp, %rax
 4362 2587 EBD7     		jmp	.L866
 4363              	.L872:
 4364 2589 E8000000 		call	__stack_chk_fail
 4364      00
 4365              		.cfi_endproc
 4366              	.LFE79:
 4368              		.section	.text.unlikely
 4369              	.LCOLDE59:
 4370              		.text
 4371              	.LHOTE59:
 4372              		.section	.rodata.str1.1
 4373              	.LC60:
 4374 0138 72656365 		.string	"received ack is %s\n"
 4374      69766564 
 4374      2061636B 
 4374      20697320 
 4374      25730A00 
 4375              		.section	.text.unlikely
 4376              	.LCOLDB61:
 4377              		.text
 4378              	.LHOTB61:
 4379 258e 6690     		.p2align 4,,15
 4380              		.globl	receive_ack
 4382              	receive_ack:
 4383              	.LFB80:
 4384              		.cfi_startproc
 4385 2590 4155     		pushq	%r13
 4386              		.cfi_def_cfa_offset 16
 4387              		.cfi_offset 13, -16
 4388 2592 4154     		pushq	%r12
 4389              		.cfi_def_cfa_offset 24
 4390              		.cfi_offset 12, -24
 4391 2594 4989D5   		movq	%rdx, %r13
 4392 2597 55       		pushq	%rbp
 4393              		.cfi_def_cfa_offset 32
 4394              		.cfi_offset 6, -32
 4395 2598 53       		pushq	%rbx
 4396              		.cfi_def_cfa_offset 40
 4397              		.cfi_offset 3, -40
 4398 2599 89FD     		movl	%edi, %ebp
 4399 259b 4989F4   		movq	%rsi, %r12
 4400 259e BF210000 		movl	$33, %edi
 4400      00
 4401 25a3 400FB6ED 		movzbl	%bpl, %ebp
 4402 25a7 4883EC18 		subq	$24, %rsp
 4403              		.cfi_def_cfa_offset 64
 4404 25ab 64488B04 		movq	%fs:40, %rax
 4404      25280000 
 4404      00
 4405 25b4 48894424 		movq	%rax, 8(%rsp)
 4405      08
 4406 25b9 31C0     		xorl	%eax, %eax
 4407 25bb E8000000 		call	malloc
 4407      00
 4408 25c0 4D89E8   		movq	%r13, %r8
 4409 25c3 4889E1   		movq	%rsp, %rcx
 4410 25c6 BA020000 		movl	$2, %edx
 4410      00
 4411 25cb 89EE     		movl	%ebp, %esi
 4412 25cd 4C89E7   		movq	%r12, %rdi
 4413 25d0 4889C3   		movq	%rax, %rbx
 4414 25d3 E8000000 		call	flReadChannel
 4414      00
 4415 25d8 4D89E8   		movq	%r13, %r8
 4416 25db 4889E1   		movq	%rsp, %rcx
 4417 25de BA040000 		movl	$4, %edx
 4417      00
 4418 25e3 89EE     		movl	%ebp, %esi
 4419 25e5 4C89E7   		movq	%r12, %rdi
 4420 25e8 E8000000 		call	flReadChannel
 4420      00
 4421 25ed 85C0     		testl	%eax, %eax
 4422 25ef 0F856302 		jne	.L946
 4422      0000
 4423 25f5 0FB60424 		movzbl	(%rsp), %eax
 4424 25f9 4889DF   		movq	%rbx, %rdi
 4425 25fc 89C2     		movl	%eax, %edx
 4426 25fe 83E201   		andl	$1, %edx
 4427 2601 83C230   		addl	$48, %edx
 4428 2604 8813     		movb	%dl, (%rbx)
 4429 2606 89C2     		movl	%eax, %edx
 4430 2608 83E202   		andl	$2, %edx
 4431 260b 80FA01   		cmpb	$1, %dl
 4432 260e 19D2     		sbbl	%edx, %edx
 4433 2610 83C231   		addl	$49, %edx
 4434 2613 885301   		movb	%dl, 1(%rbx)
 4435 2616 89C2     		movl	%eax, %edx
 4436 2618 83E204   		andl	$4, %edx
 4437 261b 80FA01   		cmpb	$1, %dl
 4438 261e 19D2     		sbbl	%edx, %edx
 4439 2620 83C231   		addl	$49, %edx
 4440 2623 885302   		movb	%dl, 2(%rbx)
 4441 2626 89C2     		movl	%eax, %edx
 4442 2628 83E208   		andl	$8, %edx
 4443 262b 80FA01   		cmpb	$1, %dl
 4444 262e 19D2     		sbbl	%edx, %edx
 4445 2630 83C231   		addl	$49, %edx
 4446 2633 885303   		movb	%dl, 3(%rbx)
 4447 2636 89C2     		movl	%eax, %edx
 4448 2638 83E210   		andl	$16, %edx
 4449 263b 80FA01   		cmpb	$1, %dl
 4450 263e 19D2     		sbbl	%edx, %edx
 4451 2640 83C231   		addl	$49, %edx
 4452 2643 885304   		movb	%dl, 4(%rbx)
 4453 2646 89C2     		movl	%eax, %edx
 4454 2648 83E220   		andl	$32, %edx
 4455 264b 80FA01   		cmpb	$1, %dl
 4456 264e 19D2     		sbbl	%edx, %edx
 4457 2650 83C231   		addl	$49, %edx
 4458 2653 885305   		movb	%dl, 5(%rbx)
 4459 2656 89C2     		movl	%eax, %edx
 4460 2658 83E240   		andl	$64, %edx
 4461 265b 80FA01   		cmpb	$1, %dl
 4462 265e 19D2     		sbbl	%edx, %edx
 4463 2660 83E080   		andl	$-128, %eax
 4464 2663 83C231   		addl	$49, %edx
 4465 2666 3C01     		cmpb	$1, %al
 4466 2668 19C0     		sbbl	%eax, %eax
 4467 266a 885306   		movb	%dl, 6(%rbx)
 4468 266d 83C031   		addl	$49, %eax
 4469 2670 884307   		movb	%al, 7(%rbx)
 4470 2673 0FB64424 		movzbl	1(%rsp), %eax
 4470      01
 4471 2678 89C2     		movl	%eax, %edx
 4472 267a 83E201   		andl	$1, %edx
 4473 267d 83C230   		addl	$48, %edx
 4474 2680 885308   		movb	%dl, 8(%rbx)
 4475 2683 89C2     		movl	%eax, %edx
 4476 2685 83E202   		andl	$2, %edx
 4477 2688 80FA01   		cmpb	$1, %dl
 4478 268b 19D2     		sbbl	%edx, %edx
 4479 268d 83C231   		addl	$49, %edx
 4480 2690 885309   		movb	%dl, 9(%rbx)
 4481 2693 89C2     		movl	%eax, %edx
 4482 2695 83E204   		andl	$4, %edx
 4483 2698 80FA01   		cmpb	$1, %dl
 4484 269b 19D2     		sbbl	%edx, %edx
 4485 269d 83C231   		addl	$49, %edx
 4486 26a0 88530A   		movb	%dl, 10(%rbx)
 4487 26a3 89C2     		movl	%eax, %edx
 4488 26a5 83E208   		andl	$8, %edx
 4489 26a8 80FA01   		cmpb	$1, %dl
 4490 26ab 19D2     		sbbl	%edx, %edx
 4491 26ad 83C231   		addl	$49, %edx
 4492 26b0 88530B   		movb	%dl, 11(%rbx)
 4493 26b3 89C2     		movl	%eax, %edx
 4494 26b5 83E210   		andl	$16, %edx
 4495 26b8 80FA01   		cmpb	$1, %dl
 4496 26bb 19D2     		sbbl	%edx, %edx
 4497 26bd 83C231   		addl	$49, %edx
 4498 26c0 88530C   		movb	%dl, 12(%rbx)
 4499 26c3 89C2     		movl	%eax, %edx
 4500 26c5 83E220   		andl	$32, %edx
 4501 26c8 80FA01   		cmpb	$1, %dl
 4502 26cb 19D2     		sbbl	%edx, %edx
 4503 26cd 83C231   		addl	$49, %edx
 4504 26d0 88530D   		movb	%dl, 13(%rbx)
 4505 26d3 89C2     		movl	%eax, %edx
 4506 26d5 83E240   		andl	$64, %edx
 4507 26d8 80FA01   		cmpb	$1, %dl
 4508 26db 19D2     		sbbl	%edx, %edx
 4509 26dd 83E080   		andl	$-128, %eax
 4510 26e0 83C231   		addl	$49, %edx
 4511 26e3 3C01     		cmpb	$1, %al
 4512 26e5 19C0     		sbbl	%eax, %eax
 4513 26e7 88530E   		movb	%dl, 14(%rbx)
 4514 26ea 83C031   		addl	$49, %eax
 4515 26ed 88430F   		movb	%al, 15(%rbx)
 4516 26f0 0FB64424 		movzbl	2(%rsp), %eax
 4516      02
 4517 26f5 89C2     		movl	%eax, %edx
 4518 26f7 83E201   		andl	$1, %edx
 4519 26fa 83C230   		addl	$48, %edx
 4520 26fd 885310   		movb	%dl, 16(%rbx)
 4521 2700 89C2     		movl	%eax, %edx
 4522 2702 83E202   		andl	$2, %edx
 4523 2705 80FA01   		cmpb	$1, %dl
 4524 2708 19D2     		sbbl	%edx, %edx
 4525 270a 83C231   		addl	$49, %edx
 4526 270d 885311   		movb	%dl, 17(%rbx)
 4527 2710 89C2     		movl	%eax, %edx
 4528 2712 83E204   		andl	$4, %edx
 4529 2715 80FA01   		cmpb	$1, %dl
 4530 2718 19D2     		sbbl	%edx, %edx
 4531 271a 83C231   		addl	$49, %edx
 4532 271d 885312   		movb	%dl, 18(%rbx)
 4533 2720 89C2     		movl	%eax, %edx
 4534 2722 83E208   		andl	$8, %edx
 4535 2725 80FA01   		cmpb	$1, %dl
 4536 2728 19D2     		sbbl	%edx, %edx
 4537 272a 83C231   		addl	$49, %edx
 4538 272d 885313   		movb	%dl, 19(%rbx)
 4539 2730 89C2     		movl	%eax, %edx
 4540 2732 83E210   		andl	$16, %edx
 4541 2735 80FA01   		cmpb	$1, %dl
 4542 2738 19D2     		sbbl	%edx, %edx
 4543 273a 83C231   		addl	$49, %edx
 4544 273d 885314   		movb	%dl, 20(%rbx)
 4545 2740 89C2     		movl	%eax, %edx
 4546 2742 83E220   		andl	$32, %edx
 4547 2745 80FA01   		cmpb	$1, %dl
 4548 2748 19D2     		sbbl	%edx, %edx
 4549 274a 83C231   		addl	$49, %edx
 4550 274d 885315   		movb	%dl, 21(%rbx)
 4551 2750 89C2     		movl	%eax, %edx
 4552 2752 83E240   		andl	$64, %edx
 4553 2755 80FA01   		cmpb	$1, %dl
 4554 2758 19D2     		sbbl	%edx, %edx
 4555 275a 83E080   		andl	$-128, %eax
 4556 275d 83C231   		addl	$49, %edx
 4557 2760 3C01     		cmpb	$1, %al
 4558 2762 19C0     		sbbl	%eax, %eax
 4559 2764 885316   		movb	%dl, 22(%rbx)
 4560 2767 83C031   		addl	$49, %eax
 4561 276a 884317   		movb	%al, 23(%rbx)
 4562 276d 0FB64424 		movzbl	3(%rsp), %eax
 4562      03
 4563 2772 89C2     		movl	%eax, %edx
 4564 2774 83E201   		andl	$1, %edx
 4565 2777 83C230   		addl	$48, %edx
 4566 277a 885318   		movb	%dl, 24(%rbx)
 4567 277d 89C2     		movl	%eax, %edx
 4568 277f 83E202   		andl	$2, %edx
 4569 2782 80FA01   		cmpb	$1, %dl
 4570 2785 19D2     		sbbl	%edx, %edx
 4571 2787 83C231   		addl	$49, %edx
 4572 278a 885319   		movb	%dl, 25(%rbx)
 4573 278d 89C2     		movl	%eax, %edx
 4574 278f 83E204   		andl	$4, %edx
 4575 2792 80FA01   		cmpb	$1, %dl
 4576 2795 19D2     		sbbl	%edx, %edx
 4577 2797 83C231   		addl	$49, %edx
 4578 279a 88531A   		movb	%dl, 26(%rbx)
 4579 279d 89C2     		movl	%eax, %edx
 4580 279f 83E208   		andl	$8, %edx
 4581 27a2 80FA01   		cmpb	$1, %dl
 4582 27a5 19D2     		sbbl	%edx, %edx
 4583 27a7 83C231   		addl	$49, %edx
 4584 27aa 88531B   		movb	%dl, 27(%rbx)
 4585 27ad 89C2     		movl	%eax, %edx
 4586 27af 83E210   		andl	$16, %edx
 4587 27b2 80FA01   		cmpb	$1, %dl
 4588 27b5 19D2     		sbbl	%edx, %edx
 4589 27b7 83C231   		addl	$49, %edx
 4590 27ba 88531C   		movb	%dl, 28(%rbx)
 4591 27bd 89C2     		movl	%eax, %edx
 4592 27bf 488B3500 		movq	key(%rip), %rsi
 4592      000000
 4593 27c6 83E220   		andl	$32, %edx
 4594 27c9 80FA01   		cmpb	$1, %dl
 4595 27cc 19D2     		sbbl	%edx, %edx
 4596 27ce 83C231   		addl	$49, %edx
 4597 27d1 88531D   		movb	%dl, 29(%rbx)
 4598 27d4 89C2     		movl	%eax, %edx
 4599 27d6 83E240   		andl	$64, %edx
 4600 27d9 80FA01   		cmpb	$1, %dl
 4601 27dc 19D2     		sbbl	%edx, %edx
 4602 27de 83E080   		andl	$-128, %eax
 4603 27e1 83C231   		addl	$49, %edx
 4604 27e4 3C01     		cmpb	$1, %al
 4605 27e6 19C0     		sbbl	%eax, %eax
 4606 27e8 88531E   		movb	%dl, 30(%rbx)
 4607 27eb 83C031   		addl	$49, %eax
 4608 27ee 88431F   		movb	%al, 31(%rbx)
 4609 27f1 E8000000 		call	decrypt
 4609      00
 4610 27f6 4889C3   		movq	%rax, %rbx
 4611              	.L875:
 4612 27f9 31C0     		xorl	%eax, %eax
 4613 27fb 4889DA   		movq	%rbx, %rdx
 4614 27fe BE000000 		movl	$.LC60, %esi
 4614      00
 4615 2803 BF010000 		movl	$1, %edi
 4615      00
 4616 2808 E8000000 		call	__printf_chk
 4616      00
 4617 280d 803B66   		cmpb	$102, (%rbx)
 4618 2810 7424     		je	.L940
 4619 2812 488B0500 		movq	ack1(%rip), %rax
 4619      000000
 4620 2819 31D2     		xorl	%edx, %edx
 4621 281b EB0D     		jmp	.L942
 4622 281d 0F1F00   		.p2align 4,,10
 4623              		.p2align 3
 4624              	.L941:
 4625 2820 4883C201 		addq	$1, %rdx
 4626 2824 4883FA20 		cmpq	$32, %rdx
 4627 2828 740C     		je	.L940
 4628              	.L942:
 4629 282a 0FB60C10 		movzbl	(%rax,%rdx), %ecx
 4630 282e 380C13   		cmpb	%cl, (%rbx,%rdx)
 4631 2831 74ED     		je	.L941
 4632 2833 C60366   		movb	$102, (%rbx)
 4633              	.L940:
 4634 2836 488B7424 		movq	8(%rsp), %rsi
 4634      08
 4635 283b 64483334 		xorq	%fs:40, %rsi
 4635      25280000 
 4635      00
 4636 2844 4889D8   		movq	%rbx, %rax
 4637 2847 7514     		jne	.L947
 4638 2849 4883C418 		addq	$24, %rsp
 4639              		.cfi_remember_state
 4640              		.cfi_def_cfa_offset 40
 4641 284d 5B       		popq	%rbx
 4642              		.cfi_def_cfa_offset 32
 4643 284e 5D       		popq	%rbp
 4644              		.cfi_def_cfa_offset 24
 4645 284f 415C     		popq	%r12
 4646              		.cfi_def_cfa_offset 16
 4647 2851 415D     		popq	%r13
 4648              		.cfi_def_cfa_offset 8
 4649 2853 C3       		ret
 4650              		.p2align 4,,10
 4651 2854 0F1F4000 		.p2align 3
 4652              	.L946:
 4653              		.cfi_restore_state
 4654 2858 C60366   		movb	$102, (%rbx)
 4655 285b EB9C     		jmp	.L875
 4656              	.L947:
 4657 285d E8000000 		call	__stack_chk_fail
 4657      00
 4658              		.cfi_endproc
 4659              	.LFE80:
 4661              		.section	.text.unlikely
 4662              	.LCOLDE61:
 4663              		.text
 4664              	.LHOTE61:
 4665              		.section	.text.unlikely
 4666              	.LCOLDB62:
 4667              		.text
 4668              	.LHOTB62:
 4669 2862 0F1F4000 		.p2align 4,,15
 4669      662E0F1F 
 4669      84000000 
 4669      0000
 4670              		.globl	send_ack
 4672              	send_ack:
 4673              	.LFB81:
 4674              		.cfi_startproc
 4675 2870 4155     		pushq	%r13
 4676              		.cfi_def_cfa_offset 16
 4677              		.cfi_offset 13, -16
 4678 2872 4154     		pushq	%r12
 4679              		.cfi_def_cfa_offset 24
 4680              		.cfi_offset 12, -24
 4681 2874 4189CD   		movl	%ecx, %r13d
 4682 2877 55       		pushq	%rbp
 4683              		.cfi_def_cfa_offset 32
 4684              		.cfi_offset 6, -32
 4685 2878 53       		pushq	%rbx
 4686              		.cfi_def_cfa_offset 40
 4687              		.cfi_offset 3, -40
 4688 2879 89FB     		movl	%edi, %ebx
 4689 287b BF210000 		movl	$33, %edi
 4689      00
 4690 2880 4889F5   		movq	%rsi, %rbp
 4691 2883 4989D4   		movq	%rdx, %r12
 4692 2886 4883EC08 		subq	$8, %rsp
 4693              		.cfi_def_cfa_offset 48
 4694 288a E8000000 		call	malloc
 4694      00
 4695 288f 488B3D00 		movq	ack2(%rip), %rdi
 4695      000000
 4696 2896 4589E8   		movl	%r13d, %r8d
 4697 2899 4C89E1   		movq	%r12, %rcx
 4698 289c 4889C6   		movq	%rax, %rsi
 4699 289f 0FB65707 		movzbl	7(%rdi), %edx
 4700 28a3 8810     		movb	%dl, (%rax)
 4701 28a5 0FB65706 		movzbl	6(%rdi), %edx
 4702 28a9 885001   		movb	%dl, 1(%rax)
 4703 28ac 0FB65705 		movzbl	5(%rdi), %edx
 4704 28b0 885002   		movb	%dl, 2(%rax)
 4705 28b3 0FB65704 		movzbl	4(%rdi), %edx
 4706 28b7 885003   		movb	%dl, 3(%rax)
 4707 28ba 0FB65703 		movzbl	3(%rdi), %edx
 4708 28be 885004   		movb	%dl, 4(%rax)
 4709 28c1 0FB65702 		movzbl	2(%rdi), %edx
 4710 28c5 885005   		movb	%dl, 5(%rax)
 4711 28c8 0FB65701 		movzbl	1(%rdi), %edx
 4712 28cc 885006   		movb	%dl, 6(%rax)
 4713 28cf 0FB617   		movzbl	(%rdi), %edx
 4714 28d2 885007   		movb	%dl, 7(%rax)
 4715 28d5 0FB6570F 		movzbl	15(%rdi), %edx
 4716 28d9 885008   		movb	%dl, 8(%rax)
 4717 28dc 0FB6570E 		movzbl	14(%rdi), %edx
 4718 28e0 885009   		movb	%dl, 9(%rax)
 4719 28e3 0FB6570D 		movzbl	13(%rdi), %edx
 4720 28e7 88500A   		movb	%dl, 10(%rax)
 4721 28ea 0FB6570C 		movzbl	12(%rdi), %edx
 4722 28ee 88500B   		movb	%dl, 11(%rax)
 4723 28f1 0FB6570B 		movzbl	11(%rdi), %edx
 4724 28f5 88500C   		movb	%dl, 12(%rax)
 4725 28f8 0FB6570A 		movzbl	10(%rdi), %edx
 4726 28fc 88500D   		movb	%dl, 13(%rax)
 4727 28ff 0FB65709 		movzbl	9(%rdi), %edx
 4728 2903 88500E   		movb	%dl, 14(%rax)
 4729 2906 0FB65708 		movzbl	8(%rdi), %edx
 4730 290a 88500F   		movb	%dl, 15(%rax)
 4731 290d 0FB65717 		movzbl	23(%rdi), %edx
 4732 2911 885010   		movb	%dl, 16(%rax)
 4733 2914 0FB65716 		movzbl	22(%rdi), %edx
 4734 2918 885011   		movb	%dl, 17(%rax)
 4735 291b 0FB65715 		movzbl	21(%rdi), %edx
 4736 291f 885012   		movb	%dl, 18(%rax)
 4737 2922 0FB65714 		movzbl	20(%rdi), %edx
 4738 2926 885013   		movb	%dl, 19(%rax)
 4739 2929 0FB65713 		movzbl	19(%rdi), %edx
 4740 292d 885014   		movb	%dl, 20(%rax)
 4741 2930 0FB65712 		movzbl	18(%rdi), %edx
 4742 2934 885015   		movb	%dl, 21(%rax)
 4743 2937 0FB65711 		movzbl	17(%rdi), %edx
 4744 293b 885016   		movb	%dl, 22(%rax)
 4745 293e 0FB65710 		movzbl	16(%rdi), %edx
 4746 2942 885017   		movb	%dl, 23(%rax)
 4747 2945 0FB6571F 		movzbl	31(%rdi), %edx
 4748 2949 885018   		movb	%dl, 24(%rax)
 4749 294c 0FB6571E 		movzbl	30(%rdi), %edx
 4750 2950 885019   		movb	%dl, 25(%rax)
 4751 2953 0FB6571D 		movzbl	29(%rdi), %edx
 4752 2957 88501A   		movb	%dl, 26(%rax)
 4753 295a 0FB6571C 		movzbl	28(%rdi), %edx
 4754 295e 88501B   		movb	%dl, 27(%rax)
 4755 2961 0FB6571B 		movzbl	27(%rdi), %edx
 4756 2965 88501C   		movb	%dl, 28(%rax)
 4757 2968 0FB6571A 		movzbl	26(%rdi), %edx
 4758 296c 88501D   		movb	%dl, 29(%rax)
 4759 296f 0FB65719 		movzbl	25(%rdi), %edx
 4760 2973 88501E   		movb	%dl, 30(%rax)
 4761 2976 0FB65718 		movzbl	24(%rdi), %edx
 4762 297a 89DF     		movl	%ebx, %edi
 4763 297c 88501F   		movb	%dl, 31(%rax)
 4764 297f C6402000 		movb	$0, 32(%rax)
 4765 2983 4883C408 		addq	$8, %rsp
 4766              		.cfi_def_cfa_offset 40
 4767 2987 5B       		popq	%rbx
 4768              		.cfi_def_cfa_offset 32
 4769 2988 4889EA   		movq	%rbp, %rdx
 4770 298b 5D       		popq	%rbp
 4771              		.cfi_def_cfa_offset 24
 4772 298c 415C     		popq	%r12
 4773              		.cfi_def_cfa_offset 16
 4774 298e 415D     		popq	%r13
 4775              		.cfi_def_cfa_offset 8
 4776 2990 E9EBF3FF 		jmp	write_4byte_to_board
 4776      FF
 4777              		.cfi_endproc
 4778              	.LFE81:
 4780              		.section	.text.unlikely
 4781              	.LCOLDE62:
 4782              		.text
 4783              	.LHOTE62:
 4784              		.section	.text.unlikely
 4785              	.LCOLDB63:
 4786              		.text
 4787              	.LHOTB63:
 4788 2995 90662E0F 		.p2align 4,,15
 4788      1F840000 
 4788      000000
 4789              		.globl	wtt
 4791              	wtt:
 4792              	.LFB82:
 4793              		.cfi_startproc
 4794 29a0 BFA08601 		movl	$100000, %edi
 4794      00
 4795 29a5 31C0     		xorl	%eax, %eax
 4796 29a7 E9000000 		jmp	usleep
 4796      00
 4797              		.cfi_endproc
 4798              	.LFE82:
 4800              		.section	.text.unlikely
 4801              	.LCOLDE63:
 4802              		.text
 4803              	.LHOTE63:
 4804              		.section	.rodata.str1.8
 4805              		.align 8
 4806              	.LC64:
 4807 0120 20202020 		.string	"            vendor ID and product ID (e.g 04B4:8613)"
 4807      20202020 
 4807      20202020 
 4807      76656E64 
 4807      6F722049 
 4808              		.section	.rodata.str1.1
 4809              	.LC65:
 4810 014c 3C564944 		.string	"<VID:PID>"
 4810      3A504944 
 4810      3E00
 4811              	.LC66:
 4812 0156 69767000 		.string	"ivp"
 4813              	.LC67:
 4814 015a 6900     		.string	"i"
 4815              		.section	.rodata.str1.8
 4816 0155 000000   		.align 8
 4817              	.LC68:
 4818 0158 20202020 		.string	"       VID, PID and opt. dev ID (e.g 1D50:602B:0001)"
 4818      20202056 
 4818      49442C20 
 4818      50494420 
 4818      616E6420 
 4819              		.section	.rodata.str1.1
 4820              	.LC69:
 4821 015c 3C564944 		.string	"<VID:PID[:DID]>"
 4821      3A504944 
 4821      5B3A4449 
 4821      445D3E00 
 4822              	.LC70:
 4823 016c 767000   		.string	"vp"
 4824              	.LC71:
 4825 016f 7600     		.string	"v"
 4826              		.section	.rodata.str1.8
 4827 018d 000000   		.align 8
 4828              	.LC72:
 4829 0190 20202020 		.string	"       For running the program and giving the input file address"
 4829      20202046 
 4829      6F722072 
 4829      756E6E69 
 4829      6E672074 
 4830              		.section	.rodata.str1.1
 4831              	.LC73:
 4832 0171 3C46696C 		.string	"<File>"
 4832      653E00
 4833              	.LC74:
 4834 0178 727000   		.string	"rp"
 4835              		.section	.rodata.str1.8
 4836 01d1 00000000 		.align 8
 4836      000000
 4837              	.LC75:
 4838 01d8 20202020 		.string	"        firmware to RAM-load (or use std fw)"
 4838      20202020 
 4838      6669726D 
 4838      77617265 
 4838      20746F20 
 4839              		.section	.rodata.str1.1
 4840              	.LC76:
 4841 017b 3C666972 		.string	"<firmware.hex>"
 4841      6D776172 
 4841      652E6865 
 4841      783E00
 4842              	.LC77:
 4843 018a 667700   		.string	"fw"
 4844              	.LC78:
 4845 018d 6600     		.string	"f"
 4846              		.section	.rodata.str1.8
 4847 0205 000000   		.align 8
 4848              	.LC79:
 4849 0208 20726561 		.string	" read/write digital ports (e.g B13+,C1-,B2?)"
 4849      642F7772 
 4849      69746520 
 4849      64696769 
 4849      74616C20 
 4850              		.section	.rodata.str1.1
 4851              	.LC80:
 4852 018f 3C626974 		.string	"<bitCfg[,bitCfg]*>"
 4852      4366675B 
 4852      2C626974 
 4852      4366675D 
 4852      2A3E00
 4853              	.LC81:
 4854 01a2 706F7274 		.string	"ports"
 4854      7300
 4855              	.LC82:
 4856 01a8 6400     		.string	"d"
 4857              	.LC83:
 4858 01aa 20202020 		.string	"         query the JTAG chain"
 4858      20202020 
 4858      20717565 
 4858      72792074 
 4858      6865204A 
 4859              	.LC84:
 4860 01c8 3C6A7461 		.string	"<jtagBits>"
 4860      67426974 
 4860      733E00
 4861              	.LC85:
 4862 01d3 71756572 		.string	"query"
 4862      7900
 4863              	.LC86:
 4864 01d9 7100     		.string	"q"
 4865              	.LC87:
 4866 01db 20202020 		.string	"         program a device"
 4866      20202020 
 4866      2070726F 
 4866      6772616D 
 4866      20612064 
 4867              	.LC88:
 4868 01f5 3C636F6E 		.string	"<config>"
 4868      6669673E 
 4868      00
 4869              	.LC89:
 4870 01fe 70726F67 		.string	"program"
 4870      72616D00 
 4871              	.LC90:
 4872 0206 7000     		.string	"p"
 4873              		.section	.rodata.str1.8
 4874 0235 000000   		.align 8
 4875              	.LC91:
 4876 0238 20202020 		.string	"        which comm conduit to choose (default 0x01)"
 4876      20202020 
 4876      77686963 
 4876      6820636F 
 4876      6D6D2063 
 4877              		.section	.rodata.str1.1
 4878              	.LC92:
 4879 0208 3C636F6E 		.string	"<conduit>"
 4879      64756974 
 4879      3E00
 4880              	.LC93:
 4881 0212 636F6E64 		.string	"conduit"
 4881      75697400 
 4882              	.LC94:
 4883 021a 6300     		.string	"c"
 4884              		.section	.rodata.str1.8
 4885 026c 00000000 		.align 8
 4886              	.LC95:
 4887 0270 20202020 		.string	"    a series of CommFPGA actions"
 4887      61207365 
 4887      72696573 
 4887      206F6620 
 4887      436F6D6D 
 4888              		.section	.rodata.str1.1
 4889              	.LC96:
 4890 021c 3C616374 		.string	"<actionString>"
 4890      696F6E53 
 4890      7472696E 
 4890      673E00
 4891              	.LC97:
 4892 022b 61637469 		.string	"action"
 4892      6F6E00
 4893              	.LC98:
 4894 0232 6100     		.string	"a"
 4895              		.section	.rodata.str1.8
 4896 0291 00000000 		.align 8
 4896      000000
 4897              	.LC99:
 4898 0298 20202020 		.string	"                    start up an interactive CommFPGA session"
 4898      20202020 
 4898      20202020 
 4898      20202020 
 4898      20202020 
 4899              		.section	.rodata.str1.1
 4900              	.LC100:
 4901 0234 7368656C 		.string	"shell"
 4901      6C00
 4902              	.LC101:
 4903 023a 7300     		.string	"s"
 4904              		.section	.rodata.str1.8
 4905 02d5 000000   		.align 8
 4906              	.LC102:
 4907 02d8 20202020 		.string	"                enable benchmarking & checksumming"
 4907      20202020 
 4907      20202020 
 4907      20202020 
 4907      656E6162 
 4908              		.section	.rodata.str1.1
 4909              	.LC103:
 4910 023c 62656E63 		.string	"benchmark"
 4910      686D6172 
 4910      6B00
 4911              	.LC104:
 4912 0246 6200     		.string	"b"
 4913              		.section	.rodata.str1.8
 4914 030b 00000000 		.align 8
 4914      00
 4915              	.LC105:
 4916 0310 20202020 		.string	"                    reset the bulk endpoints"
 4916      20202020 
 4916      20202020 
 4916      20202020 
 4916      20202020 
 4917              		.section	.rodata.str1.1
 4918              	.LC106:
 4919 0248 72657365 		.string	"reset"
 4919      7400
 4920              		.section	.rodata.str1.8
 4921 033d 000000   		.align 8
 4922              	.LC107:
 4923 0340 20202077 		.string	"   write data from channel ch to file"
 4923      72697465 
 4923      20646174 
 4923      61206672 
 4923      6F6D2063 
 4924              		.section	.rodata.str1.1
 4925              	.LC108:
 4926 024e 3C63683A 		.string	"<ch:file.bin>"
 4926      66696C65 
 4926      2E62696E 
 4926      3E00
 4927              	.LC109:
 4928 025c 64756D70 		.string	"dumploop"
 4928      6C6F6F70 
 4928      00
 4929              	.LC110:
 4930 0265 6C00     		.string	"l"
 4931              		.section	.rodata.str1.8
 4932 0366 0000     		.align 8
 4933              	.LC111:
 4934 0368 20202020 		.string	"                     print this help and exit"
 4934      20202020 
 4934      20202020 
 4934      20202020 
 4934      20202020 
 4935              		.section	.rodata.str1.1
 4936              	.LC112:
 4937 0267 68656C70 		.string	"help"
 4937      00
 4938              	.LC113:
 4939 026c 6800     		.string	"h"
 4940              		.section	.rodata.str1.8
 4941 0396 0000     		.align 8
 4942              	.LC114:
 4943 0398 20202077 		.string	"   write firmware to FX2's EEPROM (!!)"
 4943      72697465 
 4943      20666972 
 4943      6D776172 
 4943      6520746F 
 4944              		.section	.rodata.str1.1
 4945              	.LC115:
 4946 026e 3C737464 		.string	"<std|fw.hex|fw.iic>"
 4946      7C66772E 
 4946      6865787C 
 4946      66772E69 
 4946      69633E00 
 4947              	.LC116:
 4948 0282 65657072 		.string	"eeprom"
 4948      6F6D00
 4949              		.section	.rodata.str1.8
 4950 03bf 00       		.align 8
 4951              	.LC117:
 4952 03c0 20202020 		.string	"     backup FX2's EEPROM (e.g 128:fw.iic)\n"
 4952      20626163 
 4952      6B757020 
 4952      46583227 
 4952      73204545 
 4953              		.section	.rodata.str1.1
 4954              	.LC118:
 4955 0289 3C6B6269 		.string	"<kbitSize:fw.iic>"
 4955      7453697A 
 4955      653A6677 
 4955      2E696963 
 4955      3E00
 4956              	.LC119:
 4957 029b 6261636B 		.string	"backup"
 4957      757000
 4958              	.LC120:
 4959 02a2 666C636C 		.string	"flcli"
 4959      6900
 4960              	.LC121:
 4961 02a8 25733A20 		.string	"%s: insufficient memory\n"
 4961      696E7375 
 4961      66666963 
 4961      69656E74 
 4961      206D656D 
 4962              		.section	.rodata.str1.8
 4963 03eb 00000000 		.align 8
 4963      00
 4964              	.LC122:
 4965 03f0 46504741 		.string	"FPGALink Command-Line Interface Copyright (C) 2012-2014 Chris McClelland\n\nUsage: %s"
 4965      4C696E6B 
 4965      20436F6D 
 4965      6D616E64 
 4965      2D4C696E 
 4966              		.section	.rodata.str1.1
 4967              	.LC123:
 4968 02c1 0A00     		.string	"\n"
 4969              		.section	.rodata.str1.8
 4970 0444 00000000 		.align 8
 4971              	.LC124:
 4972 0448 0A496E74 		.string	"\nInteract with an FPGALink device.\n\n"
 4972      65726163 
 4972      74207769 
 4972      74682061 
 4972      6E204650 
 4973              		.section	.rodata.str1.1
 4974              	.LC125:
 4975 02c3 2020252D 		.string	"  %-10s %s\n"
 4975      31307320 
 4975      25730A00 
 4976              		.section	.rodata.str1.8
 4977 046d 000000   		.align 8
 4978              	.LC126:
 4979 0470 54727920 		.string	"Try '%s --help' for more information.\n"
 4979      27257320 
 4979      2D2D6865 
 4979      6C702720 
 4979      666F7220 
 4980 0497 00       		.align 8
 4981              	.LC127:
 4982 0498 41747465 		.string	"Attempting to open connection to FPGALink device %s...\n"
 4982      6D707469 
 4982      6E672074 
 4982      6F206F70 
 4982      656E2063 
 4983              		.section	.rodata.str1.1
 4984              	.LC128:
 4985 02cf 4C6F6164 		.string	"Loading firmware into %s...\n"
 4985      696E6720 
 4985      6669726D 
 4985      77617265 
 4985      20696E74 
 4986              	.LC129:
 4987 02ec 41776169 		.string	"Awaiting renumeration"
 4987      74696E67 
 4987      2072656E 
 4987      756D6572 
 4987      6174696F 
 4988              	.LC130:
 4989 0302 2E00     		.string	"."
 4990              		.section	.rodata.str1.8
 4991              		.align 8
 4992              	.LC131:
 4993 04d0 46504741 		.string	"FPGALink device did not renumerate properly as %s\n"
 4993      4C696E6B 
 4993      20646576 
 4993      69636520 
 4993      64696420 
 4994 0503 00000000 		.align 8
 4994      00
 4995              	.LC132:
 4996 0508 41747465 		.string	"Attempting to open connection to FPGLink device %s again...\n"
 4996      6D707469 
 4996      6E672074 
 4996      6F206F70 
 4996      656E2063 
 4997 0545 000000   		.align 8
 4998              	.LC133:
 4999 0548 436F756C 		.string	"Could not open FPGALink device at %s and no initial VID:PID was supplied\n"
 4999      64206E6F 
 4999      74206F70 
 4999      656E2046 
 4999      5047414C 
 5000 0592 00000000 		.align 8
 5000      0000
 5001              	.LC134:
 5002 0598 436F6E6E 		.string	"Connected to FPGALink device %s (firmwareID: 0x%04X, firmwareVersion: 0x%08X)\n"
 5002      65637465 
 5002      6420746F 
 5002      20465047 
 5002      414C696E 
 5003 05e7 00       		.align 8
 5004              	.LC135:
 5005 05e8 57726974 		.string	"Writing the standard FPGALink firmware to the FX2's EEPROM...\n"
 5005      696E6720 
 5005      74686520 
 5005      7374616E 
 5005      64617264 
 5006 0627 00       		.align 8
 5007              	.LC136:
 5008 0628 57726974 		.string	"Writing custom FPGALink firmware from %s to the FX2's EEPROM...\n"
 5008      696E6720 
 5008      63757374 
 5008      6F6D2046 
 5008      5047414C 
 5009 0669 00000000 		.align 8
 5009      000000
 5010              	.LC137:
 5011 0670 25733A20 		.string	"%s: invalid argument to option --backup=<kbitSize:fw.iic>\n"
 5011      696E7661 
 5011      6C696420 
 5011      61726775 
 5011      6D656E74 
 5012 06ab 00000000 		.align 8
 5012      00
 5013              	.LC138:
 5014 06b0 53617669 		.string	"Saving a backup of %d kbit from the FX2's EEPROM to %s...\n"
 5014      6E672061 
 5014      20626163 
 5014      6B757020 
 5014      6F662025 
 5015              		.section	.rodata.str1.1
 5016              	.LC139:
 5017 0304 436F6E66 		.string	"Configuring ports...\n"
 5017      69677572 
 5017      696E6720 
 5017      706F7274 
 5017      732E2E2E 
 5018              	.LC140:
 5019 031a 25303858 		.string	"%08X"
 5019      00
 5020              		.section	.rodata.str1.8
 5021 06eb 00000000 		.align 8
 5021      00
 5022              	.LC141:
 5023 06f0 52656164 		.string	"Readback:   28   24   20   16    12    8    4    0\n          %s"
 5023      6261636B 
 5023      3A202020 
 5023      32382020 
 5023      20323420 
 5024              		.section	.rodata.str1.1
 5025              	.LC142:
 5026 031f 20257300 		.string	" %s"
 5027              	.LC143:
 5028 0323 20202573 		.string	"  %s"
 5028      00
 5029              	.LC144:
 5030 0328 2025730A 		.string	" %s\n"
 5030      00
 5031              		.section	.rodata.str1.8
 5032              		.align 8
 5033              	.LC145:
 5034 0730 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain, yielding:\n"
 5034      46504741 
 5034      4C696E6B 
 5034      20646576 
 5034      69636520 
 5035              		.section	.rodata.str1.1
 5036              	.LC146:
 5037 032d 20203078 		.string	"  0x%08X\n"
 5037      25303858 
 5037      0A00
 5038              		.section	.rodata.str1.8
 5039 076d 000000   		.align 8
 5040              	.LC147:
 5041 0770 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain but did not find any attached devices\n"
 5041      46504741 
 5041      4C696E6B 
 5041      20646576 
 5041      69636520 
 5042              		.align 8
 5043              	.LC148:
 5044 07c8 4A544147 		.string	"JTAG chain scan requested but FPGALink device at %s does not support NeroProg\n"
 5044      20636861 
 5044      696E2073 
 5044      63616E20 
 5044      72657175 
 5045              		.section	.rodata.str1.1
 5046              	.LC149:
 5047 0337 50726F67 		.string	"Programming device...\n"
 5047      72616D6D 
 5047      696E6720 
 5047      64657669 
 5047      63652E2E 
 5048              		.section	.rodata.str1.8
 5049 0817 00       		.align 8
 5050              	.LC150:
 5051 0818 50726F67 		.string	"Program operation requested but device at %s does not support NeroProg\n"
 5051      72616D20 
 5051      6F706572 
 5051      6174696F 
 5051      6E207265 
 5052              		.align 8
 5053              	.LC151:
 5054 0860 45786563 		.string	"Executing CommFPGA actions on FPGALink device %s...\n"
 5054      7574696E 
 5054      6720436F 
 5054      6D6D4650 
 5054      47412061 
 5055 0895 000000   		.align 8
 5056              	.LC152:
 5057 0898 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --program?\n"
 5057      46504741 
 5057      4C696E6B 
 5057      20646576 
 5057      69636520 
 5058 08e4 00000000 		.align 8
 5059              	.LC153:
 5060 08e8 41637469 		.string	"Action requested but device at %s does not support CommFPGA\n"
 5060      6F6E2072 
 5060      65717565 
 5060      73746564 
 5060      20627574 
 5061 0925 000000   		.align 8
 5062              	.LC154:
 5063 0928 25733A20 		.string	"%s: invalid argument to option -l|--dumploop=<ch:file.bin>\n"
 5063      696E7661 
 5063      6C696420 
 5063      61726775 
 5063      6D656E74 
 5064 0964 00000000 		.align 8
 5065              	.LC155:
 5066 0968 436F7079 		.string	"Copying from channel %lu to %s"
 5066      696E6720 
 5066      66726F6D 
 5066      20636861 
 5066      6E6E656C 
 5067              		.section	.rodata.str1.1
 5068              	.LC156:
 5069 034e 0A436175 		.string	"\nCaught SIGINT, quitting...\n"
 5069      67687420 
 5069      53494749 
 5069      4E542C20 
 5069      71756974 
 5070              	.LC157:
 5071 036b 25642C20 		.string	"%d, %d, %d, %d, %d\n"
 5071      25642C20 
 5071      25642C20 
 5071      25642C20 
 5071      25640A00 
 5072              		.section	.rodata.str1.8
 5073 0987 00       		.align 8
 5074              	.LC158:
 5075 0988 61747465 		.string	"attempting to read coordinates from  channel %d\n"
 5075      6D707469 
 5075      6E672074 
 5075      6F207265 
 5075      61642063 
 5076 09b9 00000000 		.align 8
 5076      000000
 5077              	.LC159:
 5078 09c0 72656420 		.string	"red coordinates %s from channel %d\n"
 5078      636F6F72 
 5078      64696E61 
 5078      74657320 
 5078      25732066 
 5079              		.section	.rodata.str1.1
 5080              	.LC160:
 5081 037f 6661696C 		.string	"failed to coordinates\n"
 5081      65642074 
 5081      6F20636F 
 5081      6F726469 
 5081      6E617465 
 5082              		.section	.rodata.str1.8
 5083 09e4 00000000 		.align 8
 5084              	.LC161:
 5085 09e8 61747465 		.string	"attempting to write coordinates at channel %d\n"
 5085      6D707469 
 5085      6E672074 
 5085      6F207772 
 5085      69746520 
 5086 0a17 00       		.align 8
 5087              	.LC162:
 5088 0a18 77726974 		.string	"write failed , continuing for next channel\n"
 5088      65206661 
 5088      696C6564 
 5088      202C2063 
 5088      6F6E7469 
 5089              		.section	.rodata.str1.1
 5090              	.LC163:
 5091 0396 61747465 		.string	"attempting to receive ack\n"
 5091      6D707469 
 5091      6E672074 
 5091      6F207265 
 5091      63656976 
 5092              		.section	.rodata.str1.8
 5093 0a44 00000000 		.align 8
 5094              	.LC164:
 5095 0a48 66697273 		.string	"first ack was incorrect , attempting after 5 seconds\n"
 5095      74206163 
 5095      6B207761 
 5095      7320696E 
 5095      636F7272 
 5096 0a7e 0000     		.align 8
 5097              	.LC165:
 5098 0a80 61747465 		.string	"attempting to receive ack for second time\n"
 5098      6D707469 
 5098      6E672074 
 5098      6F207265 
 5098      63656976 
 5099              		.section	.rodata.str1.1
 5100              	.LC166:
 5101 03b1 7365636F 		.string	"second ack was also incorect\n"
 5101      6E642061 
 5101      636B2077 
 5101      61732061 
 5101      6C736F20 
 5102              		.section	.rodata.str1.8
 5103 0aab 00000000 		.align 8
 5103      00
 5104              	.LC167:
 5105 0ab0 72656365 		.string	"received coordinates correctly and now breaking out of this for loop \n"
 5105      69766564 
 5105      20636F6F 
 5105      7264696E 
 5105      61746573 
 5106 0af7 00       		.align 8
 5107              	.LC168:
 5108 0af8 7820636F 		.string	"x coordinate is %d and y coordinate is %d\n"
 5108      6F726469 
 5108      6E617465 
 5108      20697320 
 5108      25642061 
 5109              		.section	.rodata.str1.1
 5110              	.LC169:
 5111 03cf 74726163 		.string	"track data is %s\n"
 5111      6B206461 
 5111      74612069 
 5111      73202573 
 5111      0A00
 5112              	.LC171:
 5113 03e1 252E3966 		.string	"%.9f sec\n"
 5113      20736563 
 5113      0A00
 5114              	.LC172:
 5115 03eb 252E3866 		.string	"%.8f sec\n"
 5115      20736563 
 5115      0A00
 5116              	.LC173:
 5117 03f5 72656420 		.string	"red track data update -- %s"
 5117      74726163 
 5117      6B206461 
 5117      74612075 
 5117      70646174 
 5118              		.section	.rodata.str1.8
 5119 0b23 00000000 		.align 8
 5119      00
 5120              	.LC174:
 5121 0b28 4368616E 		.string	"Changed the entry to the table\n"
 5121      67656420 
 5121      74686520 
 5121      656E7472 
 5121      7920746F 
 5122              		.section	.rodata.str1.1
 5123              	.LC175:
 5124 0411 53617665 		.string	"Saved the table to the file\n"
 5124      64207468 
 5124      65207461 
 5124      626C6520 
 5124      746F2074 
 5125              	.LC176:
 5126 042e 44617461 		.string	"Data received from UART : %s\n"
 5126      20726563 
 5126      65697665 
 5126      64206672 
 5126      6F6D2055 
 5127              		.section	.rodata.str1.8
 5128              		.align 8
 5129              	.LC178:
 5130 0b48 0A456E74 		.string	"\nEntering CommFPGA command-line mode:\n"
 5130      6572696E 
 5130      6720436F 
 5130      6D6D4650 
 5130      47412063 
 5131              		.section	.rodata.str1.1
 5132              	.LC179:
 5133 044c 3E2000   		.string	"> "
 5134              		.section	.rodata.str1.8
 5135 0b6f 00       		.align 8
 5136              	.LC180:
 5137 0b70 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --xsvf?\n"
 5137      46504741 
 5137      4C696E6B 
 5137      20646576 
 5137      69636520 
 5138 0bb9 00000000 		.align 8
 5138      000000
 5139              	.LC181:
 5140 0bc0 5368656C 		.string	"Shell requested but device at %s does not support CommFPGA\n"
 5140      6C207265 
 5140      71756573 
 5140      74656420 
 5140      62757420 
 5141              		.section	.rodata.str1.1
 5142              	.LC182:
 5143 044f 25730A00 		.string	"%s\n"
 5144              		.section	.text.unlikely
 5145              	.LCOLDB183:
 5146              		.section	.text.startup,"ax",@progbits
 5147              	.LHOTB183:
 5148              		.p2align 4,,15
 5149              		.globl	main
 5151              	main:
 5152              	.LFB83:
 5153              		.cfi_startproc
 5154 0000 4157     		pushq	%r15
 5155              		.cfi_def_cfa_offset 16
 5156              		.cfi_offset 15, -16
 5157 0002 4156     		pushq	%r14
 5158              		.cfi_def_cfa_offset 24
 5159              		.cfi_offset 14, -24
 5160 0004 4155     		pushq	%r13
 5161              		.cfi_def_cfa_offset 32
 5162              		.cfi_offset 13, -32
 5163 0006 4154     		pushq	%r12
 5164              		.cfi_def_cfa_offset 40
 5165              		.cfi_offset 12, -40
 5166 0008 55       		pushq	%rbp
 5167              		.cfi_def_cfa_offset 48
 5168              		.cfi_offset 6, -48
 5169 0009 53       		pushq	%rbx
 5170              		.cfi_def_cfa_offset 56
 5171              		.cfi_offset 3, -56
 5172 000a 4881ECB8 		subq	$13752, %rsp
 5172      350000
 5173              		.cfi_def_cfa_offset 13808
 5174 0011 897C245C 		movl	%edi, 92(%rsp)
 5175 0015 488B3D00 		movq	portname(%rip), %rdi
 5175      000000
 5176 001c 64488B04 		movq	%fs:40, %rax
 5176      25280000 
 5176      00
 5177 0025 48898424 		movq	%rax, 13736(%rsp)
 5177      A8350000 
 5178 002d 31C0     		xorl	%eax, %eax
 5179 002f 48897424 		movq	%rsi, 96(%rsp)
 5179      60
 5180 0034 BE021110 		movl	$1052930, %esi
 5180      00
 5181 0039 E8000000 		call	open
 5181      00
 5182 003e B9000000 		movl	$.LC64, %ecx
 5182      00
 5183 0043 BA000000 		movl	$.LC65, %edx
 5183      00
 5184 0048 BE000000 		movl	$.LC66, %esi
 5184      00
 5185 004d BF000000 		movl	$.LC67, %edi
 5185      00
 5186 0052 89050000 		movl	%eax, fd(%rip)
 5186      0000
 5187 0058 E8000000 		call	arg_str0
 5187      00
 5188 005d B9000000 		movl	$.LC68, %ecx
 5188      00
 5189 0062 BA000000 		movl	$.LC69, %edx
 5189      00
 5190 0067 BE000000 		movl	$.LC70, %esi
 5190      00
 5191 006c BF000000 		movl	$.LC71, %edi
 5191      00
 5192 0071 4989C4   		movq	%rax, %r12
 5193 0074 E8000000 		call	arg_str1
 5193      00
 5194 0079 B9000000 		movl	$.LC72, %ecx
 5194      00
 5195 007e BA000000 		movl	$.LC73, %edx
 5195      00
 5196 0083 BE000000 		movl	$.LC74, %esi
 5196      00
 5197 0088 BF000000 		movl	$.LC41, %edi
 5197      00
 5198 008d 4989C5   		movq	%rax, %r13
 5199 0090 E8000000 		call	arg_str0
 5199      00
 5200 0095 B9000000 		movl	$.LC75, %ecx
 5200      00
 5201 009a BA000000 		movl	$.LC76, %edx
 5201      00
 5202 009f BE000000 		movl	$.LC77, %esi
 5202      00
 5203 00a4 BF000000 		movl	$.LC78, %edi
 5203      00
 5204 00a9 48894424 		movq	%rax, 64(%rsp)
 5204      40
 5205 00ae E8000000 		call	arg_str0
 5205      00
 5206 00b3 B9000000 		movl	$.LC79, %ecx
 5206      00
 5207 00b8 BA000000 		movl	$.LC80, %edx
 5207      00
 5208 00bd BE000000 		movl	$.LC81, %esi
 5208      00
 5209 00c2 BF000000 		movl	$.LC82, %edi
 5209      00
 5210 00c7 4989C6   		movq	%rax, %r14
 5211 00ca E8000000 		call	arg_str0
 5211      00
 5212 00cf B9000000 		movl	$.LC83, %ecx
 5212      00
 5213 00d4 BA000000 		movl	$.LC84, %edx
 5213      00
 5214 00d9 BE000000 		movl	$.LC85, %esi
 5214      00
 5215 00de BF000000 		movl	$.LC86, %edi
 5215      00
 5216 00e3 48894424 		movq	%rax, 8(%rsp)
 5216      08
 5217 00e8 E8000000 		call	arg_str0
 5217      00
 5218 00ed B9000000 		movl	$.LC87, %ecx
 5218      00
 5219 00f2 BA000000 		movl	$.LC88, %edx
 5219      00
 5220 00f7 BE000000 		movl	$.LC89, %esi
 5220      00
 5221 00fc BF000000 		movl	$.LC90, %edi
 5221      00
 5222 0101 48894424 		movq	%rax, 16(%rsp)
 5222      10
 5223 0106 E8000000 		call	arg_str0
 5223      00
 5224 010b B9000000 		movl	$.LC91, %ecx
 5224      00
 5225 0110 BA000000 		movl	$.LC92, %edx
 5225      00
 5226 0115 BE000000 		movl	$.LC93, %esi
 5226      00
 5227 011a BF000000 		movl	$.LC94, %edi
 5227      00
 5228 011f 48894424 		movq	%rax, 24(%rsp)
 5228      18
 5229 0124 E8000000 		call	arg_uint0
 5229      00
 5230 0129 B9000000 		movl	$.LC95, %ecx
 5230      00
 5231 012e BA000000 		movl	$.LC96, %edx
 5231      00
 5232 0133 BE000000 		movl	$.LC97, %esi
 5232      00
 5233 0138 BF000000 		movl	$.LC98, %edi
 5233      00
 5234 013d 48894424 		movq	%rax, 32(%rsp)
 5234      20
 5235 0142 E8000000 		call	arg_str0
 5235      00
 5236 0147 BA000000 		movl	$.LC99, %edx
 5236      00
 5237 014c BE000000 		movl	$.LC100, %esi
 5237      00
 5238 0151 BF000000 		movl	$.LC101, %edi
 5238      00
 5239 0156 48894424 		movq	%rax, 48(%rsp)
 5239      30
 5240 015b E8000000 		call	arg_lit0
 5240      00
 5241 0160 BA000000 		movl	$.LC102, %edx
 5241      00
 5242 0165 BE000000 		movl	$.LC103, %esi
 5242      00
 5243 016a BF000000 		movl	$.LC104, %edi
 5243      00
 5244 016f 48894424 		movq	%rax, 72(%rsp)
 5244      48
 5245 0174 E8000000 		call	arg_lit0
 5245      00
 5246 0179 BA000000 		movl	$.LC105, %edx
 5246      00
 5247 017e BE000000 		movl	$.LC106, %esi
 5247      00
 5248 0183 BF000000 		movl	$.LC41, %edi
 5248      00
 5249 0188 48894424 		movq	%rax, 80(%rsp)
 5249      50
 5250 018d E8000000 		call	arg_lit0
 5250      00
 5251 0192 B9000000 		movl	$.LC107, %ecx
 5251      00
 5252 0197 BA000000 		movl	$.LC108, %edx
 5252      00
 5253 019c BE000000 		movl	$.LC109, %esi
 5253      00
 5254 01a1 BF000000 		movl	$.LC110, %edi
 5254      00
 5255 01a6 48894424 		movq	%rax, 40(%rsp)
 5255      28
 5256 01ab E8000000 		call	arg_str0
 5256      00
 5257 01b0 BA000000 		movl	$.LC111, %edx
 5257      00
 5258 01b5 BE000000 		movl	$.LC112, %esi
 5258      00
 5259 01ba BF000000 		movl	$.LC113, %edi
 5259      00
 5260 01bf 48894424 		movq	%rax, 56(%rsp)
 5260      38
 5261 01c4 E8000000 		call	arg_lit0
 5261      00
 5262 01c9 31FF     		xorl	%edi, %edi
 5263 01cb B9000000 		movl	$.LC114, %ecx
 5263      00
 5264 01d0 BA000000 		movl	$.LC115, %edx
 5264      00
 5265 01d5 BE000000 		movl	$.LC116, %esi
 5265      00
 5266 01da 4889C3   		movq	%rax, %rbx
 5267 01dd E8000000 		call	arg_str0
 5267      00
 5268 01e2 B9000000 		movl	$.LC117, %ecx
 5268      00
 5269 01e7 BA000000 		movl	$.LC118, %edx
 5269      00
 5270 01ec BE000000 		movl	$.LC119, %esi
 5270      00
 5271 01f1 31FF     		xorl	%edi, %edi
 5272 01f3 4989C7   		movq	%rax, %r15
 5273 01f6 E8000000 		call	arg_str0
 5273      00
 5274 01fb BF140000 		movl	$20, %edi
 5274      00
 5275 0200 48890424 		movq	%rax, (%rsp)
 5276 0204 E8000000 		call	arg_end
 5276      00
 5277 0209 488B4C24 		movq	64(%rsp), %rcx
 5277      40
 5278 020e 488B5424 		movq	16(%rsp), %rdx
 5278      10
 5279 0213 4889C5   		movq	%rax, %rbp
 5280 0216 488B7424 		movq	48(%rsp), %rsi
 5280      30
 5281 021b 488B0424 		movq	(%rsp), %rax
 5282 021f 488DBC24 		leaq	224(%rsp), %rdi
 5282      E0000000 
 5283 0227 4C89A424 		movq	%r12, 224(%rsp)
 5283      E0000000 
 5284 022f 4C89AC24 		movq	%r13, 232(%rsp)
 5284      E8000000 
 5285 0237 48898C24 		movq	%rcx, 240(%rsp)
 5285      F0000000 
 5286 023f 488B4C24 		movq	8(%rsp), %rcx
 5286      08
 5287 0244 48899424 		movq	%rdx, 264(%rsp)
 5287      08010000 
 5288 024c 488B5424 		movq	32(%rsp), %rdx
 5288      20
 5289 0251 4889B424 		movq	%rsi, 288(%rsp)
 5289      20010000 
 5290 0259 488B7424 		movq	40(%rsp), %rsi
 5290      28
 5291 025e 48898C24 		movq	%rcx, 256(%rsp)
 5291      00010000 
 5292 0266 488B4C24 		movq	24(%rsp), %rcx
 5292      18
 5293 026b 48899424 		movq	%rdx, 280(%rsp)
 5293      18010000 
 5294 0273 488B5424 		movq	80(%rsp), %rdx
 5294      50
 5295 0278 4C89B424 		movq	%r14, 248(%rsp)
 5295      F8000000 
 5296 0280 4889B424 		movq	%rsi, 312(%rsp)
 5296      38010000 
 5297 0288 48898C24 		movq	%rcx, 272(%rsp)
 5297      10010000 
 5298 0290 488B4C24 		movq	72(%rsp), %rcx
 5298      48
 5299 0295 48899424 		movq	%rdx, 304(%rsp)
 5299      30010000 
 5300 029d 48899C24 		movq	%rbx, 328(%rsp)
 5300      48010000 
 5301 02a5 4C89BC24 		movq	%r15, 336(%rsp)
 5301      50010000 
 5302 02ad 48898424 		movq	%rax, 344(%rsp)
 5302      58010000 
 5303 02b5 48898C24 		movq	%rcx, 296(%rsp)
 5303      28010000 
 5304 02bd 488B4C24 		movq	56(%rsp), %rcx
 5304      38
 5305 02c2 4889AC24 		movq	%rbp, 352(%rsp)
 5305      60010000 
 5306 02ca 48C78424 		movq	$0, 128(%rsp)
 5306      80000000 
 5306      00000000 
 5307 02d6 48C78424 		movq	$0, 136(%rsp)
 5307      88000000 
 5307      00000000 
 5308 02e2 48898C24 		movq	%rcx, 320(%rsp)
 5308      40010000 
 5309 02ea E8000000 		call	arg_nullcheck
 5309      00
 5310 02ef 85C0     		testl	%eax, %eax
 5311 02f1 0F849600 		je	.L952
 5311      0000
 5312 02f7 488B3D00 		movq	stderr(%rip), %rdi
 5312      000000
 5313 02fe B9000000 		movl	$.LC120, %ecx
 5313      00
 5314 0303 BA000000 		movl	$.LC121, %edx
 5314      00
 5315 0308 BE010000 		movl	$1, %esi
 5315      00
 5316 030d 31C0     		xorl	%eax, %eax
 5317 030f 31ED     		xorl	%ebp, %ebp
 5318 0311 BB010000 		movl	$1, %ebx
 5318      00
 5319 0316 E8000000 		call	__fprintf_chk
 5319      00
 5320              	.L953:
 5321 031b 4889EF   		movq	%rbp, %rdi
 5322 031e E8000000 		call	free
 5322      00
 5323 0323 488BBC24 		movq	128(%rsp), %rdi
 5323      80000000 
 5324 032b E8000000 		call	flClose
 5324      00
 5325 0330 488B8C24 		movq	136(%rsp), %rcx
 5325      88000000 
 5326 0338 4885C9   		testq	%rcx, %rcx
 5327 033b 7425     		je	.L1040
 5328 033d 488B3D00 		movq	stderr(%rip), %rdi
 5328      000000
 5329 0344 BA000000 		movl	$.LC182, %edx
 5329      00
 5330 0349 BE010000 		movl	$1, %esi
 5330      00
 5331 034e 31C0     		xorl	%eax, %eax
 5332 0350 E8000000 		call	__fprintf_chk
 5332      00
 5333 0355 488BBC24 		movq	136(%rsp), %rdi
 5333      88000000 
 5334 035d E8000000 		call	flFreeError
 5334      00
 5335              	.L1040:
 5336 0362 89D8     		movl	%ebx, %eax
 5337 0364 488B9C24 		movq	13736(%rsp), %rbx
 5337      A8350000 
 5338 036c 6448331C 		xorq	%fs:40, %rbx
 5338      25280000 
 5338      00
 5339 0375 0F856E0B 		jne	.L1098
 5339      0000
 5340 037b 4881C4B8 		addq	$13752, %rsp
 5340      350000
 5341              		.cfi_remember_state
 5342              		.cfi_def_cfa_offset 56
 5343 0382 5B       		popq	%rbx
 5344              		.cfi_def_cfa_offset 48
 5345 0383 5D       		popq	%rbp
 5346              		.cfi_def_cfa_offset 40
 5347 0384 415C     		popq	%r12
 5348              		.cfi_def_cfa_offset 32
 5349 0386 415D     		popq	%r13
 5350              		.cfi_def_cfa_offset 24
 5351 0388 415E     		popq	%r14
 5352              		.cfi_def_cfa_offset 16
 5353 038a 415F     		popq	%r15
 5354              		.cfi_def_cfa_offset 8
 5355 038c C3       		ret
 5356              	.L952:
 5357              		.cfi_restore_state
 5358 038d 488B7424 		movq	96(%rsp), %rsi
 5358      60
 5359 0392 8B7C245C 		movl	92(%rsp), %edi
 5360 0396 488D9424 		leaq	224(%rsp), %rdx
 5360      E0000000 
 5361 039e E8000000 		call	arg_parse
 5361      00
 5362 03a3 837B6000 		cmpl	$0, 96(%rbx)
 5363 03a7 7E62     		jle	.L954
 5364 03a9 BA000000 		movl	$.LC120, %edx
 5364      00
 5365 03ae BE000000 		movl	$.LC122, %esi
 5365      00
 5366 03b3 BF010000 		movl	$1, %edi
 5366      00
 5367 03b8 31C0     		xorl	%eax, %eax
 5368 03ba 31ED     		xorl	%ebp, %ebp
 5369 03bc 31DB     		xorl	%ebx, %ebx
 5370 03be E8000000 		call	__printf_chk
 5370      00
 5371 03c3 488B3D00 		movq	stdout(%rip), %rdi
 5371      000000
 5372 03ca 488DB424 		leaq	224(%rsp), %rsi
 5372      E0000000 
 5373 03d2 BA000000 		movl	$.LC123, %edx
 5373      00
 5374 03d7 E8000000 		call	arg_print_syntax
 5374      00
 5375 03dc BE000000 		movl	$.LC124, %esi
 5375      00
 5376 03e1 BF010000 		movl	$1, %edi
 5376      00
 5377 03e6 31C0     		xorl	%eax, %eax
 5378 03e8 E8000000 		call	__printf_chk
 5378      00
 5379 03ed 488B3D00 		movq	stdout(%rip), %rdi
 5379      000000
 5380 03f4 488DB424 		leaq	224(%rsp), %rsi
 5380      E0000000 
 5381 03fc BA000000 		movl	$.LC125, %edx
 5381      00
 5382 0401 E8000000 		call	arg_print_glossary
 5382      00
 5383 0406 E910FFFF 		jmp	.L953
 5383      FF
 5384              	.L954:
 5385 040b 85C0     		testl	%eax, %eax
 5386 040d 7E3D     		jle	.L955
 5387 040f 488B3D00 		movq	stdout(%rip), %rdi
 5387      000000
 5388 0416 BA000000 		movl	$.LC120, %edx
 5388      00
 5389 041b 4889EE   		movq	%rbp, %rsi
 5390 041e E8000000 		call	arg_print_errors
 5390      00
 5391 0423 B9000000 		movl	$.LC120, %ecx
 5391      00
 5392 0428 BA000000 		movl	$.LC126, %edx
 5392      00
 5393              	.L1091:
 5394 042d 488B3D00 		movq	stderr(%rip), %rdi
 5394      000000
 5395 0434 BE010000 		movl	$1, %esi
 5395      00
 5396 0439 31C0     		xorl	%eax, %eax
 5397 043b 31ED     		xorl	%ebp, %ebp
 5398 043d BB0C0000 		movl	$12, %ebx
 5398      00
 5399 0442 E8000000 		call	__fprintf_chk
 5399      00
 5400 0447 E9CFFEFF 		jmp	.L953
 5400      FF
 5401              	.L955:
 5402 044c 488DB424 		leaq	136(%rsp), %rsi
 5402      88000000 
 5403 0454 31FF     		xorl	%edi, %edi
 5404 0456 E8000000 		call	flInitialise
 5404      00
 5405 045b 85C0     		testl	%eax, %eax
 5406 045d 740C     		je	.L1099
 5407              	.L1034:
 5408 045f 31ED     		xorl	%ebp, %ebp
 5409 0461 BB010000 		movl	$1, %ebx
 5409      00
 5410 0466 E9B0FEFF 		jmp	.L953
 5410      FF
 5411              	.L1099:
 5412 046b 498B4568 		movq	104(%r13), %rax
 5413 046f BE000000 		movl	$.LC127, %esi
 5413      00
 5414 0474 BF010000 		movl	$1, %edi
 5414      00
 5415 0479 488B28   		movq	(%rax), %rbp
 5416 047c 31C0     		xorl	%eax, %eax
 5417 047e 4889EA   		movq	%rbp, %rdx
 5418 0481 E8000000 		call	__printf_chk
 5418      00
 5419 0486 488DB424 		leaq	128(%rsp), %rsi
 5419      80000000 
 5420 048e 31D2     		xorl	%edx, %edx
 5421 0490 4889EF   		movq	%rbp, %rdi
 5422 0493 E8000000 		call	flOpen
 5422      00
 5423 0498 85C0     		testl	%eax, %eax
 5424 049a 0F841701 		je	.L957
 5424      0000
 5425 04a0 41837C24 		cmpl	$0, 96(%r12)
 5425      6000
 5426 04a6 0F84CA00 		je	.L958
 5426      0000
 5427 04ac 498B4424 		movq	104(%r12), %rax
 5427      68
 5428 04b1 BE000000 		movl	$.LC128, %esi
 5428      00
 5429 04b6 BF010000 		movl	$1, %edi
 5429      00
 5430 04bb 488B18   		movq	(%rax), %rbx
 5431 04be 31C0     		xorl	%eax, %eax
 5432 04c0 4889DA   		movq	%rbx, %rdx
 5433 04c3 E8000000 		call	__printf_chk
 5433      00
 5434 04c8 41837E60 		cmpl	$0, 96(%r14)
 5434      00
 5435 04cd 0F84AA02 		je	.L959
 5435      0000
 5436 04d3 498B4668 		movq	104(%r14), %rax
 5437 04d7 488D9424 		leaq	136(%rsp), %rdx
 5437      88000000 
 5438 04df 4889DF   		movq	%rbx, %rdi
 5439 04e2 488B30   		movq	(%rax), %rsi
 5440 04e5 E8000000 		call	flLoadCustomFirmware
 5440      00
 5441              	.L960:
 5442 04ea 85C0     		testl	%eax, %eax
 5443 04ec 0F856DFF 		jne	.L1034
 5443      FFFF
 5444 04f2 BE000000 		movl	$.LC129, %esi
 5444      00
 5445 04f7 BF010000 		movl	$1, %edi
 5445      00
 5446 04fc BB3C0000 		movl	$60, %ebx
 5446      00
 5447 0501 E8000000 		call	__printf_chk
 5447      00
 5448 0506 BFE80300 		movl	$1000, %edi
 5448      00
 5449 050b 4C8DAC24 		leaq	152(%rsp), %r13
 5449      98000000 
 5450 0513 E8000000 		call	flSleep
 5450      00
 5451 0518 EB23     		jmp	.L962
 5452              	.L1100:
 5453 051a BFFA0000 		movl	$250, %edi
 5453      00
 5454 051f 83EB01   		subl	$1, %ebx
 5455 0522 E8000000 		call	flSleep
 5455      00
 5456 0527 80BC2498 		cmpb	$0, 152(%rsp)
 5456      00000000 
 5457 052f 0F857007 		jne	.L1049
 5457      0000
 5458 0535 85DB     		testl	%ebx, %ebx
 5459 0537 0F846807 		je	.L1049
 5459      0000
 5460              	.L962:
 5461 053d BE000000 		movl	$.LC130, %esi
 5461      00
 5462 0542 BF010000 		movl	$1, %edi
 5462      00
 5463 0547 31C0     		xorl	%eax, %eax
 5464 0549 E8000000 		call	__printf_chk
 5464      00
 5465 054e 488B3D00 		movq	stdout(%rip), %rdi
 5465      000000
 5466 0555 E8000000 		call	fflush
 5466      00
 5467 055a 488D9424 		leaq	136(%rsp), %rdx
 5467      88000000 
 5468 0562 4C89EE   		movq	%r13, %rsi
 5469 0565 4889EF   		movq	%rbp, %rdi
 5470 0568 E8000000 		call	flIsDeviceAvailable
 5470      00
 5471 056d 85C0     		testl	%eax, %eax
 5472 056f 74A9     		je	.L1100
 5473 0571 E9E9FEFF 		jmp	.L1034
 5473      FF
 5474              	.L958:
 5475 0576 4889E9   		movq	%rbp, %rcx
 5476 0579 BA000000 		movl	$.LC133, %edx
 5476      00
 5477 057e E9AAFEFF 		jmp	.L1091
 5477      FF
 5478              	.L964:
 5479 0583 4889EA   		movq	%rbp, %rdx
 5480 0586 BE000000 		movl	$.LC132, %esi
 5480      00
 5481 058b BF010000 		movl	$1, %edi
 5481      00
 5482 0590 31C0     		xorl	%eax, %eax
 5483 0592 E8000000 		call	__printf_chk
 5483      00
 5484 0597 488D9424 		leaq	136(%rsp), %rdx
 5484      88000000 
 5485 059f 488DB424 		leaq	128(%rsp), %rsi
 5485      80000000 
 5486 05a7 4889EF   		movq	%rbp, %rdi
 5487 05aa E8000000 		call	flOpen
 5487      00
 5488 05af 85C0     		testl	%eax, %eax
 5489 05b1 0F85A8FE 		jne	.L1034
 5489      FFFF
 5490              	.L957:
 5491 05b7 488BBC24 		movq	128(%rsp), %rdi
 5491      80000000 
 5492 05bf E8000000 		call	flGetFirmwareVersion
 5492      00
 5493 05c4 488BBC24 		movq	128(%rsp), %rdi
 5493      80000000 
 5494 05cc 89C3     		movl	%eax, %ebx
 5495 05ce E8000000 		call	flGetFirmwareID
 5495      00
 5496 05d3 4189D8   		movl	%ebx, %r8d
 5497 05d6 0FB7C8   		movzwl	%ax, %ecx
 5498 05d9 4889EA   		movq	%rbp, %rdx
 5499 05dc 31C0     		xorl	%eax, %eax
 5500 05de BE000000 		movl	$.LC134, %esi
 5500      00
 5501 05e3 BF010000 		movl	$1, %edi
 5501      00
 5502 05e8 E8000000 		call	__printf_chk
 5502      00
 5503 05ed 41837F60 		cmpl	$0, 96(%r15)
 5503      00
 5504 05f2 745F     		je	.L972
 5505 05f4 498B4768 		movq	104(%r15), %rax
 5506 05f8 488B10   		movq	(%rax), %rdx
 5507 05fb 803A73   		cmpb	$115, (%rdx)
 5508 05fe 0F859101 		jne	.L969
 5508      0000
 5509 0604 807A0174 		cmpb	$116, 1(%rdx)
 5510 0608 0F858701 		jne	.L969
 5510      0000
 5511 060e 807A0264 		cmpb	$100, 2(%rdx)
 5512 0612 0F857D01 		jne	.L969
 5512      0000
 5513 0618 807A0300 		cmpb	$0, 3(%rdx)
 5514 061c 0F857301 		jne	.L969
 5514      0000
 5515 0622 BE000000 		movl	$.LC135, %esi
 5515      00
 5516 0627 BF010000 		movl	$1, %edi
 5516      00
 5517 062c 31C0     		xorl	%eax, %eax
 5518 062e E8000000 		call	__printf_chk
 5518      00
 5519 0633 488BBC24 		movq	128(%rsp), %rdi
 5519      80000000 
 5520 063b 488D9424 		leaq	136(%rsp), %rdx
 5520      88000000 
 5521 0643 4889EE   		movq	%rbp, %rsi
 5522 0646 E8000000 		call	flFlashStandardFirmware
 5522      00
 5523              	.L970:
 5524 064b 85C0     		testl	%eax, %eax
 5525 064d 0F850CFE 		jne	.L1034
 5525      FFFF
 5526              	.L972:
 5527 0653 488B0424 		movq	(%rsp), %rax
 5528 0657 83786000 		cmpl	$0, 96(%rax)
 5529 065b 0F856601 		jne	.L1101
 5529      0000
 5530              	.L968:
 5531 0661 488B4424 		movq	40(%rsp), %rax
 5531      28
 5532 0666 83786000 		cmpl	$0, 96(%rax)
 5533 066a 0F857406 		jne	.L975
 5533      0000
 5534              	.L978:
 5535 0670 488B4424 		movq	32(%rsp), %rax
 5535      20
 5536 0675 BB010000 		movl	$1, %ebx
 5536      00
 5537 067a 83786000 		cmpl	$0, 96(%rax)
 5538 067e 740C     		je	.L977
 5539 0680 488B4424 		movq	32(%rsp), %rax
 5539      20
 5540 0685 488B4068 		movq	104(%rax), %rax
 5541 0689 0FB618   		movzbl	(%rax), %ebx
 5542              	.L977:
 5543 068c 488BBC24 		movq	128(%rsp), %rdi
 5543      80000000 
 5544 0694 440FB6F3 		movzbl	%bl, %r14d
 5545 0698 E8000000 		call	flIsNeroCapable
 5545      00
 5546 069d 488BBC24 		movq	128(%rsp), %rdi
 5546      80000000 
 5547 06a5 4489F6   		movl	%r14d, %esi
 5548 06a8 4189C4   		movl	%eax, %r12d
 5549 06ab E8000000 		call	flIsCommCapable
 5549      00
 5550 06b0 4189C7   		movl	%eax, %r15d
 5551 06b3 488B4424 		movq	8(%rsp), %rax
 5551      08
 5552 06b8 83786000 		cmpl	$0, 96(%rax)
 5553 06bc 0F854406 		jne	.L1102
 5553      0000
 5554              	.L979:
 5555 06c2 488B4424 		movq	16(%rsp), %rax
 5555      10
 5556 06c7 83786000 		cmpl	$0, 96(%rax)
 5557 06cb 0F845001 		je	.L981
 5557      0000
 5558 06d1 4584E4   		testb	%r12b, %r12b
 5559 06d4 0F84EC07 		je	.L982
 5559      0000
 5560 06da 488BBC24 		movq	128(%rsp), %rdi
 5560      80000000 
 5561 06e2 488D9424 		leaq	136(%rsp), %rdx
 5561      88000000 
 5562 06ea 31F6     		xorl	%esi, %esi
 5563 06ec E8000000 		call	flSelectConduit
 5563      00
 5564 06f1 85C0     		testl	%eax, %eax
 5565 06f3 0F8566FD 		jne	.L1034
 5565      FFFF
 5566 06f9 488B4424 		movq	16(%rsp), %rax
 5566      10
 5567 06fe 488BBC24 		movq	128(%rsp), %rdi
 5567      80000000 
 5568 0706 4C8D8C24 		leaq	136(%rsp), %r9
 5568      88000000 
 5569 070e 488D8C24 		leaq	160(%rsp), %rcx
 5569      A0000000 
 5570 0716 488D5424 		leaq	120(%rsp), %rdx
 5570      78
 5571 071b 41B81000 		movl	$16, %r8d
 5571      0000
 5572 0721 488B4068 		movq	104(%rax), %rax
 5573 0725 488B30   		movq	(%rax), %rsi
 5574 0728 E8000000 		call	jtagScanChain
 5574      00
 5575 072d 85C0     		testl	%eax, %eax
 5576 072f 0F852AFD 		jne	.L1034
 5576      FFFF
 5577 0735 837C2478 		cmpl	$0, 120(%rsp)
 5577      00
 5578 073a 4889EA   		movq	%rbp, %rdx
 5579 073d 0F84070C 		je	.L983
 5579      0000
 5580 0743 BE000000 		movl	$.LC145, %esi
 5580      00
 5581 0748 BF010000 		movl	$1, %edi
 5581      00
 5582 074d 31DB     		xorl	%ebx, %ebx
 5583 074f E8000000 		call	__printf_chk
 5583      00
 5584 0754 EB1C     		jmp	.L984
 5585              	.L985:
 5586 0756 8B949CA0 		movl	160(%rsp,%rbx,4), %edx
 5586      000000
 5587 075d BE000000 		movl	$.LC146, %esi
 5587      00
 5588 0762 BF010000 		movl	$1, %edi
 5588      00
 5589 0767 31C0     		xorl	%eax, %eax
 5590 0769 4883C301 		addq	$1, %rbx
 5591 076d E8000000 		call	__printf_chk
 5591      00
 5592              	.L984:
 5593 0772 395C2478 		cmpl	%ebx, 120(%rsp)
 5594 0776 77DE     		ja	.L985
 5595 0778 E9DE0B00 		jmp	.L986
 5595      00
 5596              	.L959:
 5597 077d 488D9424 		leaq	136(%rsp), %rdx
 5597      88000000 
 5598 0785 4889EE   		movq	%rbp, %rsi
 5599 0788 4889DF   		movq	%rbx, %rdi
 5600 078b E8000000 		call	flLoadStandardFirmware
 5600      00
 5601 0790 E955FDFF 		jmp	.L960
 5601      FF
 5602              	.L969:
 5603 0795 BE000000 		movl	$.LC136, %esi
 5603      00
 5604 079a BF010000 		movl	$1, %edi
 5604      00
 5605 079f 31C0     		xorl	%eax, %eax
 5606 07a1 E8000000 		call	__printf_chk
 5606      00
 5607 07a6 498B4768 		movq	104(%r15), %rax
 5608 07aa 488BBC24 		movq	128(%rsp), %rdi
 5608      80000000 
 5609 07b2 488D9424 		leaq	136(%rsp), %rdx
 5609      88000000 
 5610 07ba 488B30   		movq	(%rax), %rsi
 5611 07bd E8000000 		call	flFlashCustomFirmware
 5611      00
 5612 07c2 E984FEFF 		jmp	.L970
 5612      FF
 5613              	.L1101:
 5614 07c7 488B0424 		movq	(%rsp), %rax
 5615 07cb 4C8DAC24 		leaq	152(%rsp), %r13
 5615      98000000 
 5616 07d3 31D2     		xorl	%edx, %edx
 5617 07d5 4C89EE   		movq	%r13, %rsi
 5618 07d8 488B4068 		movq	104(%rax), %rax
 5619 07dc 488B38   		movq	(%rax), %rdi
 5620 07df E8000000 		call	strtoul
 5620      00
 5621 07e4 488B8C24 		movq	152(%rsp), %rcx
 5621      98000000 
 5622 07ec 4889C3   		movq	%rax, %rbx
 5623 07ef 80393A   		cmpb	$58, (%rcx)
 5624 07f2 0F845807 		je	.L973
 5624      0000
 5625 07f8 B9000000 		movl	$.LC120, %ecx
 5625      00
 5626 07fd BA000000 		movl	$.LC137, %edx
 5626      00
 5627              	.L1093:
 5628 0802 488B3D00 		movq	stderr(%rip), %rdi
 5628      000000
 5629 0809 BE010000 		movl	$1, %esi
 5629      00
 5630 080e 31C0     		xorl	%eax, %eax
 5631 0810 BB0C0000 		movl	$12, %ebx
 5631      00
 5632 0815 31ED     		xorl	%ebp, %ebp
 5633 0817 E8000000 		call	__fprintf_chk
 5633      00
 5634 081c E9FAFAFF 		jmp	.L953
 5634      FF
 5635              	.L981:
 5636 0821 488B4424 		movq	24(%rsp), %rax
 5636      18
 5637 0826 83786000 		cmpl	$0, 96(%rax)
 5638 082a 0F857207 		jne	.L1103
 5638      0000
 5639              	.L987:
 5640 0830 488B4424 		movq	80(%rsp), %rax
 5640      50
 5641 0835 83786000 		cmpl	$0, 96(%rax)
 5642 0839 7407     		je	.L989
 5643 083b C6050000 		movb	$1, enableBenchmarking(%rip)
 5643      000001
 5644              	.L989:
 5645 0842 488B4424 		movq	48(%rsp), %rax
 5645      30
 5646 0847 83786000 		cmpl	$0, 96(%rax)
 5647 084b 0F85BA07 		jne	.L1104
 5647      0000
 5648              	.L990:
 5649 0851 488B4424 		movq	56(%rsp), %rax
 5649      38
 5650 0856 83786000 		cmpl	$0, 96(%rax)
 5651 085a 0F856408 		jne	.L1105
 5651      0000
 5652              	.L996:
 5653 0860 488B4424 		movq	64(%rsp), %rax
 5653      40
 5654 0865 83786000 		cmpl	$0, 96(%rax)
 5655 0869 0F844108 		je	.L1002
 5655      0000
 5656 086f 488B4068 		movq	104(%rax), %rax
 5657 0873 4C8DAC24 		leaq	152(%rsp), %r13
 5657      98000000 
 5658 087b 4489FD   		movl	%r15d, %ebp
 5659 087e 488B00   		movq	(%rax), %rax
 5660 0881 48894424 		movq	%rax, 16(%rsp)
 5660      10
 5661              	.L1003:
 5662 0886 488B7C24 		movq	16(%rsp), %rdi
 5662      10
 5663 088b 488DB424 		leaq	912(%rsp), %rsi
 5663      90030000 
 5664 0893 4C8DA424 		leaq	912(%rsp), %r12
 5664      90030000 
 5665 089b 4531F6   		xorl	%r14d, %r14d
 5666 089e E8000000 		call	read_table
 5666      00
 5667 08a3 89C3     		movl	%eax, %ebx
 5668 08a5 EB36     		jmp	.L1004
 5669              	.L1005:
 5670 08a7 418B4C24 		movl	4(%r12), %ecx
 5670      04
 5671 08ac 50       		pushq	%rax
 5672              		.cfi_def_cfa_offset 13816
 5673 08ad BE000000 		movl	$.LC157, %esi
 5673      00
 5674 08b2 418B4424 		movl	16(%r12), %eax
 5674      10
 5675 08b7 BF010000 		movl	$1, %edi
 5675      00
 5676 08bc 4183C601 		addl	$1, %r14d
 5677 08c0 4983C414 		addq	$20, %r12
 5678 08c4 50       		pushq	%rax
 5679              		.cfi_def_cfa_offset 13824
 5680 08c5 418B5424 		movl	-20(%r12), %edx
 5680      EC
 5681 08ca 31C0     		xorl	%eax, %eax
 5682 08cc 458B4C24 		movl	-8(%r12), %r9d
 5682      F8
 5683 08d1 458B4424 		movl	-12(%r12), %r8d
 5683      F4
 5684 08d6 E8000000 		call	__printf_chk
 5684      00
 5685 08db 5A       		popq	%rdx
 5686              		.cfi_def_cfa_offset 13816
 5687 08dc 59       		popq	%rcx
 5688              		.cfi_def_cfa_offset 13808
 5689              	.L1004:
 5690 08dd 4139DE   		cmpl	%ebx, %r14d
 5691 08e0 7CC5     		jl	.L1005
 5692 08e2 BF010000 		movl	$1, %edi
 5692      00
 5693 08e7 E8000000 		call	sleep
 5693      00
 5694              	.L1006:
 5695 08ec 31C0     		xorl	%eax, %eax
 5696              	.L1007:
 5697 08ee C7840470 		movl	$-1, 368(%rsp,%rax)
 5697      010000FF 
 5697      FFFFFF
 5698 08f9 C7840480 		movl	$-1, 640(%rsp,%rax)
 5698      020000FF 
 5698      FFFFFF
 5699 0904 4883C004 		addq	$4, %rax
 5700 0908 483D0401 		cmpq	$260, %rax
 5700      0000
 5701 090e 75DE     		jne	.L1007
 5702 0910 4531E4   		xorl	%r12d, %r12d
 5703 0913 EB0E     		jmp	.L1016
 5704              	.L1008:
 5705 0915 4183C401 		addl	$1, %r12d
 5706 0919 4183FC40 		cmpl	$64, %r12d
 5707 091d 0F845001 		je	.L1015
 5707      0000
 5708              	.L1016:
 5709 0923 4084ED   		testb	%bpl, %bpl
 5710 0926 74ED     		je	.L1008
 5711 0928 488BBC24 		movq	128(%rsp), %rdi
 5711      80000000 
 5712 0930 488D9424 		leaq	136(%rsp), %rdx
 5712      88000000 
 5713 0938 4C89EE   		movq	%r13, %rsi
 5714 093b E8000000 		call	flIsFPGARunning
 5714      00
 5715 0940 85C0     		testl	%eax, %eax
 5716 0942 0F8517FB 		jne	.L1034
 5716      FFFF
 5717 0948 80BC2498 		cmpb	$0, 152(%rsp)
 5717      00000000 
 5718 0950 74C3     		je	.L1008
 5719 0952 478D3424 		leal	(%r12,%r12), %r14d
 5720 0956 BE000000 		movl	$.LC123, %esi
 5720      00
 5721 095b BF010000 		movl	$1, %edi
 5721      00
 5722 0960 31C0     		xorl	%eax, %eax
 5723 0962 E8000000 		call	__printf_chk
 5723      00
 5724 0967 4489F2   		movl	%r14d, %edx
 5725 096a BE000000 		movl	$.LC158, %esi
 5725      00
 5726 096f BF010000 		movl	$1, %edi
 5726      00
 5727 0974 31C0     		xorl	%eax, %eax
 5728 0976 E8000000 		call	__printf_chk
 5728      00
 5729 097b 488B9424 		movq	136(%rsp), %rdx
 5729      88000000 
 5730 0983 488BB424 		movq	128(%rsp), %rsi
 5730      80000000 
 5731 098b B9200000 		movl	$32, %ecx
 5731      00
 5732 0990 4489F7   		movl	%r14d, %edi
 5733 0993 E8000000 		call	read_4byte_from_fpga
 5733      00
 5734 0998 4489F1   		movl	%r14d, %ecx
 5735 099b 4989C7   		movq	%rax, %r15
 5736 099e 4889C2   		movq	%rax, %rdx
 5737 09a1 BE000000 		movl	$.LC159, %esi
 5737      00
 5738 09a6 31C0     		xorl	%eax, %eax
 5739 09a8 BF010000 		movl	$1, %edi
 5739      00
 5740 09ad E8000000 		call	__printf_chk
 5740      00
 5741 09b2 41803F66 		cmpb	$102, (%r15)
 5742 09b6 0F84F404 		je	.L1106
 5742      0000
 5743 09bc 458D4E01 		leal	1(%r14), %r9d
 5744 09c0 BE000000 		movl	$.LC161, %esi
 5744      00
 5745 09c5 BF010000 		movl	$1, %edi
 5745      00
 5746 09ca 31C0     		xorl	%eax, %eax
 5747 09cc 4489CA   		movl	%r9d, %edx
 5748 09cf 44890C24 		movl	%r9d, (%rsp)
 5749 09d3 E8000000 		call	__printf_chk
 5749      00
 5750 09d8 448B0C24 		movl	(%rsp), %r9d
 5751 09dc 488B8C24 		movq	136(%rsp), %rcx
 5751      88000000 
 5752 09e4 41B82000 		movl	$32, %r8d
 5752      0000
 5753 09ea 488B9424 		movq	128(%rsp), %rdx
 5753      80000000 
 5754 09f2 4C89FE   		movq	%r15, %rsi
 5755 09f5 4489CF   		movl	%r9d, %edi
 5756 09f8 E8000000 		call	write_4byte_to_board
 5756      00
 5757 09fd 3C66     		cmpb	$102, %al
 5758 09ff 0F84CE04 		je	.L1107
 5758      0000
 5759 0a05 BE000000 		movl	$.LC163, %esi
 5759      00
 5760 0a0a BF010000 		movl	$1, %edi
 5760      00
 5761 0a0f 31C0     		xorl	%eax, %eax
 5762 0a11 E8000000 		call	__printf_chk
 5762      00
 5763 0a16 488B9424 		movq	136(%rsp), %rdx
 5763      88000000 
 5764 0a1e 488BB424 		movq	128(%rsp), %rsi
 5764      80000000 
 5765 0a26 B9010000 		movl	$1, %ecx
 5765      00
 5766 0a2b 4489F7   		movl	%r14d, %edi
 5767 0a2e E8000000 		call	receive_ack
 5767      00
 5768 0a33 803866   		cmpb	$102, (%rax)
 5769 0a36 0F84B204 		je	.L1108
 5769      0000
 5770 0a3c BE000000 		movl	$.LC167, %esi
 5770      00
 5771 0a41 BF010000 		movl	$1, %edi
 5771      00
 5772 0a46 31C0     		xorl	%eax, %eax
 5773 0a48 E8000000 		call	__printf_chk
 5773      00
 5774 0a4d 4963C4   		movslq	%r12d, %rax
 5775 0a50 488D8C24 		leaq	368(%rsp), %rcx
 5775      70010000 
 5776 0a58 488D9424 		leaq	640(%rsp), %rdx
 5776      80020000 
 5777 0a60 48C1E002 		salq	$2, %rax
 5778 0a64 4C89FF   		movq	%r15, %rdi
 5779 0a67 488D3401 		leaq	(%rcx,%rax), %rsi
 5780 0a6b 4801C2   		addq	%rax, %rdx
 5781 0a6e E8000000 		call	get_coordinate
 5781      00
 5782              	.L1015:
 5783 0a73 31C0     		xorl	%eax, %eax
 5784 0a75 EB0A     		jmp	.L1019
 5785              	.L1017:
 5786 0a77 4883C001 		addq	$1, %rax
 5787 0a7b 4883F840 		cmpq	$64, %rax
 5788 0a7f 7418     		je	.L1018
 5789              	.L1019:
 5790 0a81 83BC8470 		cmpl	$-1, 368(%rsp,%rax,4)
 5790      010000FF 
 5791 0a89 74EC     		je	.L1017
 5792 0a8b 8D0400   		leal	(%rax,%rax), %eax
 5793 0a8e 8944246C 		movl	%eax, 108(%rsp)
 5794 0a92 83C001   		addl	$1, %eax
 5795 0a95 89442468 		movl	%eax, 104(%rsp)
 5796              	.L1018:
 5797 0a99 488B9424 		movq	136(%rsp), %rdx
 5797      88000000 
 5798 0aa1 488BB424 		movq	128(%rsp), %rsi
 5798      80000000 
 5799 0aa9 B9200000 		movl	$32, %ecx
 5799      00
 5800 0aae 8B7C2468 		movl	104(%rsp), %edi
 5801 0ab2 E8000000 		call	send_ack
 5801      00
 5802 0ab7 448B7C24 		movl	108(%rsp), %r15d
 5802      6C
 5803 0abc BE000000 		movl	$.LC168, %esi
 5803      00
 5804 0ac1 BF010000 		movl	$1, %edi
 5804      00
 5805 0ac6 31C0     		xorl	%eax, %eax
 5806 0ac8 4589FC   		movl	%r15d, %r12d
 5807 0acb 41D1FC   		sarl	%r12d
 5808 0ace 4D63E4   		movslq	%r12d, %r12
 5809 0ad1 428B8CA4 		movl	640(%rsp,%r12,4), %ecx
 5809      80020000 
 5810 0ad9 428B94A4 		movl	368(%rsp,%r12,4), %edx
 5810      70010000 
 5811 0ae1 E8000000 		call	__printf_chk
 5811      00
 5812 0ae6 428BB4A4 		movl	640(%rsp,%r12,4), %esi
 5812      80020000 
 5813 0aee 428BBCA4 		movl	368(%rsp,%r12,4), %edi
 5813      70010000 
 5814 0af6 488D9424 		leaq	912(%rsp), %rdx
 5814      90030000 
 5815 0afe 89D9     		movl	%ebx, %ecx
 5816 0b00 E8000000 		call	func
 5816      00
 5817 0b05 BE000000 		movl	$.LC169, %esi
 5817      00
 5818 0b0a 4889C2   		movq	%rax, %rdx
 5819 0b0d 4989C6   		movq	%rax, %r14
 5820 0b10 BF010000 		movl	$1, %edi
 5820      00
 5821 0b15 31C0     		xorl	%eax, %eax
 5822 0b17 E8000000 		call	__printf_chk
 5822      00
 5823 0b1c 488B8C24 		movq	136(%rsp), %rcx
 5823      88000000 
 5824 0b24 488B9424 		movq	128(%rsp), %rdx
 5824      80000000 
 5825 0b2c 41B82000 		movl	$32, %r8d
 5825      0000
 5826 0b32 8B7C2468 		movl	104(%rsp), %edi
 5827 0b36 4C89F6   		movq	%r14, %rsi
 5828 0b39 E8000000 		call	write_4byte_to_board
 5828      00
 5829 0b3e 488B9424 		movq	136(%rsp), %rdx
 5829      88000000 
 5830 0b46 488BB424 		movq	128(%rsp), %rsi
 5830      80000000 
 5831 0b4e B9000100 		movl	$256, %ecx
 5831      00
 5832 0b53 4489FF   		movl	%r15d, %edi
 5833 0b56 E8000000 		call	receive_ack
 5833      00
 5834 0b5b 803866   		cmpb	$102, (%rax)
 5835 0b5e 0F8488FD 		je	.L1006
 5835      FFFF
 5836 0b64 488B8C24 		movq	136(%rsp), %rcx
 5836      88000000 
 5837 0b6c 488B9424 		movq	128(%rsp), %rdx
 5837      80000000 
 5838 0b74 498D7620 		leaq	32(%r14), %rsi
 5839 0b78 8B7C2468 		movl	104(%rsp), %edi
 5840 0b7c 41B82000 		movl	$32, %r8d
 5840      0000
 5841 0b82 E8000000 		call	write_4byte_to_board
 5841      00
 5842 0b87 488B9424 		movq	136(%rsp), %rdx
 5842      88000000 
 5843 0b8f 488BB424 		movq	128(%rsp), %rsi
 5843      80000000 
 5844 0b97 B9000100 		movl	$256, %ecx
 5844      00
 5845 0b9c 4489FF   		movl	%r15d, %edi
 5846 0b9f E8000000 		call	receive_ack
 5846      00
 5847 0ba4 803866   		cmpb	$102, (%rax)
 5848 0ba7 0F843FFD 		je	.L1006
 5848      FFFF
 5849 0bad 488B9424 		movq	136(%rsp), %rdx
 5849      88000000 
 5850 0bb5 488BB424 		movq	128(%rsp), %rsi
 5850      80000000 
 5851 0bbd B9200000 		movl	$32, %ecx
 5851      00
 5852 0bc2 8B7C2468 		movl	104(%rsp), %edi
 5853 0bc6 4531F6   		xorl	%r14d, %r14d
 5854 0bc9 4531FF   		xorl	%r15d, %r15d
 5855 0bcc E8000000 		call	send_ack
 5855      00
 5856 0bd1 BF140000 		movl	$20, %edi
 5856      00
 5857 0bd6 E8000000 		call	sleep
 5857      00
 5858 0bdb E8000000 		call	clock
 5858      00
 5859 0be0 660FEFC9 		pxor	%xmm1, %xmm1
 5860 0be4 48890424 		movq	%rax, (%rsp)
 5861 0be8 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 5861      C8
 5862 0bed F20F114C 		movsd	%xmm1, 8(%rsp)
 5862      2408
 5863              	.L1021:
 5864 0bf3 E8000000 		call	clock
 5864      00
 5865 0bf8 660FEFC0 		pxor	%xmm0, %xmm0
 5866 0bfc F20F1025 		movsd	.LC177(%rip), %xmm4
 5866      00000000 
 5867 0c04 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 5867      C0
 5868 0c09 F20F5C44 		subsd	8(%rsp), %xmm0
 5868      2408
 5869 0c0f F20F5905 		mulsd	.LC170(%rip), %xmm0
 5869      00000000 
 5870 0c17 F20F5E05 		divsd	.LC4(%rip), %xmm0
 5870      00000000 
 5871 0c1f 660F2EE0 		ucomisd	%xmm0, %xmm4
 5872 0c23 0F86D406 		jbe	.L1031
 5872      0000
 5873 0c29 E8000000 		call	clock
 5873      00
 5874 0c2e 660FEFC0 		pxor	%xmm0, %xmm0
 5875 0c32 BE000000 		movl	$.LC171, %esi
 5875      00
 5876 0c37 BF010000 		movl	$1, %edi
 5876      00
 5877 0c3c F2480F2A 		cvtsi2sdq	%rax, %xmm0
 5877      C0
 5878 0c41 B8010000 		movl	$1, %eax
 5878      00
 5879 0c46 F20F5C44 		subsd	8(%rsp), %xmm0
 5879      2408
 5880 0c4c F20F5905 		mulsd	.LC170(%rip), %xmm0
 5880      00000000 
 5881 0c54 F20F5E05 		divsd	.LC4(%rip), %xmm0
 5881      00000000 
 5882 0c5c E8000000 		call	__printf_chk
 5882      00
 5883 0c61 E8000000 		call	clock
 5883      00
 5884 0c66 482B0424 		subq	(%rsp), %rax
 5885 0c6a BE000000 		movl	$.LC172, %esi
 5885      00
 5886 0c6f BF010000 		movl	$1, %edi
 5886      00
 5887 0c74 4889C2   		movq	%rax, %rdx
 5888 0c77 31C0     		xorl	%eax, %eax
 5889 0c79 E8000000 		call	__printf_chk
 5889      00
 5890 0c7e 4585FF   		testl	%r15d, %r15d
 5891 0c81 0F847605 		je	.L1109
 5891      0000
 5892 0c87 4585F6   		testl	%r14d, %r14d
 5893 0c8a 0F845205 		je	.L1028
 5893      0000
 5894              	.L1029:
 5895 0c90 4183FF01 		cmpl	$1, %r15d
 5896 0c94 0F846306 		je	.L1031
 5896      0000
 5897              	.L1090:
 5898 0c9a 41BE0100 		movl	$1, %r14d
 5898      0000
 5899 0ca0 E94EFFFF 		jmp	.L1021
 5899      FF
 5900              	.L1049:
 5901 0ca5 31C0     		xorl	%eax, %eax
 5902 0ca7 BE000000 		movl	$.LC123, %esi
 5902      00
 5903 0cac BF010000 		movl	$1, %edi
 5903      00
 5904 0cb1 E8000000 		call	__printf_chk
 5904      00
 5905 0cb6 80BC2498 		cmpb	$0, 152(%rsp)
 5905      00000000 
 5906 0cbe 0F85BFF8 		jne	.L964
 5906      FFFF
 5907 0cc4 488B3D00 		movq	stderr(%rip), %rdi
 5907      000000
 5908 0ccb 4889E9   		movq	%rbp, %rcx
 5909 0cce BA000000 		movl	$.LC131, %edx
 5909      00
 5910 0cd3 BE010000 		movl	$1, %esi
 5910      00
 5911 0cd8 31C0     		xorl	%eax, %eax
 5912 0cda E8000000 		call	__fprintf_chk
 5912      00
 5913 0cdf E97BF7FF 		jmp	.L1034
 5913      FF
 5914              	.L975:
 5915 0ce4 488BBC24 		movq	128(%rsp), %rdi
 5915      80000000 
 5916 0cec 488DB424 		leaq	136(%rsp), %rsi
 5916      88000000 
 5917 0cf4 E8000000 		call	flResetToggle
 5917      00
 5918 0cf9 85C0     		testl	%eax, %eax
 5919 0cfb 0F855EF7 		jne	.L1034
 5919      FFFF
 5920 0d01 E96AF9FF 		jmp	.L978
 5920      FF
 5921              	.L1102:
 5922 0d06 BE000000 		movl	$.LC139, %esi
 5922      00
 5923 0d0b BF010000 		movl	$1, %edi
 5923      00
 5924 0d10 31C0     		xorl	%eax, %eax
 5925 0d12 E8000000 		call	__printf_chk
 5925      00
 5926 0d17 488B4424 		movq	8(%rsp), %rax
 5926      08
 5927 0d1c 4C8DAC24 		leaq	152(%rsp), %r13
 5927      98000000 
 5928 0d24 488BBC24 		movq	128(%rsp), %rdi
 5928      80000000 
 5929 0d2c 488D8C24 		leaq	136(%rsp), %rcx
 5929      88000000 
 5930 0d34 4C89EA   		movq	%r13, %rdx
 5931 0d37 488B4068 		movq	104(%rax), %rax
 5932 0d3b 488B30   		movq	(%rax), %rsi
 5933 0d3e E8000000 		call	flMultiBitPortAccess
 5933      00
 5934 0d43 85C0     		testl	%eax, %eax
 5935 0d45 0F8514F7 		jne	.L1034
 5935      FFFF
 5936 0d4b 448B8424 		movl	152(%rsp), %r8d
 5936      98000000 
 5937 0d53 488DBC24 		leaq	13712(%rsp), %rdi
 5937      90350000 
 5938 0d5b B9000000 		movl	$.LC140, %ecx
 5938      00
 5939 0d60 BA090000 		movl	$9, %edx
 5939      00
 5940 0d65 BE010000 		movl	$1, %esi
 5940      00
 5941 0d6a 31C0     		xorl	%eax, %eax
 5942 0d6c E8000000 		call	__sprintf_chk
 5942      00
 5943 0d71 0FB68424 		movzbl	13712(%rsp), %eax
 5943      90350000 
 5944 0d79 BE000000 		movl	$.LC141, %esi
 5944      00
 5945 0d7e BF010000 		movl	$1, %edi
 5945      00
 5946 0d83 83E830   		subl	$48, %eax
 5947 0d86 4898     		cltq
 5948 0d88 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5948      00000000 
 5949 0d90 31C0     		xorl	%eax, %eax
 5950 0d92 E8000000 		call	__printf_chk
 5950      00
 5951 0d97 0FB68424 		movzbl	13713(%rsp), %eax
 5951      91350000 
 5952 0d9f BE000000 		movl	$.LC142, %esi
 5952      00
 5953 0da4 BF010000 		movl	$1, %edi
 5953      00
 5954 0da9 83E830   		subl	$48, %eax
 5955 0dac 4898     		cltq
 5956 0dae 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5956      00000000 
 5957 0db6 31C0     		xorl	%eax, %eax
 5958 0db8 E8000000 		call	__printf_chk
 5958      00
 5959 0dbd 0FB68424 		movzbl	13714(%rsp), %eax
 5959      92350000 
 5960 0dc5 BE000000 		movl	$.LC142, %esi
 5960      00
 5961 0dca BF010000 		movl	$1, %edi
 5961      00
 5962 0dcf 83E830   		subl	$48, %eax
 5963 0dd2 4898     		cltq
 5964 0dd4 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5964      00000000 
 5965 0ddc 31C0     		xorl	%eax, %eax
 5966 0dde E8000000 		call	__printf_chk
 5966      00
 5967 0de3 0FB68424 		movzbl	13715(%rsp), %eax
 5967      93350000 
 5968 0deb BE000000 		movl	$.LC142, %esi
 5968      00
 5969 0df0 BF010000 		movl	$1, %edi
 5969      00
 5970 0df5 83E830   		subl	$48, %eax
 5971 0df8 4898     		cltq
 5972 0dfa 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5972      00000000 
 5973 0e02 31C0     		xorl	%eax, %eax
 5974 0e04 E8000000 		call	__printf_chk
 5974      00
 5975 0e09 0FB68424 		movzbl	13716(%rsp), %eax
 5975      94350000 
 5976 0e11 BE000000 		movl	$.LC143, %esi
 5976      00
 5977 0e16 BF010000 		movl	$1, %edi
 5977      00
 5978 0e1b 83E830   		subl	$48, %eax
 5979 0e1e 4898     		cltq
 5980 0e20 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5980      00000000 
 5981 0e28 31C0     		xorl	%eax, %eax
 5982 0e2a E8000000 		call	__printf_chk
 5982      00
 5983 0e2f 0FB68424 		movzbl	13717(%rsp), %eax
 5983      95350000 
 5984 0e37 BE000000 		movl	$.LC142, %esi
 5984      00
 5985 0e3c BF010000 		movl	$1, %edi
 5985      00
 5986 0e41 83E830   		subl	$48, %eax
 5987 0e44 4898     		cltq
 5988 0e46 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5988      00000000 
 5989 0e4e 31C0     		xorl	%eax, %eax
 5990 0e50 E8000000 		call	__printf_chk
 5990      00
 5991 0e55 0FB68424 		movzbl	13718(%rsp), %eax
 5991      96350000 
 5992 0e5d BE000000 		movl	$.LC142, %esi
 5992      00
 5993 0e62 BF010000 		movl	$1, %edi
 5993      00
 5994 0e67 83E830   		subl	$48, %eax
 5995 0e6a 4898     		cltq
 5996 0e6c 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5996      00000000 
 5997 0e74 31C0     		xorl	%eax, %eax
 5998 0e76 E8000000 		call	__printf_chk
 5998      00
 5999 0e7b 0FB68424 		movzbl	13719(%rsp), %eax
 5999      97350000 
 6000 0e83 BE000000 		movl	$.LC144, %esi
 6000      00
 6001 0e88 BF010000 		movl	$1, %edi
 6001      00
 6002 0e8d 83E830   		subl	$48, %eax
 6003 0e90 4898     		cltq
 6004 0e92 488B14C5 		movq	nibbles(,%rax,8), %rdx
 6004      00000000 
 6005 0e9a 31C0     		xorl	%eax, %eax
 6006 0e9c E8000000 		call	__printf_chk
 6006      00
 6007 0ea1 BF640000 		movl	$100, %edi
 6007      00
 6008 0ea6 E8000000 		call	flSleep
 6008      00
 6009 0eab E912F8FF 		jmp	.L979
 6009      FF
 6010              	.L1106:
 6011 0eb0 BE000000 		movl	$.LC160, %esi
 6011      00
 6012 0eb5 BF010000 		movl	$1, %edi
 6012      00
 6013 0eba 31C0     		xorl	%eax, %eax
 6014 0ebc E8000000 		call	__printf_chk
 6014      00
 6015 0ec1 E94FFAFF 		jmp	.L1008
 6015      FF
 6016              	.L982:
 6017 0ec6 4889E9   		movq	%rbp, %rcx
 6018 0ec9 BA000000 		movl	$.LC148, %edx
 6018      00
 6019 0ece E95AF5FF 		jmp	.L1091
 6019      FF
 6020              	.L1107:
 6021 0ed3 BE000000 		movl	$.LC162, %esi
 6021      00
 6022 0ed8 BF010000 		movl	$1, %edi
 6022      00
 6023 0edd 31C0     		xorl	%eax, %eax
 6024 0edf E8000000 		call	__printf_chk
 6024      00
 6025 0ee4 E92CFAFF 		jmp	.L1008
 6025      FF
 6026              	.L1098:
 6027 0ee9 E8000000 		call	__stack_chk_fail
 6027      00
 6028              	.L1108:
 6029 0eee BE000000 		movl	$.LC164, %esi
 6029      00
 6030 0ef3 BF010000 		movl	$1, %edi
 6030      00
 6031 0ef8 31C0     		xorl	%eax, %eax
 6032 0efa E8000000 		call	__printf_chk
 6032      00
 6033 0eff BF050000 		movl	$5, %edi
 6033      00
 6034 0f04 E8000000 		call	sleep
 6034      00
 6035 0f09 BE000000 		movl	$.LC165, %esi
 6035      00
 6036 0f0e BF010000 		movl	$1, %edi
 6036      00
 6037 0f13 31C0     		xorl	%eax, %eax
 6038 0f15 E8000000 		call	__printf_chk
 6038      00
 6039 0f1a 488BB424 		movq	128(%rsp), %rsi
 6039      80000000 
 6040 0f22 488B9424 		movq	136(%rsp), %rdx
 6040      88000000 
 6041 0f2a 4489F7   		movl	%r14d, %edi
 6042 0f2d B9010000 		movl	$1, %ecx
 6042      00
 6043 0f32 E8000000 		call	receive_ack
 6043      00
 6044 0f37 BE000000 		movl	$.LC166, %esi
 6044      00
 6045 0f3c C60066   		movb	$102, (%rax)
 6046 0f3f BF010000 		movl	$1, %edi
 6046      00
 6047 0f44 31C0     		xorl	%eax, %eax
 6048 0f46 E8000000 		call	__printf_chk
 6048      00
 6049 0f4b E9C5F9FF 		jmp	.L1008
 6049      FF
 6050              	.L973:
 6051 0f50 4883C101 		addq	$1, %rcx
 6052 0f54 89C2     		movl	%eax, %edx
 6053 0f56 BE000000 		movl	$.LC138, %esi
 6053      00
 6054 0f5b BF010000 		movl	$1, %edi
 6054      00
 6055 0f60 31C0     		xorl	%eax, %eax
 6056 0f62 48898C24 		movq	%rcx, 152(%rsp)
 6056      98000000 
 6057 0f6a E8000000 		call	__printf_chk
 6057      00
 6058 0f6f 488B9424 		movq	152(%rsp), %rdx
 6058      98000000 
 6059 0f77 488BBC24 		movq	128(%rsp), %rdi
 6059      80000000 
 6060 0f7f 488D8C24 		leaq	136(%rsp), %rcx
 6060      88000000 
 6061 0f87 89DE     		movl	%ebx, %esi
 6062 0f89 E8000000 		call	flSaveFirmware
 6062      00
 6063 0f8e 85C0     		testl	%eax, %eax
 6064 0f90 0F84CBF6 		je	.L968
 6064      FFFF
 6065              	.L1000:
 6066 0f96 BB010000 		movl	$1, %ebx
 6066      00
 6067 0f9b 31ED     		xorl	%ebp, %ebp
 6068 0f9d E979F3FF 		jmp	.L953
 6068      FF
 6069              	.L1103:
 6070 0fa2 31C0     		xorl	%eax, %eax
 6071 0fa4 BE000000 		movl	$.LC149, %esi
 6071      00
 6072 0fa9 BF010000 		movl	$1, %edi
 6072      00
 6073 0fae E8000000 		call	__printf_chk
 6073      00
 6074 0fb3 4584E4   		testb	%r12b, %r12b
 6075 0fb6 0F844401 		je	.L988
 6075      0000
 6076              	.L1041:
 6077 0fbc 488BBC24 		movq	128(%rsp), %rdi
 6077      80000000 
 6078 0fc4 488D9424 		leaq	136(%rsp), %rdx
 6078      88000000 
 6079 0fcc 31F6     		xorl	%esi, %esi
 6080 0fce E8000000 		call	flSelectConduit
 6080      00
 6081 0fd3 85C0     		testl	%eax, %eax
 6082 0fd5 0F8584F4 		jne	.L1034
 6082      FFFF
 6083 0fdb 488B4424 		movq	24(%rsp), %rax
 6083      18
 6084 0fe0 488BBC24 		movq	128(%rsp), %rdi
 6084      80000000 
 6085 0fe8 488D8C24 		leaq	136(%rsp), %rcx
 6085      88000000 
 6086 0ff0 31D2     		xorl	%edx, %edx
 6087 0ff2 488B4068 		movq	104(%rax), %rax
 6088 0ff6 488B30   		movq	(%rax), %rsi
 6089 0ff9 E8000000 		call	flProgram
 6089      00
 6090 0ffe 85C0     		testl	%eax, %eax
 6091 1000 0F8559F4 		jne	.L1034
 6091      FFFF
 6092 1006 E925F8FF 		jmp	.L987
 6092      FF
 6093              	.L1104:
 6094 100b 31C0     		xorl	%eax, %eax
 6095 100d 4889EA   		movq	%rbp, %rdx
 6096 1010 BE000000 		movl	$.LC151, %esi
 6096      00
 6097 1015 BF010000 		movl	$1, %edi
 6097      00
 6098 101a E8000000 		call	__printf_chk
 6098      00
 6099 101f 4584FF   		testb	%r15b, %r15b
 6100 1022 0F84FA02 		je	.L991
 6100      0000
 6101 1028 488BBC24 		movq	128(%rsp), %rdi
 6101      80000000 
 6102 1030 488D9424 		leaq	136(%rsp), %rdx
 6102      88000000 
 6103 1038 4489F6   		movl	%r14d, %esi
 6104 103b E8000000 		call	flSelectConduit
 6104      00
 6105 1040 85C0     		testl	%eax, %eax
 6106 1042 0F854EFF 		jne	.L1000
 6106      FFFF
 6107 1048 4C8DAC24 		leaq	152(%rsp), %r13
 6107      98000000 
 6108 1050 488BBC24 		movq	128(%rsp), %rdi
 6108      80000000 
 6109 1058 488D9424 		leaq	136(%rsp), %rdx
 6109      88000000 
 6110 1060 4C89EE   		movq	%r13, %rsi
 6111 1063 E8000000 		call	flIsFPGARunning
 6111      00
 6112 1068 85C0     		testl	%eax, %eax
 6113 106a 0F8526FF 		jne	.L1000
 6113      FFFF
 6114 1070 80BC2498 		cmpb	$0, 152(%rsp)
 6114      00000000 
 6115 1078 0F84B102 		je	.L993
 6115      0000
 6116 107e 488B4424 		movq	48(%rsp), %rax
 6116      30
 6117 1083 488BBC24 		movq	128(%rsp), %rdi
 6117      80000000 
 6118 108b 488D9424 		leaq	136(%rsp), %rdx
 6118      88000000 
 6119 1093 488B4068 		movq	104(%rax), %rax
 6120 1097 488B30   		movq	(%rax), %rsi
 6121 109a E8000000 		call	parseLine
 6121      00
 6122 109f 85C0     		testl	%eax, %eax
 6123 10a1 89C3     		movl	%eax, %ebx
 6124 10a3 0F84A8F7 		je	.L990
 6124      FFFF
 6125 10a9 31ED     		xorl	%ebp, %ebp
 6126 10ab E96BF2FF 		jmp	.L953
 6126      FF
 6127              	.L1002:
 6128 10b0 488B4424 		movq	72(%rsp), %rax
 6128      48
 6129 10b5 83786000 		cmpl	$0, 96(%rax)
 6130 10b9 7552     		jne	.L1110
 6131 10bb 31ED     		xorl	%ebp, %ebp
 6132              	.L1092:
 6133 10bd 31DB     		xorl	%ebx, %ebx
 6134 10bf E957F2FF 		jmp	.L953
 6134      FF
 6135              	.L1105:
 6136 10c4 488B4068 		movq	104(%rax), %rax
 6137 10c8 488DB424 		leaq	144(%rsp), %rsi
 6137      90000000 
 6138 10d0 BA0A0000 		movl	$10, %edx
 6138      00
 6139 10d5 488B38   		movq	(%rax), %rdi
 6140 10d8 E8000000 		call	strtoul
 6140      00
 6141 10dd 488B8C24 		movq	144(%rsp), %rcx
 6141      90000000 
 6142 10e5 4889C3   		movq	%rax, %rbx
 6143 10e8 80393A   		cmpb	$58, (%rcx)
 6144 10eb 0F848F02 		je	.L997
 6144      0000
 6145 10f1 B9000000 		movl	$.LC120, %ecx
 6145      00
 6146 10f6 BA000000 		movl	$.LC154, %edx
 6146      00
 6147 10fb E902F7FF 		jmp	.L1093
 6147      FF
 6148              	.L988:
 6149 1100 4889E9   		movq	%rbp, %rcx
 6150 1103 BA000000 		movl	$.LC150, %edx
 6150      00
 6151 1108 E920F3FF 		jmp	.L1091
 6151      FF
 6152              	.L1110:
 6153 110d 31C0     		xorl	%eax, %eax
 6154 110f BE000000 		movl	$.LC178, %esi
 6154      00
 6155 1114 BF010000 		movl	$1, %edi
 6155      00
 6156 1119 E8000000 		call	__printf_chk
 6156      00
 6157 111e 4584FF   		testb	%r15b, %r15b
 6158 1121 0F84F303 		je	.L1033
 6158      0000
 6159 1127 488BBC24 		movq	128(%rsp), %rdi
 6159      80000000 
 6160 112f 488D9424 		leaq	136(%rsp), %rdx
 6160      88000000 
 6161 1137 4489F6   		movl	%r14d, %esi
 6162 113a E8000000 		call	flSelectConduit
 6162      00
 6163 113f 85C0     		testl	%eax, %eax
 6164 1141 0F8518F3 		jne	.L1034
 6164      FFFF
 6165 1147 488BBC24 		movq	128(%rsp), %rdi
 6165      80000000 
 6166 114f 488D9424 		leaq	136(%rsp), %rdx
 6166      88000000 
 6167 1157 488DB424 		leaq	152(%rsp), %rsi
 6167      98000000 
 6168 115f E8000000 		call	flIsFPGARunning
 6168      00
 6169 1164 85C0     		testl	%eax, %eax
 6170 1166 0F85F3F2 		jne	.L1034
 6170      FFFF
 6171 116c 80BC2498 		cmpb	$0, 152(%rsp)
 6171      00000000 
 6172 1174 0F849303 		je	.L1084
 6172      0000
 6173              	.L1073:
 6174 117a BF000000 		movl	$.LC179, %edi
 6174      00
 6175 117f E8000000 		call	readline
 6175      00
 6176 1184 4885C0   		testq	%rax, %rax
 6177 1187 4889C5   		movq	%rax, %rbp
 6178 118a 0F842DFF 		je	.L1092
 6178      FFFF
 6179 1190 0FB600   		movzbl	(%rax), %eax
 6180 1193 84C0     		testb	%al, %al
 6181 1195 74E3     		je	.L1073
 6182 1197 3C71     		cmpb	$113, %al
 6183 1199 0F841EFF 		je	.L1092
 6183      FFFF
 6184 119f 4889EF   		movq	%rbp, %rdi
 6185 11a2 E8000000 		call	add_history
 6185      00
 6186 11a7 488BBC24 		movq	128(%rsp), %rdi
 6186      80000000 
 6187 11af 488D9424 		leaq	136(%rsp), %rdx
 6187      88000000 
 6188 11b7 4889EE   		movq	%rbp, %rsi
 6189 11ba E8000000 		call	parseLine
 6189      00
 6190 11bf 85C0     		testl	%eax, %eax
 6191 11c1 0F853303 		jne	.L1088
 6191      0000
 6192 11c7 4889EF   		movq	%rbp, %rdi
 6193 11ca E8000000 		call	free
 6193      00
 6194 11cf 807D0071 		cmpb	$113, 0(%rbp)
 6195 11d3 75A5     		jne	.L1073
 6196 11d5 31DB     		xorl	%ebx, %ebx
 6197 11d7 E93FF1FF 		jmp	.L953
 6197      FF
 6198              	.L1046:
 6199 11dc 41BF0100 		movl	$1, %r15d
 6199      0000
 6200              	.L1028:
 6201 11e2 BF010000 		movl	$1, %edi
 6201      00
 6202 11e7 E8000000 		call	read_one_byte_from_uart
 6202      00
 6203 11ec 803866   		cmpb	$102, (%rax)
 6204 11ef 0F851401 		jne	.L1111
 6204      0000
 6205 11f5 4531F6   		xorl	%r14d, %r14d
 6206 11f8 E9F6F9FF 		jmp	.L1021
 6206      FF
 6207              	.L1109:
 6208 11fd 488B9424 		movq	136(%rsp), %rdx
 6208      88000000 
 6209 1205 488BB424 		movq	128(%rsp), %rsi
 6209      80000000 
 6210 120d B9200000 		movl	$32, %ecx
 6210      00
 6211 1212 8B7C246C 		movl	108(%rsp), %edi
 6212 1216 E8000000 		call	read_1byte_from_fpgalink
 6212      00
 6213 121b 803866   		cmpb	$102, (%rax)
 6214 121e 0F841801 		je	.L1023
 6214      0000
 6215 1224 4889C2   		movq	%rax, %rdx
 6216 1227 48894424 		movq	%rax, 24(%rsp)
 6216      18
 6217 122c BE000000 		movl	$.LC173, %esi
 6217      00
 6218 1231 BF010000 		movl	$1, %edi
 6218      00
 6219 1236 31C0     		xorl	%eax, %eax
 6220 1238 E8000000 		call	__printf_chk
 6220      00
 6221 123d 488B4C24 		movq	24(%rsp), %rcx
 6221      18
 6222 1242 31D2     		xorl	%edx, %edx
 6223 1244 468B84A4 		movl	368(%rsp,%r12,4), %r8d
 6223      70010000 
 6224 124c 428BBCA4 		movl	640(%rsp,%r12,4), %edi
 6224      80020000 
 6225 1254 80790331 		cmpb	$49, 3(%rcx)
 6226 1258 0F94C2   		sete	%dl
 6227 125b 31C0     		xorl	%eax, %eax
 6228 125d 80790431 		cmpb	$49, 4(%rcx)
 6229 1261 0F94C0   		sete	%al
 6230 1264 8D1450   		leal	(%rax,%rdx,2), %edx
 6231 1267 31C0     		xorl	%eax, %eax
 6232 1269 80790531 		cmpb	$49, 5(%rcx)
 6233 126d 0F94C0   		sete	%al
 6234 1270 8D3450   		leal	(%rax,%rdx,2), %esi
 6235 1273 488D9424 		leaq	912(%rsp), %rdx
 6235      90030000 
 6236 127b 31C0     		xorl	%eax, %eax
 6237 127d EB07     		jmp	.L1024
 6238              	.L1025:
 6239 127f 83C001   		addl	$1, %eax
 6240 1282 4883C214 		addq	$20, %rdx
 6241              	.L1024:
 6242 1286 39D8     		cmpl	%ebx, %eax
 6243 1288 7D48     		jge	.L1026
 6244 128a 443B02   		cmpl	(%rdx), %r8d
 6245 128d 75F0     		jne	.L1025
 6246 128f 3B7A04   		cmpl	4(%rdx), %edi
 6247 1292 75EB     		jne	.L1025
 6248 1294 3B7208   		cmpl	8(%rdx), %esi
 6249 1297 75E6     		jne	.L1025
 6250 1299 4898     		cltq
 6251 129b 0FBE5106 		movsbl	6(%rcx), %edx
 6252 129f 31F6     		xorl	%esi, %esi
 6253 12a1 486BC014 		imulq	$20, %rax, %rax
 6254 12a5 8994049C 		movl	%edx, 924(%rsp,%rax)
 6254      030000
 6255 12ac 803931   		cmpb	$49, (%rcx)
 6256 12af 400F94C6 		sete	%sil
 6257 12b3 31D2     		xorl	%edx, %edx
 6258 12b5 80790131 		cmpb	$49, 1(%rcx)
 6259 12b9 0F94C2   		sete	%dl
 6260 12bc 8D3472   		leal	(%rdx,%rsi,2), %esi
 6261 12bf 31D2     		xorl	%edx, %edx
 6262 12c1 80790231 		cmpb	$49, 2(%rcx)
 6263 12c5 0F94C2   		sete	%dl
 6264 12c8 8D1472   		leal	(%rdx,%rsi,2), %edx
 6265 12cb 899404A0 		movl	%edx, 928(%rsp,%rax)
 6265      030000
 6266              	.L1026:
 6267 12d2 BE000000 		movl	$.LC174, %esi
 6267      00
 6268 12d7 BF010000 		movl	$1, %edi
 6268      00
 6269 12dc 31C0     		xorl	%eax, %eax
 6270 12de E8000000 		call	__printf_chk
 6270      00
 6271 12e3 31C0     		xorl	%eax, %eax
 6272 12e5 BE000000 		movl	$.LC175, %esi
 6272      00
 6273 12ea BF010000 		movl	$1, %edi
 6273      00
 6274 12ef E8000000 		call	__printf_chk
 6274      00
 6275 12f4 4585F6   		testl	%r14d, %r14d
 6276 12f7 0F84DFFE 		je	.L1046
 6276      FFFF
 6277              	.L1031:
 6278 12fd 31C0     		xorl	%eax, %eax
 6279 12ff E8000000 		call	write_one_byte_to_uart
 6279      00
 6280 1304 E97DF5FF 		jmp	.L1003
 6280      FF
 6281              	.L1111:
 6282 1309 4889C2   		movq	%rax, %rdx
 6283 130c BE000000 		movl	$.LC176, %esi
 6283      00
 6284 1311 BF010000 		movl	$1, %edi
 6284      00
 6285 1316 31C0     		xorl	%eax, %eax
 6286 1318 E8000000 		call	__printf_chk
 6286      00
 6287 131d E96EF9FF 		jmp	.L1029
 6287      FF
 6288              	.L991:
 6289 1322 4889E9   		movq	%rbp, %rcx
 6290 1325 BA000000 		movl	$.LC153, %edx
 6290      00
 6291 132a E9FEF0FF 		jmp	.L1091
 6291      FF
 6292              	.L993:
 6293 132f 4889E9   		movq	%rbp, %rcx
 6294 1332 BA000000 		movl	$.LC152, %edx
 6294      00
 6295 1337 E9C6F4FF 		jmp	.L1093
 6295      FF
 6296              	.L1023:
 6297 133c 4585F6   		testl	%r14d, %r14d
 6298 133f 0F8555F9 		jne	.L1090
 6298      FFFF
 6299 1345 E998FEFF 		jmp	.L1028
 6299      FF
 6300              	.L983:
 6301 134a BE000000 		movl	$.LC147, %esi
 6301      00
 6302 134f BF010000 		movl	$1, %edi
 6302      00
 6303 1354 31C0     		xorl	%eax, %eax
 6304 1356 E8000000 		call	__printf_chk
 6304      00
 6305              	.L986:
 6306 135b 488B4424 		movq	24(%rsp), %rax
 6306      18
 6307 1360 83786000 		cmpl	$0, 96(%rax)
 6308 1364 0F84C6F4 		je	.L987
 6308      FFFF
 6309 136a BE000000 		movl	$.LC149, %esi
 6309      00
 6310 136f BF010000 		movl	$1, %edi
 6310      00
 6311 1374 31C0     		xorl	%eax, %eax
 6312 1376 E8000000 		call	__printf_chk
 6312      00
 6313 137b E93CFCFF 		jmp	.L1041
 6313      FF
 6314              	.L997:
 6315 1380 4883C101 		addq	$1, %rcx
 6316 1384 4889C2   		movq	%rax, %rdx
 6317 1387 BE000000 		movl	$.LC155, %esi
 6317      00
 6318 138c BF010000 		movl	$1, %edi
 6318      00
 6319 1391 31C0     		xorl	%eax, %eax
 6320 1393 48898C24 		movq	%rcx, 144(%rsp)
 6320      90000000 
 6321 139b E8000000 		call	__printf_chk
 6321      00
 6322 13a0 488BBC24 		movq	144(%rsp), %rdi
 6322      90000000 
 6323 13a8 BE000000 		movl	$.LC2, %esi
 6323      00
 6324 13ad E8000000 		call	fopen
 6324      00
 6325 13b2 4885C0   		testq	%rax, %rax
 6326 13b5 4989C4   		movq	%rax, %r12
 6327 13b8 0F844301 		je	.L1045
 6327      0000
 6328 13be E8000000 		call	sigRegisterHandler
 6328      00
 6329 13c3 488BBC24 		movq	128(%rsp), %rdi
 6329      80000000 
 6330 13cb 488D9424 		leaq	136(%rsp), %rdx
 6330      88000000 
 6331 13d3 4489F6   		movl	%r14d, %esi
 6332 13d6 E8000000 		call	flSelectConduit
 6332      00
 6333 13db 85C0     		testl	%eax, %eax
 6334 13dd 0F85B3FB 		jne	.L1000
 6334      FFFF
 6335 13e3 488BBC24 		movq	128(%rsp), %rdi
 6335      80000000 
 6336 13eb 0FB6DB   		movzbl	%bl, %ebx
 6337 13ee 4C8D8424 		leaq	136(%rsp), %r8
 6337      88000000 
 6338 13f6 31C9     		xorl	%ecx, %ecx
 6339 13f8 BA005800 		movl	$22528, %edx
 6339      00
 6340 13fd 89DE     		movl	%ebx, %esi
 6341 13ff E8000000 		call	flReadChannelAsyncSubmit
 6341      00
 6342 1404 85C0     		testl	%eax, %eax
 6343 1406 0F858AFB 		jne	.L1000
 6343      FFFF
 6344              	.L1001:
 6345 140c 488BBC24 		movq	128(%rsp), %rdi
 6345      80000000 
 6346 1414 4C8D8424 		leaq	136(%rsp), %r8
 6346      88000000 
 6347 141c 31C9     		xorl	%ecx, %ecx
 6348 141e BA005800 		movl	$22528, %edx
 6348      00
 6349 1423 89DE     		movl	%ebx, %esi
 6350 1425 E8000000 		call	flReadChannelAsyncSubmit
 6350      00
 6351 142a 85C0     		testl	%eax, %eax
 6352 142c 0F8564FB 		jne	.L1000
 6352      FFFF
 6353 1432 488D4C24 		leaq	124(%rsp), %rcx
 6353      7C
 6354 1437 488BBC24 		movq	128(%rsp), %rdi
 6354      80000000 
 6355 143f 4C8D8424 		leaq	136(%rsp), %r8
 6355      88000000 
 6356 1447 488DB424 		leaq	152(%rsp), %rsi
 6356      98000000 
 6357 144f 4889CA   		movq	%rcx, %rdx
 6358 1452 E8000000 		call	flReadChannelAsyncAwait
 6358      00
 6359 1457 85C0     		testl	%eax, %eax
 6360 1459 0F8537FB 		jne	.L1000
 6360      FFFF
 6361 145f 8B54247C 		movl	124(%rsp), %edx
 6362 1463 488BBC24 		movq	152(%rsp), %rdi
 6362      98000000 
 6363 146b 4C89E1   		movq	%r12, %rcx
 6364 146e BE010000 		movl	$1, %esi
 6364      00
 6365 1473 E8000000 		call	fwrite
 6365      00
 6366 1478 BE000000 		movl	$.LC130, %esi
 6366      00
 6367 147d BF010000 		movl	$1, %edi
 6367      00
 6368 1482 31C0     		xorl	%eax, %eax
 6369 1484 E8000000 		call	__printf_chk
 6369      00
 6370 1489 E8000000 		call	sigIsRaised
 6370      00
 6371 148e 84C0     		testb	%al, %al
 6372 1490 0F8476FF 		je	.L1001
 6372      FFFF
 6373 1496 BE000000 		movl	$.LC156, %esi
 6373      00
 6374 149b BF010000 		movl	$1, %edi
 6374      00
 6375 14a0 31C0     		xorl	%eax, %eax
 6376 14a2 E8000000 		call	__printf_chk
 6376      00
 6377 14a7 488D4C24 		leaq	124(%rsp), %rcx
 6377      7C
 6378 14ac 488BBC24 		movq	128(%rsp), %rdi
 6378      80000000 
 6379 14b4 4C8D8424 		leaq	136(%rsp), %r8
 6379      88000000 
 6380 14bc 488DB424 		leaq	152(%rsp), %rsi
 6380      98000000 
 6381 14c4 4889CA   		movq	%rcx, %rdx
 6382 14c7 E8000000 		call	flReadChannelAsyncAwait
 6382      00
 6383 14cc 85C0     		testl	%eax, %eax
 6384 14ce 0F85C2FA 		jne	.L1000
 6384      FFFF
 6385 14d4 8B54247C 		movl	124(%rsp), %edx
 6386 14d8 488BBC24 		movq	152(%rsp), %rdi
 6386      98000000 
 6387 14e0 4C89E1   		movq	%r12, %rcx
 6388 14e3 BE010000 		movl	$1, %esi
 6388      00
 6389 14e8 E8000000 		call	fwrite
 6389      00
 6390 14ed 4C89E7   		movq	%r12, %rdi
 6391 14f0 E8000000 		call	fclose
 6391      00
 6392 14f5 E966F3FF 		jmp	.L996
 6392      FF
 6393              	.L1088:
 6394 14fa 89C3     		movl	%eax, %ebx
 6395 14fc E91AEEFF 		jmp	.L953
 6395      FF
 6396              	.L1045:
 6397 1501 BB0B0000 		movl	$11, %ebx
 6397      00
 6398 1506 31ED     		xorl	%ebp, %ebp
 6399 1508 E90EEEFF 		jmp	.L953
 6399      FF
 6400              	.L1084:
 6401 150d 4889E9   		movq	%rbp, %rcx
 6402 1510 BA000000 		movl	$.LC180, %edx
 6402      00
 6403 1515 E913EFFF 		jmp	.L1091
 6403      FF
 6404              	.L1033:
 6405 151a 4889E9   		movq	%rbp, %rcx
 6406 151d BA000000 		movl	$.LC181, %edx
 6406      00
 6407 1522 E906EFFF 		jmp	.L1091
 6407      FF
 6408              		.cfi_endproc
 6409              	.LFE83:
 6411              		.section	.text.unlikely
 6412              	.LCOLDE183:
 6413              		.section	.text.startup
 6414              	.LHOTE183:
 6415              		.globl	mm
 6416              		.section	.rodata.str1.1
 6417              	.LC184:
 6418 0453 30313233 		.string	"0123456789abcdef"
 6418      34353637 
 6418      38396162 
 6418      63646566 
 6418      00
 6419              		.data
 6420              		.align 8
 6423              	mm:
 6424 0000 00000000 		.quad	.LC184
 6424      00000000 
 6425              		.section	.rodata.str1.1
 6426              	.LC185:
 6427 0464 30303031 		.string	"0001"
 6427      00
 6428              	.LC186:
 6429 0469 30303130 		.string	"0010"
 6429      00
 6430              	.LC187:
 6431 046e 30303131 		.string	"0011"
 6431      00
 6432              	.LC188:
 6433 0473 30313030 		.string	"0100"
 6433      00
 6434              	.LC189:
 6435 0478 30313031 		.string	"0101"
 6435      00
 6436              	.LC190:
 6437 047d 30313130 		.string	"0110"
 6437      00
 6438              	.LC191:
 6439 0482 30313131 		.string	"0111"
 6439      00
 6440              	.LC192:
 6441 0487 31303030 		.string	"1000"
 6441      00
 6442              	.LC193:
 6443 048c 31303031 		.string	"1001"
 6443      00
 6444              	.LC194:
 6445 0491 58585858 		.string	"XXXX"
 6445      00
 6446              	.LC195:
 6447 0496 31303130 		.string	"1010"
 6447      00
 6448              	.LC196:
 6449 049b 31303131 		.string	"1011"
 6449      00
 6450              	.LC197:
 6451 04a0 31313030 		.string	"1100"
 6451      00
 6452              	.LC198:
 6453 04a5 31313031 		.string	"1101"
 6453      00
 6454              	.LC199:
 6455 04aa 31313130 		.string	"1110"
 6455      00
 6456              		.section	.rodata
 6457              		.align 32
 6460              	nibbles:
 6461 0000 00000000 		.quad	.LC52
 6461      00000000 
 6462 0008 00000000 		.quad	.LC185
 6462      00000000 
 6463 0010 00000000 		.quad	.LC186
 6463      00000000 
 6464 0018 00000000 		.quad	.LC187
 6464      00000000 
 6465 0020 00000000 		.quad	.LC188
 6465      00000000 
 6466 0028 00000000 		.quad	.LC189
 6466      00000000 
 6467 0030 00000000 		.quad	.LC190
 6467      00000000 
 6468 0038 00000000 		.quad	.LC191
 6468      00000000 
 6469 0040 00000000 		.quad	.LC192
 6469      00000000 
 6470 0048 00000000 		.quad	.LC193
 6470      00000000 
 6471 0050 00000000 		.quad	.LC194
 6471      00000000 
 6472 0058 00000000 		.quad	.LC194
 6472      00000000 
 6473 0060 00000000 		.quad	.LC194
 6473      00000000 
 6474 0068 00000000 		.quad	.LC194
 6474      00000000 
 6475 0070 00000000 		.quad	.LC194
 6475      00000000 
 6476 0078 00000000 		.quad	.LC194
 6476      00000000 
 6477 0080 00000000 		.quad	.LC194
 6477      00000000 
 6478 0088 00000000 		.quad	.LC195
 6478      00000000 
 6479 0090 00000000 		.quad	.LC196
 6479      00000000 
 6480 0098 00000000 		.quad	.LC197
 6480      00000000 
 6481 00a0 00000000 		.quad	.LC198
 6481      00000000 
 6482 00a8 00000000 		.quad	.LC199
 6482      00000000 
 6483 00b0 00000000 		.quad	.LC54
 6483      00000000 
 6484              		.comm	out,1,1
 6485              		.section	.rodata.str1.1
 6486              	.LC200:
 6487 04af 556E7061 		.string	"Unparseable hex number"
 6487      72736561 
 6487      626C6520 
 6487      68657820 
 6487      6E756D62 
 6488              	.LC201:
 6489 04c6 4368616E 		.string	"Channel out of range"
 6489      6E656C20 
 6489      6F757420 
 6489      6F662072 
 6489      616E6765 
 6490              	.LC202:
 6491 04db 436F6E64 		.string	"Conduit out of range"
 6491      75697420 
 6491      6F757420 
 6491      6F662072 
 6491      616E6765 
 6492              	.LC203:
 6493 04f0 496C6C65 		.string	"Illegal character"
 6493      67616C20 
 6493      63686172 
 6493      61637465 
 6493      7200
 6494              	.LC204:
 6495 0502 556E7465 		.string	"Unterminated string"
 6495      726D696E 
 6495      61746564 
 6495      20737472 
 6495      696E6700 
 6496              	.LC205:
 6497 0516 4E6F206D 		.string	"No memory"
 6497      656D6F72 
 6497      7900
 6498              	.LC206:
 6499 0520 456D7074 		.string	"Empty string"
 6499      79207374 
 6499      72696E67 
 6499      00
 6500              	.LC207:
 6501 052d 4F646420 		.string	"Odd number of digits"
 6501      6E756D62 
 6501      6572206F 
 6501      66206469 
 6501      67697473 
 6502              	.LC208:
 6503 0542 43616E6E 		.string	"Cannot load file"
 6503      6F74206C 
 6503      6F616420 
 6503      66696C65 
 6503      00
 6504              	.LC209:
 6505 0553 43616E6E 		.string	"Cannot save file"
 6505      6F742073 
 6505      61766520 
 6505      66696C65 
 6505      00
 6506              	.LC210:
 6507 0564 42616420 		.string	"Bad arguments"
 6507      61726775 
 6507      6D656E74 
 6507      7300
 6508              		.section	.rodata
 6509 00b8 00000000 		.align 32
 6509      00000000 
 6512              	errMessages:
 6513 00c0 00000000 		.quad	0
 6513      00000000 
 6514 00c8 00000000 		.quad	0
 6514      00000000 
 6515 00d0 00000000 		.quad	.LC200
 6515      00000000 
 6516 00d8 00000000 		.quad	.LC201
 6516      00000000 
 6517 00e0 00000000 		.quad	.LC202
 6517      00000000 
 6518 00e8 00000000 		.quad	.LC203
 6518      00000000 
 6519 00f0 00000000 		.quad	.LC204
 6519      00000000 
 6520 00f8 00000000 		.quad	.LC205
 6520      00000000 
 6521 0100 00000000 		.quad	.LC206
 6521      00000000 
 6522 0108 00000000 		.quad	.LC207
 6522      00000000 
 6523 0110 00000000 		.quad	.LC208
 6523      00000000 
 6524 0118 00000000 		.quad	.LC209
 6524      00000000 
 6525 0120 00000000 		.quad	.LC210
 6525      00000000 
 6526              		.comm	fd,4,4
 6527              		.globl	portname
 6528              		.section	.rodata.str1.1
 6529              	.LC211:
 6530 0572 2F646576 		.string	"/dev/ttyXRUSB0"
 6530      2F747479 
 6530      58525553 
 6530      423000
 6531              		.data
 6532              		.align 8
 6535              	portname:
 6536 0008 00000000 		.quad	.LC211
 6536      00000000 
 6537              		.local	enableBenchmarking
 6538              		.comm	enableBenchmarking,1,1
 6539              		.local	ptr
 6540              		.comm	ptr,8,8
 6541              		.globl	ack2
 6542              		.section	.rodata.str1.8
 6543 0bfc 00000000 		.align 8
 6544              	.LC212:
 6545 0c00 30303030 		.string	"00001111000011110000111100001111"
 6545      31313131 
 6545      30303030 
 6545      31313131 
 6545      30303030 
 6546              		.data
 6547              		.align 8
 6550              	ack2:
 6551 0010 00000000 		.quad	.LC212
 6551      00000000 
 6552              		.globl	ack1
 6553              		.section	.rodata.str1.8
 6554 0c21 00000000 		.align 8
 6554      000000
 6555              	.LC213:
 6556 0c28 31313131 		.string	"11110000111100001111000011110000"
 6556      30303030 
 6556      31313131 
 6556      30303030 
 6556      31313131 
 6557              		.data
 6558              		.align 8
 6561              	ack1:
 6562 0018 00000000 		.quad	.LC213
 6562      00000000 
 6563              		.comm	line1,100,32
 6564              		.globl	key
 6565              		.section	.rodata.str1.8
 6566 0c49 00000000 		.align 8
 6566      000000
 6567              	.LC214:
 6568 0c50 31313030 		.string	"11001100110011001100110011000001"
 6568      31313030 
 6568      31313030 
 6568      31313030 
 6568      31313030 
 6569              		.data
 6570              		.align 8
 6573              	key:
 6574 0020 00000000 		.quad	.LC214
 6574      00000000 
 6575              		.section	.rodata.cst8,"aM",@progbits,8
 6576              		.align 8
 6577              	.LC4:
 6578 0000 00000000 		.long	0
 6579 0004 80842E41 		.long	1093567616
 6580              		.align 8
 6581              	.LC5:
 6582 0008 00000000 		.long	0
 6583 000c 00003041 		.long	1093664768
 6584              		.align 8
 6585              	.LC14:
 6586 0010 00000000 		.long	0
 6587 0014 00408F40 		.long	1083129856
 6588              		.section	.rodata.cst16,"aM",@progbits,16
 6589              		.align 16
 6590              	.LC49:
 6591 0000 30       		.byte	48
 6592 0001 30       		.byte	48
 6593 0002 30       		.byte	48
 6594 0003 30       		.byte	48
 6595 0004 30       		.byte	48
 6596 0005 30       		.byte	48
 6597 0006 30       		.byte	48
 6598 0007 30       		.byte	48
 6599 0008 30       		.byte	48
 6600 0009 30       		.byte	48
 6601 000a 30       		.byte	48
 6602 000b 30       		.byte	48
 6603 000c 30       		.byte	48
 6604 000d 30       		.byte	48
 6605 000e 30       		.byte	48
 6606 000f 30       		.byte	48
 6607              		.align 16
 6608              	.LC50:
 6609 0010 01       		.byte	1
 6610 0011 01       		.byte	1
 6611 0012 01       		.byte	1
 6612 0013 01       		.byte	1
 6613 0014 01       		.byte	1
 6614 0015 01       		.byte	1
 6615 0016 01       		.byte	1
 6616 0017 01       		.byte	1
 6617 0018 01       		.byte	1
 6618 0019 01       		.byte	1
 6619 001a 01       		.byte	1
 6620 001b 01       		.byte	1
 6621 001c 01       		.byte	1
 6622 001d 01       		.byte	1
 6623 001e 01       		.byte	1
 6624 001f 01       		.byte	1
 6625              		.align 16
 6626              	.LC53:
 6627 0020 31       		.byte	49
 6628 0021 31       		.byte	49
 6629 0022 31       		.byte	49
 6630 0023 31       		.byte	49
 6631 0024 31       		.byte	49
 6632 0025 31       		.byte	49
 6633 0026 31       		.byte	49
 6634 0027 31       		.byte	49
 6635 0028 31       		.byte	49
 6636 0029 31       		.byte	49
 6637 002a 31       		.byte	49
 6638 002b 31       		.byte	49
 6639 002c 31       		.byte	49
 6640 002d 31       		.byte	49
 6641 002e 31       		.byte	49
 6642 002f 31       		.byte	49
 6643              		.section	.rodata.cst8
 6644              		.align 8
 6645              	.LC170:
 6646 0018 00000000 		.long	0
 6647 001c 00005940 		.long	1079574528
 6648              		.align 8
 6649              	.LC177:
 6650 0020 00000000 		.long	0
 6651 0024 00003440 		.long	1077149696
 6652              		.ident	"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609"
 6653              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cce23jfZ.s:9      .text.unlikely:0000000000000000 doWrite
     /tmp/cce23jfZ.s:145    .text.unlikely:00000000000000ff parseLine
     /tmp/cce23jfZ.s:6540   .bss:0000000000000008 ptr
                             .bss:0000000000000000 enableBenchmarking
     /tmp/cce23jfZ.s:6512   .rodata:00000000000000c0 errMessages
                            *COM*:0000000000000001 out
     /tmp/cce23jfZ.s:960    .text:0000000000000000 timediff
     /tmp/cce23jfZ.s:997    .text:0000000000000030 save_to_file
     /tmp/cce23jfZ.s:1083   .text:00000000000000d0 set_interface_attribs
     /tmp/cce23jfZ.s:1202   .text:00000000000001e0 set_blocking
     /tmp/cce23jfZ.s:1306   .text:00000000000002a0 read_one_byte_from_uart
                            *COM*:0000000000000004 fd
     /tmp/cce23jfZ.s:6535   .data:0000000000000008 portname
     /tmp/cce23jfZ.s:1479   .text:0000000000000470 write_one_byte_to_uart
     /tmp/cce23jfZ.s:1540   .text:0000000000000510 read_table
     /tmp/cce23jfZ.s:1641   .text:00000000000005c0 boolToHex
     /tmp/cce23jfZ.s:6423   .data:0000000000000000 mm
     /tmp/cce23jfZ.s:1727   .text:0000000000000680 get_coordinate
     /tmp/cce23jfZ.s:1813   .text:0000000000000720 func
     /tmp/cce23jfZ.s:2060   .text:0000000000000a00 xor
     /tmp/cce23jfZ.s:2081   .text:0000000000000a10 and
     /tmp/cce23jfZ.s:2109   .text:0000000000000a30 decrypt
     /tmp/cce23jfZ.s:2877   .text:0000000000001450 encrypt
     /tmp/cce23jfZ.s:3515   .text:0000000000001cd0 read_byte
     /tmp/cce23jfZ.s:3595   .text:0000000000001d80 write_4byte_to_board
     /tmp/cce23jfZ.s:6573   .data:0000000000000020 key
     /tmp/cce23jfZ.s:3827   .text:0000000000002030 read_4byte_from_fpga
     /tmp/cce23jfZ.s:4094   .text:00000000000022d0 read_1byte_from_fpgalink
     /tmp/cce23jfZ.s:4382   .text:0000000000002590 receive_ack
     /tmp/cce23jfZ.s:6561   .data:0000000000000018 ack1
     /tmp/cce23jfZ.s:4672   .text:0000000000002870 send_ack
     /tmp/cce23jfZ.s:6550   .data:0000000000000010 ack2
     /tmp/cce23jfZ.s:4791   .text:00000000000029a0 wtt
     /tmp/cce23jfZ.s:5151   .text.startup:0000000000000000 main
     /tmp/cce23jfZ.s:6460   .rodata:0000000000000000 nibbles
                            *COM*:0000000000000064 line1
     /tmp/cce23jfZ.s:6577   .rodata.cst8:0000000000000000 .LC4
     /tmp/cce23jfZ.s:6585   .rodata.cst8:0000000000000010 .LC14
     /tmp/cce23jfZ.s:6590   .rodata.cst16:0000000000000000 .LC49
     /tmp/cce23jfZ.s:6608   .rodata.cst16:0000000000000010 .LC50
     /tmp/cce23jfZ.s:6626   .rodata.cst16:0000000000000020 .LC53
     /tmp/cce23jfZ.s:6581   .rodata.cst8:0000000000000008 .LC5
     /tmp/cce23jfZ.s:6649   .rodata.cst8:0000000000000020 .LC177
     /tmp/cce23jfZ.s:6645   .rodata.cst8:0000000000000018 .LC170

UNDEFINED SYMBOLS
fread
flWriteChannelAsync
errPrefix
flAwaitAsyncWrites
__stack_chk_fail
bufInitialise
__errno_location
strtoul
malloc
strncpy
fopen
free
gettimeofday
flReadChannelAsyncSubmit
flReadChannelAsyncAwait
fwrite
__printf_chk
fclose
flWriteChannel
flSelectConduit
dump
bufDestroy
stderr
__fprintf_chk
bufAppendConst
flReadChannel
__strcat_chk
tcgetattr
cfsetospeed
cfsetispeed
tcsetattr
read
strerror
__isoc99_scanf
write
exit
_IO_getc
calloc
sleep
usleep
open
arg_str0
arg_str1
arg_uint0
arg_lit0
arg_end
arg_nullcheck
flClose
flFreeError
arg_parse
stdout
arg_print_syntax
arg_print_glossary
arg_print_errors
flInitialise
flOpen
flLoadCustomFirmware
flSleep
fflush
flIsDeviceAvailable
flGetFirmwareVersion
flGetFirmwareID
flFlashStandardFirmware
flIsNeroCapable
flIsCommCapable
jtagScanChain
flLoadStandardFirmware
flFlashCustomFirmware
flIsFPGARunning
clock
flResetToggle
flMultiBitPortAccess
__sprintf_chk
flSaveFirmware
flProgram
readline
add_history
sigRegisterHandler
sigIsRaised
