   1              		.file	"main.c"
   2              		.section	.rodata.str1.1,"aMS",@progbits,1
   3              	.LC0:
   4 0000 646F5772 		.string	"doWrite()"
   4      69746528 
   4      2900
   5              		.section	.text.unlikely,"ax",@progbits
   6              	.LCOLDB1:
   7              	.LHOTB1:
   9              	doWrite:
  10              	.LFB66:
  11              		.cfi_startproc
  12 0000 4157     		pushq	%r15
  13              		.cfi_def_cfa_offset 16
  14              		.cfi_offset 15, -16
  15 0002 4156     		pushq	%r14
  16              		.cfi_def_cfa_offset 24
  17              		.cfi_offset 14, -24
  18 0004 4D89C7   		movq	%r8, %r15
  19 0007 4155     		pushq	%r13
  20              		.cfi_def_cfa_offset 32
  21              		.cfi_offset 13, -32
  22 0009 4154     		pushq	%r12
  23              		.cfi_def_cfa_offset 40
  24              		.cfi_offset 12, -40
  25 000b 4989FD   		movq	%rdi, %r13
  26 000e 55       		pushq	%rbp
  27              		.cfi_def_cfa_offset 48
  28              		.cfi_offset 6, -48
  29 000f 53       		pushq	%rbx
  30              		.cfi_def_cfa_offset 56
  31              		.cfi_offset 3, -56
  32 0010 4989CE   		movq	%rcx, %r14
  33 0013 4D89CC   		movq	%r9, %r12
  34 0016 31DB     		xorl	%ebx, %ebx
  35 0018 31ED     		xorl	%ebp, %ebp
  36 001a 4881EC38 		subq	$65592, %rsp
  36      000100
  37              		.cfi_def_cfa_offset 65648
  38 0021 64488B04 		movq	%fs:40, %rax
  38      25280000 
  38      00
  39 002a 48898424 		movq	%rax, 65576(%rsp)
  39      28000100 
  40 0032 31C0     		xorl	%eax, %eax
  41 0034 400FB6C6 		movzbl	%sil, %eax
  42 0038 48895424 		movq	%rdx, 8(%rsp)
  42      08
  43 003d 89442414 		movl	%eax, 20(%rsp)
  44              	.L7:
  45 0041 488B4C24 		movq	8(%rsp), %rcx
  45      08
  46 0046 488D7C24 		leaq	32(%rsp), %rdi
  46      20
  47 004b BAFBFF00 		movl	$65531, %edx
  47      00
  48 0050 BE010000 		movl	$1, %esi
  48      00
  49 0055 E8000000 		call	fread
  49      00
  50 005a 4885C0   		testq	%rax, %rax
  51 005d 7460     		je	.L2
  52 005f 8B742414 		movl	20(%rsp), %esi
  53 0063 488D4C24 		leaq	32(%rsp), %rcx
  53      20
  54 0068 4D89E0   		movq	%r12, %r8
  55 006b 4889C2   		movq	%rax, %rdx
  56 006e 4C89EF   		movq	%r13, %rdi
  57 0071 4801C3   		addq	%rax, %rbx
  58 0074 48894424 		movq	%rax, 24(%rsp)
  58      18
  59 0079 E8000000 		call	flWriteChannelAsync
  59      00
  60 007e 85C0     		testl	%eax, %eax
  61 0080 7510     		jne	.L3
  62 0082 4C8B4C24 		movq	24(%rsp), %r9
  62      18
  63 0087 488D4424 		leaq	32(%rsp), %rax
  63      20
  64 008c 4A8D1408 		leaq	(%rax,%r9), %rdx
  65 0090 EB14     		jmp	.L4
  66              	.L3:
  67 0092 BE000000 		movl	$.LC0, %esi
  67      00
  68 0097 4C89E7   		movq	%r12, %rdi
  69 009a E8000000 		call	errPrefix
  69      00
  70 009f B8010000 		movl	$1, %eax
  70      00
  71 00a4 EB2F     		jmp	.L5
  72              	.L4:
  73 00a6 4839D0   		cmpq	%rdx, %rax
  74 00a9 740B     		je	.L16
  75 00ab 48FFC0   		incq	%rax
  76 00ae 0FB648FF 		movzbl	-1(%rax), %ecx
  77 00b2 01CD     		addl	%ecx, %ebp
  78 00b4 EBF0     		jmp	.L4
  79              	.L16:
  80 00b6 4981F9FB 		cmpq	$65531, %r9
  80      FF0000
  81 00bd 7482     		je	.L7
  82              	.L2:
  83 00bf 4C89E6   		movq	%r12, %rsi
  84 00c2 4C89EF   		movq	%r13, %rdi
  85 00c5 E8000000 		call	flAwaitAsyncWrites
  85      00
  86 00ca 85C0     		testl	%eax, %eax
  87 00cc 75C4     		jne	.L3
  88 00ce 6641892F 		movw	%bp, (%r15)
  89 00d2 49891E   		movq	%rbx, (%r14)
  90              	.L5:
  91 00d5 488B9C24 		movq	65576(%rsp), %rbx
  91      28000100 
  92 00dd 6448331C 		xorq	%fs:40, %rbx
  92      25280000 
  92      00
  93 00e6 7405     		je	.L8
  94 00e8 E8000000 		call	__stack_chk_fail
  94      00
  95              	.L8:
  96 00ed 4881C438 		addq	$65592, %rsp
  96      000100
  97              		.cfi_def_cfa_offset 56
  98 00f4 5B       		popq	%rbx
  99              		.cfi_def_cfa_offset 48
 100 00f5 5D       		popq	%rbp
 101              		.cfi_def_cfa_offset 40
 102 00f6 415C     		popq	%r12
 103              		.cfi_def_cfa_offset 32
 104 00f8 415D     		popq	%r13
 105              		.cfi_def_cfa_offset 24
 106 00fa 415E     		popq	%r14
 107              		.cfi_def_cfa_offset 16
 108 00fc 415F     		popq	%r15
 109              		.cfi_def_cfa_offset 8
 110 00fe C3       		ret
 111              		.cfi_endproc
 112              	.LFE66:
 114              	.LCOLDE1:
 115              	.LHOTE1:
 116              		.section	.rodata.str1.1
 117              	.LC2:
 118 000a 776200   		.string	"wb"
 119              	.LC3:
 120 000d 646F5265 		.string	"doRead()"
 120      61642829 
 120      00
 121              		.section	.rodata.str1.8,"aMS",@progbits,1
 122              		.align 8
 123              	.LC6:
 124 0000 52656164 		.string	"Read %d bytes (checksum 0x%04X) from channel %d at %f MiB/s\n"
 124      20256420 
 124      62797465 
 124      73202863 
 124      6865636B 
 125              		.section	.rodata.str1.1
 126              	.LC7:
 127 0016 726200   		.string	"rb"
 128              		.section	.rodata.str1.8
 129 003d 000000   		.align 8
 130              	.LC8:
 131 0040 57726F74 		.string	"Wrote %zu bytes (checksum 0x%04X) to channel %lu at %f MiB/s\n"
 131      6520257A 
 131      75206279 
 131      74657320 
 131      28636865 
 132              		.section	.rodata.str1.1
 133              	.LC9:
 134 0019 20616674 		.string	" after dump \n "
 134      65722064 
 134      756D7020 
 134      0A2000
 135              	.LC10:
 136 0028 25732061 		.string	"%s at column %d\n  %s\n  "
 136      7420636F 
 136      6C756D6E 
 136      2025640A 
 136      20202573 
 137              	.LC11:
 138 0040 2000     		.string	" "
 139              	.LC12:
 140 0042 5E0A00   		.string	"^\n"
 141              		.section	.text.unlikely
 142              	.LCOLDB13:
 143              	.LHOTB13:
 145              	parseLine:
 146              	.LFB67:
 147              		.cfi_startproc
 148 00ff 4157     		pushq	%r15
 149              		.cfi_def_cfa_offset 16
 150              		.cfi_offset 15, -16
 151 0101 4156     		pushq	%r14
 152              		.cfi_def_cfa_offset 24
 153              		.cfi_offset 14, -24
 154 0103 B9080000 		movl	$8, %ecx
 154      00
 155 0108 4155     		pushq	%r13
 156              		.cfi_def_cfa_offset 32
 157              		.cfi_offset 13, -32
 158 010a 4154     		pushq	%r12
 159              		.cfi_def_cfa_offset 40
 160              		.cfi_offset 12, -40
 161 010c 55       		pushq	%rbp
 162              		.cfi_def_cfa_offset 48
 163              		.cfi_offset 6, -48
 164 010d 53       		pushq	%rbx
 165              		.cfi_def_cfa_offset 56
 166              		.cfi_offset 3, -56
 167 010e 4889D3   		movq	%rdx, %rbx
 168 0111 4881EC98 		subq	$152, %rsp
 168      000000
 169              		.cfi_def_cfa_offset 208
 170 0118 64488B04 		movq	%fs:40, %rax
 170      25280000 
 170      00
 171 0121 48898424 		movq	%rax, 136(%rsp)
 171      88000000 
 172 0129 31C0     		xorl	%eax, %eax
 173 012b 48893C24 		movq	%rdi, (%rsp)
 174 012f 488D7C24 		leaq	96(%rsp), %rdi
 174      60
 175 0134 48897424 		movq	%rsi, 16(%rsp)
 175      10
 176 0139 BE000400 		movl	$1024, %esi
 176      00
 177 013e F3AB     		rep stosl
 178 0140 488D7C24 		leaq	96(%rsp), %rdi
 178      60
 179 0145 4889D1   		movq	%rdx, %rcx
 180 0148 31D2     		xorl	%edx, %edx
 181 014a E8000000 		call	bufInitialise
 181      00
 182 014f 85C0     		testl	%eax, %eax
 183 0151 0F85C708 		jne	.L97
 183      0000
 184 0157 488B4424 		movq	16(%rsp), %rax
 184      10
 185 015c 48890500 		movq	%rax, ptr(%rip)
 185      000000
 186              	.L19:
 187 0163 488B3D00 		movq	ptr(%rip), %rdi
 187      000000
 188 016a 8A07     		movb	(%rdi), %al
 189 016c 3C3B     		cmpb	$59, %al
 190 016e 750C     		jne	.L158
 191 0170 48FFC7   		incq	%rdi
 192 0173 48893D00 		movq	%rdi, ptr(%rip)
 192      000000
 193 017a EBE7     		jmp	.L19
 194              	.L158:
 195 017c 3C72     		cmpb	$114, %al
 196 017e 7415     		je	.L21
 197 0180 3C77     		cmpb	$119, %al
 198 0182 0F847D03 		je	.L22
 198      0000
 199 0188 3C2B     		cmpb	$43, %al
 200 018a 0F859F08 		jne	.L118
 200      0000
 201 0190 E9620700 		jmp	.L159
 201      00
 202              	.L21:
 203 0195 488D6F01 		leaq	1(%rdi), %rbp
 204 0199 48892D00 		movq	%rbp, ptr(%rip)
 204      000000
 205 01a0 E8000000 		call	__errno_location
 205      00
 206 01a5 488D7424 		leaq	48(%rsp), %rsi
 206      30
 207 01aa 4989C7   		movq	%rax, %r15
 208 01ad C7000000 		movl	$0, (%rax)
 208      0000
 209 01b3 BA100000 		movl	$16, %edx
 209      00
 210 01b8 4889EF   		movq	%rbp, %rdi
 211 01bb E8000000 		call	strtoul
 211      00
 212 01c0 41833F00 		cmpl	$0, (%r15)
 213 01c4 4989C6   		movq	%rax, %r14
 214 01c7 7411     		je	.L24
 215              	.L28:
 216 01c9 4531ED   		xorl	%r13d, %r13d
 217 01cc 4531FF   		xorl	%r15d, %r15d
 218 01cf 41BE0200 		movl	$2, %r14d
 218      0000
 219 01d5 E9370500 		jmp	.L63
 219      00
 220              	.L24:
 221 01da 83F87F   		cmpl	$127, %eax
 222 01dd 0F870603 		ja	.L99
 222      0000
 223 01e3 488B7C24 		movq	48(%rsp), %rdi
 223      30
 224 01e8 8A07     		movb	(%rdi), %al
 225 01ea 48893D00 		movq	%rdi, ptr(%rip)
 225      000000
 226 01f1 A8DF     		testb	$-33, %al
 227 01f3 7415     		je	.L26
 228 01f5 3C3B     		cmpb	$59, %al
 229 01f7 7411     		je	.L26
 230              	.L29:
 231 01f9 4531ED   		xorl	%r13d, %r13d
 232 01fc 4531FF   		xorl	%r15d, %r15d
 233 01ff 41BE0500 		movl	$5, %r14d
 233      0000
 234 0205 E9070500 		jmp	.L63
 234      00
 235              	.L26:
 236 020a 3C20     		cmpb	$32, %al
 237 020c 41BD0100 		movl	$1, %r13d
 237      0000
 238 0212 0F85E308 		jne	.L27
 238      0000
 239 0218 488D7424 		leaq	48(%rsp), %rsi
 239      30
 240 021d 48FFC7   		incq	%rdi
 241 0220 41C70700 		movl	$0, (%r15)
 241      000000
 242 0227 BA100000 		movl	$16, %edx
 242      00
 243 022c 48893D00 		movq	%rdi, ptr(%rip)
 243      000000
 244 0233 E8000000 		call	strtoul
 244      00
 245 0238 41833F00 		cmpl	$0, (%r15)
 246 023c 4989C4   		movq	%rax, %r12
 247 023f 4189C5   		movl	%eax, %r13d
 248 0242 7585     		jne	.L28
 249 0244 488B7424 		movq	48(%rsp), %rsi
 249      30
 250 0249 8A06     		movb	(%rsi), %al
 251 024b 48893500 		movq	%rsi, ptr(%rip)
 251      000000
 252 0252 A8DF     		testb	$-33, %al
 253 0254 7404     		je	.L119
 254 0256 3C3B     		cmpb	$59, %al
 255 0258 759F     		jne	.L29
 256              	.L119:
 257 025a 3C20     		cmpb	$32, %al
 258 025c 0F859908 		jne	.L27
 258      0000
 259 0262 488D4601 		leaq	1(%rsi), %rax
 260 0266 48890500 		movq	%rax, ptr(%rip)
 260      000000
 261 026d 8A4601   		movb	1(%rsi), %al
 262 0270 3C22     		cmpb	$34, %al
 263 0272 7404     		je	.L120
 264 0274 3C27     		cmpb	$39, %al
 265 0276 7581     		jne	.L29
 266              	.L120:
 267 0278 4C8D6E02 		leaq	2(%rsi), %r13
 268 027c 4C892D00 		movq	%r13, ptr(%rip)
 268      000000
 269 0283 4C89ED   		movq	%r13, %rbp
 270              	.L32:
 271 0286 8A5500   		movb	0(%rbp), %dl
 272 0289 38D0     		cmpb	%dl, %al
 273 028b 740D     		je	.L33
 274 028d 84D2     		testb	%dl, %dl
 275 028f 0F844A04 		je	.L108
 275      0000
 276 0295 48FFC5   		incq	%rbp
 277 0298 EBEC     		jmp	.L32
 278              	.L33:
 279 029a 84C0     		testb	%al, %al
 280 029c 0F843D04 		je	.L108
 280      0000
 281 02a2 4889E8   		movq	%rbp, %rax
 282 02a5 4C29E8   		subq	%r13, %rax
 283 02a8 488D7801 		leaq	1(%rax), %rdi
 284 02ac 48894424 		movq	%rax, 8(%rsp)
 284      08
 285 02b1 E8000000 		call	malloc
 285      00
 286 02b6 4885C0   		testq	%rax, %rax
 287 02b9 4989C7   		movq	%rax, %r15
 288 02bc 0F842B04 		je	.L109
 288      0000
 289 02c2 4C39ED   		cmpq	%r13, %rbp
 290 02c5 0F842D04 		je	.L110
 290      0000
 291 02cb 488B5424 		movq	8(%rsp), %rdx
 291      08
 292 02d0 4C89EE   		movq	%r13, %rsi
 293 02d3 4889C7   		movq	%rax, %rdi
 294 02d6 E8000000 		call	strncpy
 294      00
 295 02db 488B4424 		movq	8(%rsp), %rax
 295      08
 296 02e0 488D4D01 		leaq	1(%rbp), %rcx
 297 02e4 BE000000 		movl	$.LC2, %esi
 297      00
 298 02e9 4C89FF   		movq	%r15, %rdi
 299 02ec 48890D00 		movq	%rcx, ptr(%rip)
 299      000000
 300 02f3 41C60407 		movb	$0, (%r15,%rax)
 300      00
 301 02f8 E8000000 		call	fopen
 301      00
 302 02fd 4885C0   		testq	%rax, %rax
 303 0300 4989C5   		movq	%rax, %r13
 304 0303 0F84F101 		je	.L104
 304      0000
 305 0309 4C89FF   		movq	%r15, %rdi
 306 030c BD000001 		movl	$65536, %ebp
 306      00
 307 0311 E8000000 		call	free
 307      00
 308 0316 488D7C24 		leaq	64(%rsp), %rdi
 308      40
 309 031b 31F6     		xorl	%esi, %esi
 310 031d E8000000 		call	gettimeofday
 310      00
 311 0322 4181FC00 		cmpl	$65536, %r12d
 311      000100
 312 0329 488B3C24 		movq	(%rsp), %rdi
 313 032d 410FB6C6 		movzbl	%r14b, %eax
 314 0331 410F46EC 		cmovbe	%r12d, %ebp
 315 0335 4989D8   		movq	%rbx, %r8
 316 0338 31C9     		xorl	%ecx, %ecx
 317 033a 89EA     		movl	%ebp, %edx
 318 033c 89C6     		movl	%eax, %esi
 319 033e 89442408 		movl	%eax, 8(%rsp)
 320 0342 E8000000 		call	flReadChannelAsyncSubmit
 320      00
 321 0347 85C0     		testl	%eax, %eax
 322 0349 741A     		je	.L35
 323              	.L38:
 324 034b BE000000 		movl	$.LC3, %esi
 324      00
 325 0350 4889DF   		movq	%rbx, %rdi
 326 0353 31ED     		xorl	%ebp, %ebp
 327 0355 E8000000 		call	errPrefix
 327      00
 328 035a 41BF0100 		movl	$1, %r15d
 328      0000
 329 0360 E90C0100 		jmp	.L36
 329      00
 330              	.L35:
 331 0365 4589E7   		movl	%r12d, %r15d
 332 0368 4129EF   		subl	%ebp, %r15d
 333 036b 31ED     		xorl	%ebp, %ebp
 334              	.L37:
 335 036d 4585FF   		testl	%r15d, %r15d
 336 0370 0F84A300 		je	.L160
 336      0000
 337 0376 4181FF00 		cmpl	$65536, %r15d
 337      000100
 338 037d 41B90000 		movl	$65536, %r9d
 338      0100
 339 0383 8B742408 		movl	8(%rsp), %esi
 340 0387 488B3C24 		movq	(%rsp), %rdi
 341 038b 450F46CF 		cmovbe	%r15d, %r9d
 342 038f 4989D8   		movq	%rbx, %r8
 343 0392 31C9     		xorl	%ecx, %ecx
 344 0394 4489CA   		movl	%r9d, %edx
 345 0397 44894C24 		movl	%r9d, 28(%rsp)
 345      1C
 346 039c E8000000 		call	flReadChannelAsyncSubmit
 346      00
 347 03a1 85C0     		testl	%eax, %eax
 348 03a3 75A6     		jne	.L38
 349 03a5 448B4C24 		movl	28(%rsp), %r9d
 349      1C
 350 03aa 488D4C24 		leaq	44(%rsp), %rcx
 350      2C
 351 03af 488B3C24 		movq	(%rsp), %rdi
 352 03b3 488D7424 		leaq	56(%rsp), %rsi
 352      38
 353 03b8 4989D8   		movq	%rbx, %r8
 354 03bb 4889CA   		movq	%rcx, %rdx
 355 03be 4529CF   		subl	%r9d, %r15d
 356 03c1 E8000000 		call	flReadChannelAsyncAwait
 356      00
 357 03c6 85C0     		testl	%eax, %eax
 358 03c8 7581     		jne	.L38
 359 03ca 8B54242C 		movl	44(%rsp), %edx
 360 03ce 488B7C24 		movq	56(%rsp), %rdi
 360      38
 361 03d3 4C89E9   		movq	%r13, %rcx
 362 03d6 BE010000 		movl	$1, %esi
 362      00
 363 03db E8000000 		call	fwrite
 363      00
 364 03e0 3B44242C 		cmpl	44(%rsp), %eax
 365 03e4 89C2     		movl	%eax, %edx
 366 03e6 7417     		je	.L39
 367              	.L43:
 368 03e8 BE000000 		movl	$.LC3, %esi
 368      00
 369 03ed 4889DF   		movq	%rbx, %rdi
 370 03f0 31ED     		xorl	%ebp, %ebp
 371 03f2 E8000000 		call	errPrefix
 371      00
 372 03f7 41BF0B00 		movl	$11, %r15d
 372      0000
 373 03fd EB72     		jmp	.L36
 374              	.L39:
 375 03ff 488B4424 		movq	56(%rsp), %rax
 375      38
 376              	.L40:
 377 0404 FFCA     		decl	%edx
 378 0406 83FAFF   		cmpl	$-1, %edx
 379 0409 0F845EFF 		je	.L37
 379      FFFF
 380 040f 0FB608   		movzbl	(%rax), %ecx
 381 0412 48FFC0   		incq	%rax
 382 0415 01CD     		addl	%ecx, %ebp
 383 0417 EBEB     		jmp	.L40
 384              	.L160:
 385 0419 488D4C24 		leaq	44(%rsp), %rcx
 385      2C
 386 041e 488B3C24 		movq	(%rsp), %rdi
 387 0422 488D7424 		leaq	56(%rsp), %rsi
 387      38
 388 0427 4989D8   		movq	%rbx, %r8
 389 042a 4889CA   		movq	%rcx, %rdx
 390 042d E8000000 		call	flReadChannelAsyncAwait
 390      00
 391 0432 85C0     		testl	%eax, %eax
 392 0434 0F8511FF 		jne	.L38
 392      FFFF
 393 043a 8B54242C 		movl	44(%rsp), %edx
 394 043e 488B7C24 		movq	56(%rsp), %rdi
 394      38
 395 0443 4C89E9   		movq	%r13, %rcx
 396 0446 BE010000 		movl	$1, %esi
 396      00
 397 044b E8000000 		call	fwrite
 397      00
 398 0450 3B44242C 		cmpl	44(%rsp), %eax
 399 0454 89C2     		movl	%eax, %edx
 400 0456 7590     		jne	.L43
 401 0458 488B4424 		movq	56(%rsp), %rax
 401      38
 402              	.L44:
 403 045d FFCA     		decl	%edx
 404 045f 83FAFF   		cmpl	$-1, %edx
 405 0462 740A     		je	.L161
 406 0464 0FB608   		movzbl	(%rax), %ecx
 407 0467 48FFC0   		incq	%rax
 408 046a 01CD     		addl	%ecx, %ebp
 409 046c EBEF     		jmp	.L44
 410              	.L161:
 411 046e 4531FF   		xorl	%r15d, %r15d
 412              	.L36:
 413 0471 488D7C24 		leaq	80(%rsp), %rdi
 413      50
 414 0476 31F6     		xorl	%esi, %esi
 415 0478 E8000000 		call	gettimeofday
 415      00
 416 047d 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 416      000000
 417 0484 0F844302 		je	.L64
 417      0000
 418 048a 48694424 		imulq	$1000000, 80(%rsp), %rax
 418      5040420F 
 418      00
 419 0493 48695424 		imulq	$1000000, 64(%rsp), %rdx
 419      4040420F 
 419      00
 420 049c 0FB7CD   		movzwl	%bp, %ecx
 421 049f 4589F0   		movl	%r14d, %r8d
 422 04a2 BE000000 		movl	$.LC6, %esi
 422      00
 423 04a7 BF010000 		movl	$1, %edi
 423      00
 424 04ac 48034424 		addq	88(%rsp), %rax
 424      58
 425 04b1 48035424 		addq	72(%rsp), %rdx
 425      48
 426 04b6 4829D0   		subq	%rdx, %rax
 427 04b9 4489E2   		movl	%r12d, %edx
 428 04bc F2480F2A 		cvtsi2sdq	%rax, %xmm1
 428      C8
 429 04c1 4489E0   		movl	%r12d, %eax
 430 04c4 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 430      C0
 431 04c9 B001     		movb	$1, %al
 432 04cb F20F5E0D 		divsd	.LC4(%rip), %xmm1
 432      00000000 
 433 04d3 F20F590D 		mulsd	.LC5(%rip), %xmm1
 433      00000000 
 434 04db F20F5EC1 		divsd	%xmm1, %xmm0
 435 04df E8000000 		call	__printf_chk
 435      00
 436 04e4 E9E40100 		jmp	.L64
 436      00
 437              	.L99:
 438 04e9 4531ED   		xorl	%r13d, %r13d
 439 04ec 4531FF   		xorl	%r15d, %r15d
 440 04ef 41BE0300 		movl	$3, %r14d
 440      0000
 441 04f5 E9170200 		jmp	.L63
 441      00
 442              	.L104:
 443 04fa 41BE0B00 		movl	$11, %r14d
 443      0000
 444 0500 E90C0200 		jmp	.L63
 444      00
 445              	.L22:
 446 0505 488D6F01 		leaq	1(%rdi), %rbp
 447 0509 48C74424 		movq	$1, 48(%rsp)
 447      30010000 
 447      00
 448 0512 48892D00 		movq	%rbp, ptr(%rip)
 448      000000
 449 0519 E8000000 		call	__errno_location
 449      00
 450 051e 488D7424 		leaq	56(%rsp), %rsi
 450      38
 451 0523 4989C5   		movq	%rax, %r13
 452 0526 C7000000 		movl	$0, (%rax)
 452      0000
 453 052c BA100000 		movl	$16, %edx
 453      00
 454 0531 4889EF   		movq	%rbp, %rdi
 455 0534 E8000000 		call	strtoul
 455      00
 456 0539 41837D00 		cmpl	$0, 0(%r13)
 456      00
 457 053e 4989C4   		movq	%rax, %r12
 458 0541 0F856003 		jne	.L106
 458      0000
 459 0547 4883F87F 		cmpq	$127, %rax
 460 054b 0F876A03 		ja	.L107
 460      0000
 461 0551 488B7424 		movq	56(%rsp), %rsi
 461      38
 462 0556 803E20   		cmpb	$32, (%rsi)
 463 0559 48893500 		movq	%rsi, ptr(%rip)
 463      000000
 464 0560 0F85C904 		jne	.L118
 464      0000
 465 0566 8A4601   		movb	1(%rsi), %al
 466 0569 488D5601 		leaq	1(%rsi), %rdx
 467 056d 48891500 		movq	%rdx, ptr(%rip)
 467      000000
 468 0574 3C22     		cmpb	$34, %al
 469 0576 7408     		je	.L121
 470 0578 3C27     		cmpb	$39, %al
 471 057a 0F859901 		jne	.L58
 471      0000
 472              	.L121:
 473 0580 488D6E02 		leaq	2(%rsi), %rbp
 474 0584 66C74424 		movw	$0, 44(%rsp)
 474      2C0000
 475 058b 48892D00 		movq	%rbp, ptr(%rip)
 475      000000
 476 0592 4989EE   		movq	%rbp, %r14
 477              	.L60:
 478 0595 418A16   		movb	(%r14), %dl
 479 0598 38D0     		cmpb	%dl, %al
 480 059a 740D     		je	.L61
 481 059c 84D2     		testb	%dl, %dl
 482 059e 0F843B01 		je	.L108
 482      0000
 483 05a4 49FFC6   		incq	%r14
 484 05a7 EBEC     		jmp	.L60
 485              	.L61:
 486 05a9 84C0     		testb	%al, %al
 487 05ab 0F842E01 		je	.L108
 487      0000
 488 05b1 4D89F5   		movq	%r14, %r13
 489 05b4 4929ED   		subq	%rbp, %r13
 490 05b7 498D7D01 		leaq	1(%r13), %rdi
 491 05bb E8000000 		call	malloc
 491      00
 492 05c0 4885C0   		testq	%rax, %rax
 493 05c3 4989C7   		movq	%rax, %r15
 494 05c6 0F842101 		je	.L109
 494      0000
 495 05cc 4939EE   		cmpq	%rbp, %r14
 496 05cf 0F842301 		je	.L110
 496      0000
 497 05d5 4C89EA   		movq	%r13, %rdx
 498 05d8 4889EE   		movq	%rbp, %rsi
 499 05db 4889C7   		movq	%rax, %rdi
 500 05de E8000000 		call	strncpy
 500      00
 501 05e3 49FFC6   		incq	%r14
 502 05e6 43C6042F 		movb	$0, (%r15,%r13)
 502      00
 503 05eb BE000000 		movl	$.LC7, %esi
 503      00
 504 05f0 4C89FF   		movq	%r15, %rdi
 505 05f3 4C893500 		movq	%r14, ptr(%rip)
 505      000000
 506 05fa E8000000 		call	fopen
 506      00
 507 05ff 4885C0   		testq	%rax, %rax
 508 0602 4989C5   		movq	%rax, %r13
 509 0605 0F84F800 		je	.L111
 509      0000
 510 060b 4C89FF   		movq	%r15, %rdi
 511 060e E8000000 		call	free
 511      00
 512 0613 488D7C24 		leaq	64(%rsp), %rdi
 512      40
 513 0618 31F6     		xorl	%esi, %esi
 514 061a E8000000 		call	gettimeofday
 514      00
 515 061f 488B3C24 		movq	(%rsp), %rdi
 516 0623 4C8D4424 		leaq	44(%rsp), %r8
 516      2C
 517 0628 488D4C24 		leaq	48(%rsp), %rcx
 517      30
 518 062d 4989D9   		movq	%rbx, %r9
 519 0630 4C89EA   		movq	%r13, %rdx
 520 0633 4489E6   		movl	%r12d, %esi
 521 0636 E8C5F9FF 		call	doWrite
 521      FF
 522 063b 488D7C24 		leaq	80(%rsp), %rdi
 522      50
 523 0640 31F6     		xorl	%esi, %esi
 524 0642 4189C7   		movl	%eax, %r15d
 525 0645 E8000000 		call	gettimeofday
 525      00
 526 064a 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 526      000000
 527 0651 747A     		je	.L64
 528 0653 48694424 		imulq	$1000000, 80(%rsp), %rax
 528      5040420F 
 528      00
 529 065c 48694C24 		imulq	$1000000, 64(%rsp), %rcx
 529      4040420F 
 529      00
 530 0665 488B5424 		movq	48(%rsp), %rdx
 530      30
 531 066a 48034424 		addq	88(%rsp), %rax
 531      58
 532 066f 48034C24 		addq	72(%rsp), %rcx
 532      48
 533 0674 4829C8   		subq	%rcx, %rax
 534 0677 4885D2   		testq	%rdx, %rdx
 535 067a F2480F2A 		cvtsi2sdq	%rax, %xmm1
 535      C8
 536 067f 7807     		js	.L65
 537 0681 F2480F2A 		cvtsi2sdq	%rdx, %xmm0
 537      C2
 538 0686 EB18     		jmp	.L66
 539              	.L65:
 540 0688 4889D0   		movq	%rdx, %rax
 541 068b 4889D1   		movq	%rdx, %rcx
 542 068e 48D1E8   		shrq	%rax
 543 0691 83E101   		andl	$1, %ecx
 544 0694 4809C8   		orq	%rcx, %rax
 545 0697 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 545      C0
 546 069c F20F58C0 		addsd	%xmm0, %xmm0
 547              	.L66:
 548 06a0 F20F5E0D 		divsd	.LC4(%rip), %xmm1
 548      00000000 
 549 06a8 0FB74C24 		movzwl	44(%rsp), %ecx
 549      2C
 550 06ad 4D89E0   		movq	%r12, %r8
 551 06b0 BE000000 		movl	$.LC8, %esi
 551      00
 552 06b5 BF010000 		movl	$1, %edi
 552      00
 553 06ba B001     		movb	$1, %al
 554 06bc F20F590D 		mulsd	.LC5(%rip), %xmm1
 554      00000000 
 555 06c4 F20F5EC1 		divsd	%xmm1, %xmm0
 556 06c8 E8000000 		call	__printf_chk
 556      00
 557              	.L64:
 558 06cd 4585FF   		testl	%r15d, %r15d
 559 06d0 7539     		jne	.L112
 560 06d2 4C89EF   		movq	%r13, %rdi
 561 06d5 E8000000 		call	fclose
 561      00
 562 06da E90B0300 		jmp	.L55
 562      00
 563              	.L108:
 564 06df 4531ED   		xorl	%r13d, %r13d
 565 06e2 4531FF   		xorl	%r15d, %r15d
 566 06e5 41BE0600 		movl	$6, %r14d
 566      0000
 567 06eb EB24     		jmp	.L63
 568              	.L109:
 569 06ed 4531ED   		xorl	%r13d, %r13d
 570 06f0 41BE0700 		movl	$7, %r14d
 570      0000
 571 06f6 EB19     		jmp	.L63
 572              	.L110:
 573 06f8 4531ED   		xorl	%r13d, %r13d
 574 06fb 41BE0800 		movl	$8, %r14d
 574      0000
 575 0701 EB0E     		jmp	.L63
 576              	.L111:
 577 0703 41BE0A00 		movl	$10, %r14d
 577      0000
 578 0709 EB06     		jmp	.L63
 579              	.L112:
 580 070b 4589FE   		movl	%r15d, %r14d
 581 070e 4531FF   		xorl	%r15d, %r15d
 582              	.L63:
 583 0711 4531E4   		xorl	%r12d, %r12d
 584 0714 E9250300 		jmp	.L18
 584      00
 585              	.L58:
 586 0719 8D48D0   		leal	-48(%rax), %ecx
 587 071c 80F909   		cmpb	$9, %cl
 588 071f 760E     		jbe	.L68
 589 0721 83E0DF   		andl	$-33, %eax
 590 0724 83E841   		subl	$65, %eax
 591 0727 3C05     		cmpb	$5, %al
 592 0729 0F870003 		ja	.L118
 592      0000
 593              	.L68:
 594 072f 4883C602 		addq	$2, %rsi
 595              	.L70:
 596 0733 8A06     		movb	(%rsi), %al
 597 0735 8D48D0   		leal	-48(%rax), %ecx
 598 0738 80F909   		cmpb	$9, %cl
 599 073b 7705     		ja	.L162
 600              	.L71:
 601 073d 48FFC6   		incq	%rsi
 602 0740 EBF1     		jmp	.L70
 603              	.L162:
 604 0742 83E0DF   		andl	$-33, %eax
 605 0745 83E841   		subl	$65, %eax
 606 0748 3C05     		cmpb	$5, %al
 607 074a 76F1     		jbe	.L71
 608 074c 4829D6   		subq	%rdx, %rsi
 609 074f 40F6C601 		testb	$1, %sil
 610 0753 0F857601 		jne	.L113
 610      0000
 611 0759 4889F7   		movq	%rsi, %rdi
 612 075c 4531ED   		xorl	%r13d, %r13d
 613 075f 48D1EF   		shrq	%rdi
 614 0762 48897C24 		movq	%rdi, 48(%rsp)
 614      30
 615 0767 E8000000 		call	malloc
 615      00
 616 076c 4889C5   		movq	%rax, %rbp
 617              	.L72:
 618 076f 4C3B6C24 		cmpq	48(%rsp), %r13
 618      30
 619 0774 7353     		jnb	.L163
 620 0776 488B0D00 		movq	ptr(%rip), %rcx
 620      000000
 621 077d 8A01     		movb	(%rcx), %al
 622 077f 8D50D0   		leal	-48(%rax), %edx
 623 0782 80FA09   		cmpb	$9, %dl
 624 0785 0F860D04 		jbe	.L73
 624      0000
 625 078b 8D509F   		leal	-97(%rax), %edx
 626 078e 80FA05   		cmpb	$5, %dl
 627 0791 7708     		ja	.L74
 628 0793 8D50A9   		leal	-87(%rax), %edx
 629 0796 E9FD0300 		jmp	.L73
 629      00
 630              	.L74:
 631 079b 8D50BF   		leal	-65(%rax), %edx
 632 079e 80FA05   		cmpb	$5, %dl
 633 07a1 7708     		ja	.L75
 634 07a3 8D50C9   		leal	-55(%rax), %edx
 635 07a6 E9ED0300 		jmp	.L73
 635      00
 636              	.L75:
 637 07ab BE000000 		movl	$.LC9, %esi
 637      00
 638 07b0 BF010000 		movl	$1, %edi
 638      00
 639 07b5 31C0     		xorl	%eax, %eax
 640 07b7 E8000000 		call	__printf_chk
 640      00
 641              	.L95:
 642 07bc 48830500 		addq	$2, ptr(%rip)
 642      00000002 
 643 07c4 49FFC5   		incq	%r13
 644 07c7 EBA6     		jmp	.L72
 645              	.L163:
 646 07c9 488D7C24 		leaq	64(%rsp), %rdi
 646      40
 647 07ce 31F6     		xorl	%esi, %esi
 648 07d0 E8000000 		call	gettimeofday
 648      00
 649 07d5 488B5424 		movq	48(%rsp), %rdx
 649      30
 650 07da 488B3C24 		movq	(%rsp), %rdi
 651 07de 4989D8   		movq	%rbx, %r8
 652 07e1 4889E9   		movq	%rbp, %rcx
 653 07e4 4489E6   		movl	%r12d, %esi
 654 07e7 E8000000 		call	flWriteChannel
 654      00
 655 07ec 488D7C24 		leaq	80(%rsp), %rdi
 655      50
 656 07f1 31F6     		xorl	%esi, %esi
 657 07f3 4189C5   		movl	%eax, %r13d
 658 07f6 E8000000 		call	gettimeofday
 658      00
 659 07fb 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 659      000000
 660 0802 0F848D00 		je	.L79
 660      0000
 661 0808 488B5424 		movq	48(%rsp), %rdx
 661      30
 662 080d 31C0     		xorl	%eax, %eax
 663 080f 31C9     		xorl	%ecx, %ecx
 664              	.L80:
 665 0811 4839C2   		cmpq	%rax, %rdx
 666 0814 740C     		je	.L164
 667 0816 0FB67405 		movzbl	0(%rbp,%rax), %esi
 667      00
 668 081b 48FFC0   		incq	%rax
 669 081e 01F1     		addl	%esi, %ecx
 670 0820 EBEF     		jmp	.L80
 671              	.L164:
 672 0822 48694424 		imulq	$1000000, 80(%rsp), %rax
 672      5040420F 
 672      00
 673 082b 48697424 		imulq	$1000000, 64(%rsp), %rsi
 673      4040420F 
 673      00
 674 0834 48034424 		addq	88(%rsp), %rax
 674      58
 675 0839 48037424 		addq	72(%rsp), %rsi
 675      48
 676 083e 4829F0   		subq	%rsi, %rax
 677 0841 4885D2   		testq	%rdx, %rdx
 678 0844 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 678      C8
 679 0849 7807     		js	.L82
 680 084b F2480F2A 		cvtsi2sdq	%rdx, %xmm0
 680      C2
 681 0850 EB18     		jmp	.L83
 682              	.L82:
 683 0852 4889D0   		movq	%rdx, %rax
 684 0855 4889D6   		movq	%rdx, %rsi
 685 0858 48D1E8   		shrq	%rax
 686 085b 83E601   		andl	$1, %esi
 687 085e 4809F0   		orq	%rsi, %rax
 688 0861 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 688      C0
 689 0866 F20F58C0 		addsd	%xmm0, %xmm0
 690              	.L83:
 691 086a F20F5E0D 		divsd	.LC4(%rip), %xmm1
 691      00000000 
 692 0872 0FB7C9   		movzwl	%cx, %ecx
 693 0875 4D89E0   		movq	%r12, %r8
 694 0878 BE000000 		movl	$.LC8, %esi
 694      00
 695 087d BF010000 		movl	$1, %edi
 695      00
 696 0882 B001     		movb	$1, %al
 697 0884 F20F590D 		mulsd	.LC5(%rip), %xmm1
 697      00000000 
 698 088c F20F5EC1 		divsd	%xmm1, %xmm0
 699 0890 E8000000 		call	__printf_chk
 699      00
 700              	.L79:
 701 0895 4585ED   		testl	%r13d, %r13d
 702 0898 7549     		jne	.L114
 703 089a 4889EF   		movq	%rbp, %rdi
 704 089d E8000000 		call	free
 704      00
 705 08a2 E9430100 		jmp	.L55
 705      00
 706              	.L106:
 707 08a7 4531ED   		xorl	%r13d, %r13d
 708 08aa 4531FF   		xorl	%r15d, %r15d
 709 08ad 4531E4   		xorl	%r12d, %r12d
 710 08b0 41BE0200 		movl	$2, %r14d
 710      0000
 711 08b6 E9830100 		jmp	.L18
 711      00
 712              	.L107:
 713 08bb 4531ED   		xorl	%r13d, %r13d
 714 08be 4531FF   		xorl	%r15d, %r15d
 715 08c1 4531E4   		xorl	%r12d, %r12d
 716 08c4 41BE0300 		movl	$3, %r14d
 716      0000
 717 08ca E96F0100 		jmp	.L18
 717      00
 718              	.L113:
 719 08cf 4531ED   		xorl	%r13d, %r13d
 720 08d2 4531FF   		xorl	%r15d, %r15d
 721 08d5 4531E4   		xorl	%r12d, %r12d
 722 08d8 41BE0900 		movl	$9, %r14d
 722      0000
 723 08de E95B0100 		jmp	.L18
 723      00
 724              	.L114:
 725 08e3 4989EC   		movq	%rbp, %r12
 726 08e6 4531ED   		xorl	%r13d, %r13d
 727 08e9 4531FF   		xorl	%r15d, %r15d
 728 08ec 41BE0100 		movl	$1, %r14d
 728      0000
 729 08f2 E9470100 		jmp	.L18
 729      00
 730              	.L159:
 731 08f7 488D6F01 		leaq	1(%rdi), %rbp
 732 08fb 48892D00 		movq	%rbp, ptr(%rip)
 732      000000
 733 0902 E8000000 		call	__errno_location
 733      00
 734 0907 488D7424 		leaq	56(%rsp), %rsi
 734      38
 735 090c 4989C4   		movq	%rax, %r12
 736 090f C7000000 		movl	$0, (%rax)
 736      0000
 737 0915 BA100000 		movl	$16, %edx
 737      00
 738 091a 4889EF   		movq	%rbp, %rdi
 739 091d E8000000 		call	strtoul
 739      00
 740 0922 41833C24 		cmpl	$0, (%r12)
 740      00
 741 0927 753D     		jne	.L115
 742 0929 3DFF0000 		cmpl	$255, %eax
 742      00
 743 092e 773E     		ja	.L116
 744 0930 488B5424 		movq	56(%rsp), %rdx
 744      38
 745 0935 48891500 		movq	%rdx, ptr(%rip)
 745      000000
 746 093c 8A12     		movb	(%rdx), %dl
 747 093e 84D2     		testb	%dl, %dl
 748 0940 7405     		je	.L122
 749 0942 80FA3B   		cmpb	$59, %dl
 750 0945 752F     		jne	.L117
 751              	.L122:
 752 0947 488B3C24 		movq	(%rsp), %rdi
 753 094b 0FB6F0   		movzbl	%al, %esi
 754 094e 4889DA   		movq	%rbx, %rdx
 755 0951 E8000000 		call	flSelectConduit
 755      00
 756 0956 85C0     		testl	%eax, %eax
 757 0958 0F848C00 		je	.L55
 757      0000
 758 095e 41BE0100 		movl	$1, %r14d
 758      0000
 759 0964 EB16     		jmp	.L84
 760              	.L115:
 761 0966 41BE0200 		movl	$2, %r14d
 761      0000
 762 096c EB0E     		jmp	.L84
 763              	.L116:
 764 096e 41BE0400 		movl	$4, %r14d
 764      0000
 765 0974 EB06     		jmp	.L84
 766              	.L117:
 767 0976 41BE0500 		movl	$5, %r14d
 767      0000
 768              	.L84:
 769 097c 4531ED   		xorl	%r13d, %r13d
 770 097f 4531FF   		xorl	%r15d, %r15d
 771 0982 4531E4   		xorl	%r12d, %r12d
 772 0985 E9B40000 		jmp	.L18
 772      00
 773              	.L166:
 774 098a 48694424 		imulq	$1000000, 80(%rsp), %rax
 774      5040420F 
 774      00
 775 0993 48695424 		imulq	$1000000, 64(%rsp), %rdx
 775      4040420F 
 775      00
 776 099c F2480F2A 		cvtsi2sdq	%rbp, %xmm0
 776      C5
 777 09a1 0FB7C9   		movzwl	%cx, %ecx
 778 09a4 4589F0   		movl	%r14d, %r8d
 779 09a7 BE000000 		movl	$.LC6, %esi
 779      00
 780 09ac BF010000 		movl	$1, %edi
 780      00
 781 09b1 48034424 		addq	88(%rsp), %rax
 781      58
 782 09b6 48035424 		addq	72(%rsp), %rdx
 782      48
 783 09bb 4829D0   		subq	%rdx, %rax
 784 09be 4489EA   		movl	%r13d, %edx
 785 09c1 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 785      C8
 786 09c6 B001     		movb	$1, %al
 787 09c8 F20F5E0D 		divsd	.LC4(%rip), %xmm1
 787      00000000 
 788 09d0 F20F590D 		mulsd	.LC5(%rip), %xmm1
 788      00000000 
 789 09d8 F20F5EC1 		divsd	%xmm1, %xmm0
 790 09dc E8000000 		call	__printf_chk
 790      00
 791              	.L50:
 792 09e1 4585FF   		testl	%r15d, %r15d
 793 09e4 0F859D01 		jne	.L92
 793      0000
 794              	.L55:
 795 09ea 488B0500 		movq	ptr(%rip), %rax
 795      000000
 796 09f1 8A00     		movb	(%rax), %al
 797 09f3 3C3B     		cmpb	$59, %al
 798 09f5 0F8468F7 		je	.L19
 798      FFFF
 799 09fb 84C0     		testb	%al, %al
 800 09fd 7530     		jne	.L118
 801 09ff 488B5424 		movq	104(%rsp), %rdx
 801      68
 802 0a04 488B7424 		movq	96(%rsp), %rsi
 802      60
 803 0a09 31FF     		xorl	%edi, %edi
 804 0a0b 4531ED   		xorl	%r13d, %r13d
 805 0a0e 4531FF   		xorl	%r15d, %r15d
 806 0a11 4531E4   		xorl	%r12d, %r12d
 807 0a14 4531F6   		xorl	%r14d, %r14d
 808 0a17 E8000000 		call	dump
 808      00
 809 0a1c EB20     		jmp	.L18
 810              	.L97:
 811 0a1e 4531ED   		xorl	%r13d, %r13d
 812 0a21 4531FF   		xorl	%r15d, %r15d
 813 0a24 4531E4   		xorl	%r12d, %r12d
 814 0a27 41BE0100 		movl	$1, %r14d
 814      0000
 815 0a2d EB0F     		jmp	.L18
 816              	.L118:
 817 0a2f 4531ED   		xorl	%r13d, %r13d
 818 0a32 4531FF   		xorl	%r15d, %r15d
 819 0a35 4531E4   		xorl	%r12d, %r12d
 820 0a38 41BE0500 		movl	$5, %r14d
 820      0000
 821              	.L18:
 822 0a3e 488D7C24 		leaq	96(%rsp), %rdi
 822      60
 823 0a43 E8000000 		call	bufDestroy
 823      00
 824 0a48 4D85ED   		testq	%r13, %r13
 825 0a4b 7408     		je	.L88
 826 0a4d 4C89EF   		movq	%r13, %rdi
 827 0a50 E8000000 		call	fclose
 827      00
 828              	.L88:
 829 0a55 4C89FF   		movq	%r15, %rdi
 830 0a58 E8000000 		call	free
 830      00
 831 0a5d 4C89E7   		movq	%r12, %rdi
 832 0a60 E8000000 		call	free
 832      00
 833 0a65 4183FE01 		cmpl	$1, %r14d
 834 0a69 7671     		jbe	.L89
 835 0a6b 4C8B0500 		movq	ptr(%rip), %r8
 835      000000
 836 0a72 4489F0   		movl	%r14d, %eax
 837 0a75 4C2B4424 		subq	16(%rsp), %r8
 837      10
 838 0a7a 488B0CC5 		movq	errMessages(,%rax,8), %rcx
 838      00000000 
 839 0a82 4C8B4C24 		movq	16(%rsp), %r9
 839      10
 840 0a87 BA000000 		movl	$.LC10, %edx
 840      00
 841 0a8c 488B3D00 		movq	stderr(%rip), %rdi
 841      000000
 842 0a93 BE010000 		movl	$1, %esi
 842      00
 843 0a98 31C0     		xorl	%eax, %eax
 844 0a9a 31DB     		xorl	%ebx, %ebx
 845 0a9c 4489C5   		movl	%r8d, %ebp
 846 0a9f E8000000 		call	__fprintf_chk
 846      00
 847              	.L90:
 848 0aa4 39EB     		cmpl	%ebp, %ebx
 849 0aa6 7D1C     		jge	.L165
 850 0aa8 488B3D00 		movq	stderr(%rip), %rdi
 850      000000
 851 0aaf BA000000 		movl	$.LC11, %edx
 851      00
 852 0ab4 BE010000 		movl	$1, %esi
 852      00
 853 0ab9 31C0     		xorl	%eax, %eax
 854 0abb FFC3     		incl	%ebx
 855 0abd E8000000 		call	__fprintf_chk
 855      00
 856 0ac2 EBE0     		jmp	.L90
 857              	.L165:
 858 0ac4 488B3D00 		movq	stderr(%rip), %rdi
 858      000000
 859 0acb BA000000 		movl	$.LC12, %edx
 859      00
 860 0ad0 BE010000 		movl	$1, %esi
 860      00
 861 0ad5 31C0     		xorl	%eax, %eax
 862 0ad7 E8000000 		call	__fprintf_chk
 862      00
 863              	.L89:
 864 0adc 488B9C24 		movq	136(%rsp), %rbx
 864      88000000 
 865 0ae4 6448331C 		xorq	%fs:40, %rbx
 865      25280000 
 865      00
 866 0aed 4489F0   		movl	%r14d, %eax
 867 0af0 0F84D500 		je	.L96
 867      0000
 868 0af6 E8000000 		call	__stack_chk_fail
 868      00
 869              	.L27:
 870 0afb 4489ED   		movl	%r13d, %ebp
 871 0afe 488D7C24 		leaq	96(%rsp), %rdi
 871      60
 872 0b03 31F6     		xorl	%esi, %esi
 873 0b05 4889D9   		movq	%rbx, %rcx
 874 0b08 4889EA   		movq	%rbp, %rdx
 875 0b0b 4C8B6424 		movq	104(%rsp), %r12
 875      68
 876 0b10 E8000000 		call	bufAppendConst
 876      00
 877 0b15 85C0     		testl	%eax, %eax
 878 0b17 756E     		jne	.L92
 879 0b19 488D7C24 		leaq	64(%rsp), %rdi
 879      40
 880 0b1e 31F6     		xorl	%esi, %esi
 881 0b20 E8000000 		call	gettimeofday
 881      00
 882 0b25 4C89E1   		movq	%r12, %rcx
 883 0b28 48034C24 		addq	96(%rsp), %rcx
 883      60
 884 0b2d 488B3C24 		movq	(%rsp), %rdi
 885 0b31 410FB6F6 		movzbl	%r14b, %esi
 886 0b35 4989D8   		movq	%rbx, %r8
 887 0b38 4889EA   		movq	%rbp, %rdx
 888 0b3b E8000000 		call	flReadChannel
 888      00
 889 0b40 4189C7   		movl	%eax, %r15d
 890 0b43 488B4424 		movq	96(%rsp), %rax
 890      60
 891 0b48 488D7C24 		leaq	80(%rsp), %rdi
 891      50
 892 0b4d 31F6     		xorl	%esi, %esi
 893 0b4f 8A00     		movb	(%rax), %al
 894 0b51 88050000 		movb	%al, out(%rip)
 894      0000
 895 0b57 E8000000 		call	gettimeofday
 895      00
 896 0b5c 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 896      000000
 897 0b63 0F8478FE 		je	.L50
 897      FFFF
 898 0b69 4C036424 		addq	96(%rsp), %r12
 898      60
 899 0b6e 31C0     		xorl	%eax, %eax
 900 0b70 31C9     		xorl	%ecx, %ecx
 901              	.L51:
 902 0b72 4839C5   		cmpq	%rax, %rbp
 903 0b75 0F840FFE 		je	.L166
 903      FFFF
 904 0b7b 410FB614 		movzbl	(%r12,%rax), %edx
 904      04
 905 0b80 48FFC0   		incq	%rax
 906 0b83 01D1     		addl	%edx, %ecx
 907 0b85 EBEB     		jmp	.L51
 908              	.L92:
 909 0b87 4531ED   		xorl	%r13d, %r13d
 910 0b8a 4531FF   		xorl	%r15d, %r15d
 911 0b8d 41BE0100 		movl	$1, %r14d
 911      0000
 912 0b93 E979FBFF 		jmp	.L63
 912      FF
 913              	.L73:
 914 0b98 8A4901   		movb	1(%rcx), %cl
 915 0b9b 8D41D0   		leal	-48(%rcx), %eax
 916 0b9e 3C09     		cmpb	$9, %al
 917 0ba0 761A     		jbe	.L77
 918 0ba2 8D419F   		leal	-97(%rcx), %eax
 919 0ba5 3C05     		cmpb	$5, %al
 920 0ba7 7705     		ja	.L76
 921 0ba9 8D41A9   		leal	-87(%rcx), %eax
 922 0bac EB0E     		jmp	.L77
 923              	.L76:
 924 0bae 8D41BF   		leal	-65(%rcx), %eax
 925 0bb1 3C05     		cmpb	$5, %al
 926 0bb3 0F87F2FB 		ja	.L75
 926      FFFF
 927 0bb9 8D41C9   		leal	-55(%rcx), %eax
 928              	.L77:
 929 0bbc C1E204   		sall	$4, %edx
 930 0bbf 09D0     		orl	%edx, %eax
 931 0bc1 4288442D 		movb	%al, 0(%rbp,%r13)
 931      00
 932 0bc6 E9F1FBFF 		jmp	.L95
 932      FF
 933              	.L96:
 934 0bcb 4881C498 		addq	$152, %rsp
 934      000000
 935              		.cfi_def_cfa_offset 56
 936 0bd2 5B       		popq	%rbx
 937              		.cfi_def_cfa_offset 48
 938 0bd3 5D       		popq	%rbp
 939              		.cfi_def_cfa_offset 40
 940 0bd4 415C     		popq	%r12
 941              		.cfi_def_cfa_offset 32
 942 0bd6 415D     		popq	%r13
 943              		.cfi_def_cfa_offset 24
 944 0bd8 415E     		popq	%r14
 945              		.cfi_def_cfa_offset 16
 946 0bda 415F     		popq	%r15
 947              		.cfi_def_cfa_offset 8
 948 0bdc C3       		ret
 949              		.cfi_endproc
 950              	.LFE67:
 952              	.LCOLDE13:
 953              	.LHOTE13:
 954              	.LCOLDB15:
 955              		.text
 956              	.LHOTB15:
 957              		.p2align 4,,15
 958              		.globl	timediff
 960              	timediff:
 961              	.LFB55:
 962              		.cfi_startproc
 963 0000 660FEFC0 		pxor	%xmm0, %xmm0
 964 0004 660FEFC9 		pxor	%xmm1, %xmm1
 965 0008 F2480F2A 		cvtsi2sdq	%rsi, %xmm0
 965      C6
 966 000d F2480F2A 		cvtsi2sdq	%rdi, %xmm1
 966      CF
 967 0012 F20F5CC1 		subsd	%xmm1, %xmm0
 968 0016 F20F5E05 		divsd	.LC4(%rip), %xmm0
 968      00000000 
 969 001e F20F5905 		mulsd	.LC14(%rip), %xmm0
 969      00000000 
 970 0026 F2480F2C 		cvttsd2siq	%xmm0, %rax
 970      C0
 971 002b C3       		ret
 972              		.cfi_endproc
 973              	.LFE55:
 975              		.section	.text.unlikely
 976              	.LCOLDE15:
 977              		.text
 978              	.LHOTE15:
 979              		.section	.rodata.str1.1
 980              	.LC16:
 981 0045 2E637376 		.string	".csv"
 981      00
 982              	.LC17:
 983 004a 74726163 		.string	"track_data"
 983      6B5F6461 
 983      746100
 984              	.LC18:
 985 0055 7700     		.string	"w"
 986              	.LC19:
 987 0057 0A256400 		.string	"\n%d"
 988              	.LC20:
 989 005b 2C256420 		.string	",%d "
 989      00
 990              		.section	.text.unlikely
 991              	.LCOLDB21:
 992              		.text
 993              	.LHOTB21:
 994 002c 0F1F4000 		.p2align 4,,15
 995              		.globl	save_to_file
 997              	save_to_file:
 998              	.LFB56:
 999              		.cfi_startproc
 1000 0030 4156     		pushq	%r14
 1001              		.cfi_def_cfa_offset 16
 1002              		.cfi_offset 14, -16
 1003 0032 4155     		pushq	%r13
 1004              		.cfi_def_cfa_offset 24
 1005              		.cfi_offset 13, -24
 1006 0034 4189F6   		movl	%esi, %r14d
 1007 0037 4154     		pushq	%r12
 1008              		.cfi_def_cfa_offset 32
 1009              		.cfi_offset 12, -32
 1010 0039 55       		pushq	%rbp
 1011              		.cfi_def_cfa_offset 40
 1012              		.cfi_offset 6, -40
 1013 003a BA0B0000 		movl	$11, %edx
 1013      00
 1014 003f 53       		pushq	%rbx
 1015              		.cfi_def_cfa_offset 48
 1016              		.cfi_offset 3, -48
 1017 0040 BE000000 		movl	$.LC16, %esi
 1017      00
 1018 0045 4889FB   		movq	%rdi, %rbx
 1019 0048 BF000000 		movl	$.LC17, %edi
 1019      00
 1020 004d 4531ED   		xorl	%r13d, %r13d
 1021 0050 E8000000 		call	__strcat_chk
 1021      00
 1022 0055 BE000000 		movl	$.LC18, %esi
 1022      00
 1023 005a 4889C7   		movq	%rax, %rdi
 1024 005d E8000000 		call	fopen
 1024      00
 1025 0062 4585F6   		testl	%r14d, %r14d
 1026 0065 4889C5   		movq	%rax, %rbp
 1027 0068 7E49     		jle	.L172
 1028 006a 660F1F44 		.p2align 4,,10
 1028      0000
 1029              		.p2align 3
 1030              	.L173:
 1031 0070 4183C501 		addl	$1, %r13d
 1032 0074 4C8D6314 		leaq	20(%rbx), %r12
 1033 0078 BA000000 		movl	$.LC19, %edx
 1033      00
 1034 007d 4489E9   		movl	%r13d, %ecx
 1035 0080 BE010000 		movl	$1, %esi
 1035      00
 1036 0085 4889EF   		movq	%rbp, %rdi
 1037 0088 31C0     		xorl	%eax, %eax
 1038 008a E8000000 		call	__fprintf_chk
 1038      00
 1039              	.L170:
 1040 008f 8B0B     		movl	(%rbx), %ecx
 1041 0091 31C0     		xorl	%eax, %eax
 1042 0093 BA000000 		movl	$.LC20, %edx
 1042      00
 1043 0098 BE010000 		movl	$1, %esi
 1043      00
 1044 009d 4889EF   		movq	%rbp, %rdi
 1045 00a0 4883C304 		addq	$4, %rbx
 1046 00a4 E8000000 		call	__fprintf_chk
 1046      00
 1047 00a9 4939DC   		cmpq	%rbx, %r12
 1048 00ac 75E1     		jne	.L170
 1049 00ae 4539EE   		cmpl	%r13d, %r14d
 1050 00b1 75BD     		jne	.L173
 1051              	.L172:
 1052 00b3 5B       		popq	%rbx
 1053              		.cfi_def_cfa_offset 40
 1054 00b4 4889EF   		movq	%rbp, %rdi
 1055 00b7 5D       		popq	%rbp
 1056              		.cfi_def_cfa_offset 32
 1057 00b8 415C     		popq	%r12
 1058              		.cfi_def_cfa_offset 24
 1059 00ba 415D     		popq	%r13
 1060              		.cfi_def_cfa_offset 16
 1061 00bc 415E     		popq	%r14
 1062              		.cfi_def_cfa_offset 8
 1063 00be E9000000 		jmp	fclose
 1063      00
 1064              		.cfi_endproc
 1065              	.LFE56:
 1067              		.section	.text.unlikely
 1068              	.LCOLDE21:
 1069              		.text
 1070              	.LHOTE21:
 1071              		.section	.rodata.str1.1
 1072              	.LC22:
 1073 0060 6572726F 		.string	"error %d from tcgetattr"
 1073      72202564 
 1073      2066726F 
 1073      6D207463 
 1073      67657461 
 1074              	.LC23:
 1075 0078 6572726F 		.string	"error %d from tcsetattr"
 1075      72202564 
 1075      2066726F 
 1075      6D207463 
 1075      73657461 
 1076              		.section	.text.unlikely
 1077              	.LCOLDB24:
 1078              		.text
 1079              	.LHOTB24:
 1080 00c3 0F1F0066 		.p2align 4,,15
 1080      2E0F1F84 
 1080      00000000 
 1080      00
 1081              		.globl	set_interface_attribs
 1083              	set_interface_attribs:
 1084              	.LFB57:
 1085              		.cfi_startproc
 1086 00d0 4155     		pushq	%r13
 1087              		.cfi_def_cfa_offset 16
 1088              		.cfi_offset 13, -16
 1089 00d2 4154     		pushq	%r12
 1090              		.cfi_def_cfa_offset 24
 1091              		.cfi_offset 12, -24
 1092 00d4 B9070000 		movl	$7, %ecx
 1092      00
 1093 00d9 55       		pushq	%rbp
 1094              		.cfi_def_cfa_offset 32
 1095              		.cfi_offset 6, -32
 1096 00da 53       		pushq	%rbx
 1097              		.cfi_def_cfa_offset 40
 1098              		.cfi_offset 3, -40
 1099 00db 4189FC   		movl	%edi, %r12d
 1100 00de 4189F5   		movl	%esi, %r13d
 1101 00e1 89D5     		movl	%edx, %ebp
 1102 00e3 4883EC58 		subq	$88, %rsp
 1103              		.cfi_def_cfa_offset 128
 1104 00e7 64488B04 		movq	%fs:40, %rax
 1104      25280000 
 1104      00
 1105 00f0 48894424 		movq	%rax, 72(%rsp)
 1105      48
 1106 00f5 31C0     		xorl	%eax, %eax
 1107 00f7 4889E7   		movq	%rsp, %rdi
 1108 00fa 4889E6   		movq	%rsp, %rsi
 1109 00fd F348AB   		rep stosq
 1110 0100 C7070000 		movl	$0, (%rdi)
 1110      0000
 1111 0106 4489E7   		movl	%r12d, %edi
 1112 0109 E8000000 		call	tcgetattr
 1112      00
 1113 010e 85C0     		testl	%eax, %eax
 1114 0110 757E     		jne	.L186
 1115 0112 4489EE   		movl	%r13d, %esi
 1116 0115 4889E7   		movq	%rsp, %rdi
 1117 0118 E8000000 		call	cfsetospeed
 1117      00
 1118 011d 4489EE   		movl	%r13d, %esi
 1119 0120 4889E7   		movq	%rsp, %rdi
 1120 0123 E8000000 		call	cfsetispeed
 1120      00
 1121 0128 8B0424   		movl	(%rsp), %eax
 1122 012b 31F6     		xorl	%esi, %esi
 1123 012d 4889E2   		movq	%rsp, %rdx
 1124 0130 4489E7   		movl	%r12d, %edi
 1125 0133 C744240C 		movl	$0, 12(%rsp)
 1125      00000000 
 1126 013b C7442404 		movl	$0, 4(%rsp)
 1126      00000000 
 1127 0143 C6442417 		movb	$0, 23(%rsp)
 1127      00
 1128 0148 C6442416 		movb	$5, 22(%rsp)
 1128      05
 1129 014d 25FEE3FF 		andl	$-7170, %eax
 1129      FF
 1130 0152 890424   		movl	%eax, (%rsp)
 1131 0155 8B442408 		movl	8(%rsp), %eax
 1132 0159 80E4FC   		andb	$252, %ah
 1133 015c 0DB00800 		orl	$2224, %eax
 1133      00
 1134 0161 09C5     		orl	%eax, %ebp
 1135 0163 83E5BF   		andl	$-65, %ebp
 1136 0166 896C2408 		movl	%ebp, 8(%rsp)
 1137 016a E8000000 		call	tcsetattr
 1137      00
 1138 016f 85C0     		testl	%eax, %eax
 1139 0171 753D     		jne	.L187
 1140              	.L180:
 1141 0173 488B4C24 		movq	72(%rsp), %rcx
 1141      48
 1142 0178 6448330C 		xorq	%fs:40, %rcx
 1142      25280000 
 1142      00
 1143 0181 754C     		jne	.L188
 1144 0183 4883C458 		addq	$88, %rsp
 1145              		.cfi_remember_state
 1146              		.cfi_def_cfa_offset 40
 1147 0187 5B       		popq	%rbx
 1148              		.cfi_def_cfa_offset 32
 1149 0188 5D       		popq	%rbp
 1150              		.cfi_def_cfa_offset 24
 1151 0189 415C     		popq	%r12
 1152              		.cfi_def_cfa_offset 16
 1153 018b 415D     		popq	%r13
 1154              		.cfi_def_cfa_offset 8
 1155 018d C3       		ret
 1156 018e 6690     		.p2align 4,,10
 1157              		.p2align 3
 1158              	.L186:
 1159              		.cfi_restore_state
 1160 0190 E8000000 		call	__errno_location
 1160      00
 1161 0195 8B10     		movl	(%rax), %edx
 1162 0197 BE000000 		movl	$.LC22, %esi
 1162      00
 1163 019c BF010000 		movl	$1, %edi
 1163      00
 1164 01a1 31C0     		xorl	%eax, %eax
 1165 01a3 E8000000 		call	__printf_chk
 1165      00
 1166 01a8 B8FFFFFF 		movl	$-1, %eax
 1166      FF
 1167 01ad EBC4     		jmp	.L180
 1168 01af 90       		.p2align 4,,10
 1169              		.p2align 3
 1170              	.L187:
 1171 01b0 E8000000 		call	__errno_location
 1171      00
 1172 01b5 8B10     		movl	(%rax), %edx
 1173 01b7 BE000000 		movl	$.LC23, %esi
 1173      00
 1174 01bc BF010000 		movl	$1, %edi
 1174      00
 1175 01c1 31C0     		xorl	%eax, %eax
 1176 01c3 E8000000 		call	__printf_chk
 1176      00
 1177 01c8 B8FFFFFF 		movl	$-1, %eax
 1177      FF
 1178 01cd EBA4     		jmp	.L180
 1179              	.L188:
 1180 01cf E8000000 		call	__stack_chk_fail
 1180      00
 1181              		.cfi_endproc
 1182              	.LFE57:
 1184              		.section	.text.unlikely
 1185              	.LCOLDE24:
 1186              		.text
 1187              	.LHOTE24:
 1188              		.section	.rodata.str1.1
 1189              	.LC25:
 1190 0090 6572726F 		.string	"error %d from tggetattr"
 1190      72202564 
 1190      2066726F 
 1190      6D207467 
 1190      67657461 
 1191              		.section	.rodata.str1.8
 1192 007e 0000     		.align 8
 1193              	.LC26:
 1194 0080 6572726F 		.string	"error %d setting term attributes"
 1194      72202564 
 1194      20736574 
 1194      74696E67 
 1194      20746572 
 1195              		.section	.text.unlikely
 1196              	.LCOLDB27:
 1197              		.text
 1198              	.LHOTB27:
 1199 01d4 6690662E 		.p2align 4,,15
 1199      0F1F8400 
 1199      00000000 
 1200              		.globl	set_blocking
 1202              	set_blocking:
 1203              	.LFB58:
 1204              		.cfi_startproc
 1205 01e0 4154     		pushq	%r12
 1206              		.cfi_def_cfa_offset 16
 1207              		.cfi_offset 12, -16
 1208 01e2 55       		pushq	%rbp
 1209              		.cfi_def_cfa_offset 24
 1210              		.cfi_offset 6, -24
 1211 01e3 B9070000 		movl	$7, %ecx
 1211      00
 1212 01e8 53       		pushq	%rbx
 1213              		.cfi_def_cfa_offset 32
 1214              		.cfi_offset 3, -32
 1215 01e9 89FD     		movl	%edi, %ebp
 1216 01eb 4189F4   		movl	%esi, %r12d
 1217 01ee 4883EC50 		subq	$80, %rsp
 1218              		.cfi_def_cfa_offset 112
 1219 01f2 64488B04 		movq	%fs:40, %rax
 1219      25280000 
 1219      00
 1220 01fb 48894424 		movq	%rax, 72(%rsp)
 1220      48
 1221 0200 31C0     		xorl	%eax, %eax
 1222 0202 4889E7   		movq	%rsp, %rdi
 1223 0205 4889E6   		movq	%rsp, %rsi
 1224 0208 F348AB   		rep stosq
 1225 020b C7070000 		movl	$0, (%rdi)
 1225      0000
 1226 0211 89EF     		movl	%ebp, %edi
 1227 0213 E8000000 		call	tcgetattr
 1227      00
 1228 0218 85C0     		testl	%eax, %eax
 1229 021a 753C     		jne	.L198
 1230 021c 4585E4   		testl	%r12d, %r12d
 1231 021f 4889E2   		movq	%rsp, %rdx
 1232 0222 89EF     		movl	%ebp, %edi
 1233 0224 0F954424 		setne	23(%rsp)
 1233      17
 1234 0229 31F6     		xorl	%esi, %esi
 1235 022b C6442416 		movb	$5, 22(%rsp)
 1235      05
 1236 0230 E8000000 		call	tcsetattr
 1236      00
 1237 0235 85C0     		testl	%eax, %eax
 1238 0237 753F     		jne	.L199
 1239              	.L189:
 1240 0239 488B4424 		movq	72(%rsp), %rax
 1240      48
 1241 023e 64483304 		xorq	%fs:40, %rax
 1241      25280000 
 1241      00
 1242 0247 7549     		jne	.L200
 1243 0249 4883C450 		addq	$80, %rsp
 1244              		.cfi_remember_state
 1245              		.cfi_def_cfa_offset 32
 1246 024d 5B       		popq	%rbx
 1247              		.cfi_def_cfa_offset 24
 1248 024e 5D       		popq	%rbp
 1249              		.cfi_def_cfa_offset 16
 1250 024f 415C     		popq	%r12
 1251              		.cfi_def_cfa_offset 8
 1252 0251 C3       		ret
 1253              		.p2align 4,,10
 1254 0252 660F1F44 		.p2align 3
 1254      0000
 1255              	.L198:
 1256              		.cfi_restore_state
 1257 0258 E8000000 		call	__errno_location
 1257      00
 1258 025d 8B10     		movl	(%rax), %edx
 1259 025f BE000000 		movl	$.LC25, %esi
 1259      00
 1260 0264 BF010000 		movl	$1, %edi
 1260      00
 1261 0269 31C0     		xorl	%eax, %eax
 1262 026b E8000000 		call	__printf_chk
 1262      00
 1263 0270 EBC7     		jmp	.L189
 1264              		.p2align 4,,10
 1265 0272 660F1F44 		.p2align 3
 1265      0000
 1266              	.L199:
 1267 0278 E8000000 		call	__errno_location
 1267      00
 1268 027d 8B10     		movl	(%rax), %edx
 1269 027f BE000000 		movl	$.LC26, %esi
 1269      00
 1270 0284 BF010000 		movl	$1, %edi
 1270      00
 1271 0289 31C0     		xorl	%eax, %eax
 1272 028b E8000000 		call	__printf_chk
 1272      00
 1273 0290 EBA7     		jmp	.L189
 1274              	.L200:
 1275 0292 E8000000 		call	__stack_chk_fail
 1275      00
 1276              		.cfi_endproc
 1277              	.LFE58:
 1279              		.section	.text.unlikely
 1280              	.LCOLDE27:
 1281              		.text
 1282              	.LHOTE27:
 1283              		.section	.rodata.str1.1
 1284              	.LC28:
 1285 00a8 6572726F 		.string	"error %d opening %s: %s"
 1285      72202564 
 1285      206F7065 
 1285      6E696E67 
 1285      2025733A 
 1286              	.LC29:
 1287 00c0 3100     		.string	"1"
 1288              	.LC30:
 1289 00c2 3000     		.string	"0"
 1290              		.section	.text.unlikely
 1291              	.LCOLDB31:
 1292              		.text
 1293              	.LHOTB31:
 1294 0297 660F1F84 		.p2align 4,,15
 1294      00000000 
 1294      00
 1295              		.globl	read_one_byte_from_uart
 1297              	read_one_byte_from_uart:
 1298              	.LFB59:
 1299              		.cfi_startproc
 1300 02a0 55       		pushq	%rbp
 1301              		.cfi_def_cfa_offset 16
 1302              		.cfi_offset 6, -16
 1303 02a1 53       		pushq	%rbx
 1304              		.cfi_def_cfa_offset 24
 1305              		.cfi_offset 3, -24
 1306 02a2 4883EC58 		subq	$88, %rsp
 1307              		.cfi_def_cfa_offset 112
 1308 02a6 8B3D0000 		movl	fd(%rip), %edi
 1308      0000
 1309 02ac 64488B04 		movq	%fs:40, %rax
 1309      25280000 
 1309      00
 1310 02b5 48894424 		movq	%rax, 72(%rsp)
 1310      48
 1311 02ba 31C0     		xorl	%eax, %eax
 1312 02bc 85FF     		testl	%edi, %edi
 1313 02be 0F882401 		js	.L218
 1313      0000
 1314 02c4 31D2     		xorl	%edx, %edx
 1315 02c6 BE0B0000 		movl	$11, %esi
 1315      00
 1316 02cb E8000000 		call	set_interface_attribs
 1316      00
 1317 02d0 31C0     		xorl	%eax, %eax
 1318 02d2 B9070000 		movl	$7, %ecx
 1318      00
 1319 02d7 4889E7   		movq	%rsp, %rdi
 1320 02da F348AB   		rep stosq
 1321 02dd 8B2D0000 		movl	fd(%rip), %ebp
 1321      0000
 1322 02e3 4889E6   		movq	%rsp, %rsi
 1323 02e6 C7070000 		movl	$0, (%rdi)
 1323      0000
 1324 02ec 89EF     		movl	%ebp, %edi
 1325 02ee E8000000 		call	tcgetattr
 1325      00
 1326 02f3 85C0     		testl	%eax, %eax
 1327 02f5 7569     		jne	.L219
 1328 02f7 31F6     		xorl	%esi, %esi
 1329 02f9 4889E2   		movq	%rsp, %rdx
 1330 02fc 89EF     		movl	%ebp, %edi
 1331 02fe C6442417 		movb	$0, 23(%rsp)
 1331      00
 1332 0303 C6442416 		movb	$5, 22(%rsp)
 1332      05
 1333 0308 E8000000 		call	tcsetattr
 1333      00
 1334 030d 85C0     		testl	%eax, %eax
 1335 030f 0F85B300 		jne	.L220
 1335      0000
 1336              	.L205:
 1337 0315 BF090000 		movl	$9, %edi
 1337      00
 1338 031a E8000000 		call	malloc
 1338      00
 1339 031f 8B3D0000 		movl	fd(%rip), %edi
 1339      0000
 1340 0325 488D7424 		leaq	71(%rsp), %rsi
 1340      47
 1341 032a BA010000 		movl	$1, %edx
 1341      00
 1342 032f 4889C5   		movq	%rax, %rbp
 1343 0332 E8000000 		call	read
 1343      00
 1344 0337 83F801   		cmpl	$1, %eax
 1345 033a 7444     		je	.L221
 1346 033c C6450066 		movb	$102, 0(%rbp)
 1347 0340 4889E8   		movq	%rbp, %rax
 1348              	.L203:
 1349 0343 488B4C24 		movq	72(%rsp), %rcx
 1349      48
 1350 0348 6448330C 		xorq	%fs:40, %rcx
 1350      25280000 
 1350      00
 1351 0351 0F85C400 		jne	.L222
 1351      0000
 1352 0357 4883C458 		addq	$88, %rsp
 1353              		.cfi_remember_state
 1354              		.cfi_def_cfa_offset 24
 1355 035b 5B       		popq	%rbx
 1356              		.cfi_def_cfa_offset 16
 1357 035c 5D       		popq	%rbp
 1358              		.cfi_def_cfa_offset 8
 1359 035d C3       		ret
 1360 035e 6690     		.p2align 4,,10
 1361              		.p2align 3
 1362              	.L219:
 1363              		.cfi_restore_state
 1364 0360 E8000000 		call	__errno_location
 1364      00
 1365 0365 8B10     		movl	(%rax), %edx
 1366 0367 BE000000 		movl	$.LC25, %esi
 1366      00
 1367 036c BF010000 		movl	$1, %edi
 1367      00
 1368 0371 31C0     		xorl	%eax, %eax
 1369 0373 E8000000 		call	__printf_chk
 1369      00
 1370 0378 EB9B     		jmp	.L205
 1371 037a 660F1F44 		.p2align 4,,10
 1371      0000
 1372              		.p2align 3
 1373              	.L221:
 1374 0380 0FB65C24 		movzbl	71(%rsp), %ebx
 1374      47
 1375 0385 C6450000 		movb	$0, 0(%rbp)
 1376 0389 84DB     		testb	%bl, %bl
 1377 038b 7514     		jne	.L210
 1378 038d EB2D     		jmp	.L212
 1379 038f 90       		.p2align 4,,10
 1380              		.p2align 3
 1381              	.L223:
 1382 0390 BE000000 		movl	$.LC29, %esi
 1382      00
 1383 0395 4889EF   		movq	%rbp, %rdi
 1384 0398 E8000000 		call	__strcat_chk
 1384      00
 1385 039d D0EB     		shrb	%bl
 1386 039f 741B     		je	.L212
 1387              	.L210:
 1388 03a1 F6C301   		testb	$1, %bl
 1389 03a4 BA090000 		movl	$9, %edx
 1389      00
 1390 03a9 75E5     		jne	.L223
 1391 03ab BE000000 		movl	$.LC30, %esi
 1391      00
 1392 03b0 4889EF   		movq	%rbp, %rdi
 1393 03b3 E8000000 		call	__strcat_chk
 1393      00
 1394 03b8 D0EB     		shrb	%bl
 1395 03ba 75E5     		jne	.L210
 1396              	.L212:
 1397 03bc 4889E8   		movq	%rbp, %rax
 1398 03bf EB82     		jmp	.L203
 1399              		.p2align 4,,10
 1400 03c1 0F1F8000 		.p2align 3
 1400      000000
 1401              	.L220:
 1402 03c8 E8000000 		call	__errno_location
 1402      00
 1403 03cd 8B10     		movl	(%rax), %edx
 1404 03cf BE000000 		movl	$.LC26, %esi
 1404      00
 1405 03d4 BF010000 		movl	$1, %edi
 1405      00
 1406 03d9 31C0     		xorl	%eax, %eax
 1407 03db E8000000 		call	__printf_chk
 1407      00
 1408 03e0 E930FFFF 		jmp	.L205
 1408      FF
 1409              		.p2align 4,,10
 1410 03e5 0F1F00   		.p2align 3
 1411              	.L218:
 1412 03e8 E8000000 		call	__errno_location
 1412      00
 1413 03ed 8B38     		movl	(%rax), %edi
 1414 03ef 4889C3   		movq	%rax, %rbx
 1415 03f2 E8000000 		call	strerror
 1415      00
 1416 03f7 488B0D00 		movq	portname(%rip), %rcx
 1416      000000
 1417 03fe 8B13     		movl	(%rbx), %edx
 1418 0400 4989C0   		movq	%rax, %r8
 1419 0403 BE000000 		movl	$.LC28, %esi
 1419      00
 1420 0408 BF010000 		movl	$1, %edi
 1420      00
 1421 040d 31C0     		xorl	%eax, %eax
 1422 040f E8000000 		call	__printf_chk
 1422      00
 1423 0414 31C0     		xorl	%eax, %eax
 1424 0416 E928FFFF 		jmp	.L203
 1424      FF
 1425              	.L222:
 1426 041b E8000000 		call	__stack_chk_fail
 1426      00
 1427              		.cfi_endproc
 1428              	.LFE59:
 1430              		.section	.text.unlikely
 1431              	.LCOLDE31:
 1432              		.text
 1433              	.LHOTE31:
 1434              		.section	.rodata.str1.8
 1435 00a1 00000000 		.align 8
 1435      000000
 1436              	.LC32:
 1437 00a8 3E3E2045 		.string	">> Enter data to Write via Uart:\n>>>> "
 1437      6E746572 
 1437      20646174 
 1437      6120746F 
 1437      20577269 
 1438              		.section	.rodata.str1.1
 1439              	.LC33:
 1440 00c4 25686878 		.string	"%hhx"
 1440      00
 1441              		.section	.text.unlikely
 1442              	.LCOLDB34:
 1443              		.text
 1444              	.LHOTB34:
 1445              		.p2align 4,,15
 1446              		.globl	write_one_byte_to_uart
 1448              	write_one_byte_to_uart:
 1449              	.LFB60:
 1450              		.cfi_startproc
 1451 0420 4883EC18 		subq	$24, %rsp
 1452              		.cfi_def_cfa_offset 32
 1453 0424 BE000000 		movl	$.LC32, %esi
 1453      00
 1454 0429 BF010000 		movl	$1, %edi
 1454      00
 1455 042e 64488B04 		movq	%fs:40, %rax
 1455      25280000 
 1455      00
 1456 0437 48894424 		movq	%rax, 8(%rsp)
 1456      08
 1457 043c 31C0     		xorl	%eax, %eax
 1458 043e E8000000 		call	__printf_chk
 1458      00
 1459 0443 488D7424 		leaq	7(%rsp), %rsi
 1459      07
 1460 0448 BF000000 		movl	$.LC33, %edi
 1460      00
 1461 044d 31C0     		xorl	%eax, %eax
 1462 044f E8000000 		call	__isoc99_scanf
 1462      00
 1463 0454 8B3D0000 		movl	fd(%rip), %edi
 1463      0000
 1464 045a 488D7424 		leaq	7(%rsp), %rsi
 1464      07
 1465 045f BA010000 		movl	$1, %edx
 1465      00
 1466 0464 E8000000 		call	write
 1466      00
 1467 0469 83F801   		cmpl	$1, %eax
 1468 046c 0F94C0   		sete	%al
 1469 046f 488B4C24 		movq	8(%rsp), %rcx
 1469      08
 1470 0474 6448330C 		xorq	%fs:40, %rcx
 1470      25280000 
 1470      00
 1471 047d 7508     		jne	.L227
 1472 047f 0FB6C0   		movzbl	%al, %eax
 1473 0482 4883C418 		addq	$24, %rsp
 1474              		.cfi_remember_state
 1475              		.cfi_def_cfa_offset 8
 1476 0486 C3       		ret
 1477              	.L227:
 1478              		.cfi_restore_state
 1479 0487 E8000000 		call	__stack_chk_fail
 1479      00
 1480              		.cfi_endproc
 1481              	.LFE60:
 1483              		.section	.text.unlikely
 1484              	.LCOLDE34:
 1485              		.text
 1486              	.LHOTE34:
 1487              		.section	.rodata.str1.1
 1488              	.LC35:
 1489 00c9 474F5420 		.string	"GOT INTO FUNNCTION%s"
 1489      494E544F 
 1489      2046554E 
 1489      4E435449 
 1489      4F4E2573 
 1490              	.LC36:
 1491 00de 7200     		.string	"r"
 1492              		.section	.text.unlikely
 1493              	.LCOLDB37:
 1494              		.text
 1495              	.LHOTB37:
 1496 048c 0F1F4000 		.p2align 4,,15
 1497              		.globl	read_table
 1499              	read_table:
 1500              	.LFB68:
 1501              		.cfi_startproc
 1502 0490 4156     		pushq	%r14
 1503              		.cfi_def_cfa_offset 16
 1504              		.cfi_offset 14, -16
 1505 0492 4155     		pushq	%r13
 1506              		.cfi_def_cfa_offset 24
 1507              		.cfi_offset 13, -24
 1508 0494 4889FA   		movq	%rdi, %rdx
 1509 0497 4154     		pushq	%r12
 1510              		.cfi_def_cfa_offset 32
 1511              		.cfi_offset 12, -32
 1512 0499 55       		pushq	%rbp
 1513              		.cfi_def_cfa_offset 40
 1514              		.cfi_offset 6, -40
 1515 049a 31C0     		xorl	%eax, %eax
 1516 049c 53       		pushq	%rbx
 1517              		.cfi_def_cfa_offset 48
 1518              		.cfi_offset 3, -48
 1519 049d 4989F5   		movq	%rsi, %r13
 1520 04a0 4889FB   		movq	%rdi, %rbx
 1521 04a3 BE000000 		movl	$.LC35, %esi
 1521      00
 1522 04a8 BF010000 		movl	$1, %edi
 1522      00
 1523 04ad E8000000 		call	__printf_chk
 1523      00
 1524 04b2 BE000000 		movl	$.LC36, %esi
 1524      00
 1525 04b7 4889DF   		movq	%rbx, %rdi
 1526 04ba E8000000 		call	fopen
 1526      00
 1527 04bf 4885C0   		testq	%rax, %rax
 1528 04c2 745A     		je	.L229
 1529 04c4 4889C3   		movq	%rax, %rbx
 1530 04c7 31ED     		xorl	%ebp, %ebp
 1531 04c9 4531E4   		xorl	%r12d, %r12d
 1532 04cc 0F1F4000 		.p2align 4,,10
 1533              		.p2align 3
 1534              	.L230:
 1535 04d0 4889DF   		movq	%rbx, %rdi
 1536 04d3 E8000000 		call	_IO_getc
 1536      00
 1537 04d8 3CFF     		cmpb	$-1, %al
 1538 04da 743A     		je	.L238
 1539              	.L233:
 1540 04dc 3C20     		cmpb	$32, %al
 1541 04de 74F0     		je	.L230
 1542 04e0 3C2C     		cmpb	$44, %al
 1543 04e2 74EC     		je	.L230
 1544 04e4 8D50D0   		leal	-48(%rax), %edx
 1545 04e7 80FA09   		cmpb	$9, %dl
 1546 04ea 7744     		ja	.L232
 1547 04ec 4963D4   		movslq	%r12d, %rdx
 1548 04ef 0FBEC0   		movsbl	%al, %eax
 1549 04f2 4863CD   		movslq	%ebp, %rcx
 1550 04f5 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 1551 04f9 83E830   		subl	$48, %eax
 1552 04fc 4889DF   		movq	%rbx, %rdi
 1553 04ff 83C501   		addl	$1, %ebp
 1554 0502 4589E6   		movl	%r12d, %r14d
 1555 0505 498D5495 		leaq	0(%r13,%rdx,4), %rdx
 1555      00
 1556 050a 89048A   		movl	%eax, (%rdx,%rcx,4)
 1557 050d E8000000 		call	_IO_getc
 1557      00
 1558 0512 3CFF     		cmpb	$-1, %al
 1559 0514 75C6     		jne	.L233
 1560              	.L238:
 1561 0516 4889DF   		movq	%rbx, %rdi
 1562 0519 E8000000 		call	fclose
 1562      00
 1563              	.L229:
 1564 051e 5B       		popq	%rbx
 1565              		.cfi_remember_state
 1566              		.cfi_def_cfa_offset 40
 1567 051f 418D4601 		leal	1(%r14), %eax
 1568 0523 5D       		popq	%rbp
 1569              		.cfi_def_cfa_offset 32
 1570 0524 415C     		popq	%r12
 1571              		.cfi_def_cfa_offset 24
 1572 0526 415D     		popq	%r13
 1573              		.cfi_def_cfa_offset 16
 1574 0528 415E     		popq	%r14
 1575              		.cfi_def_cfa_offset 8
 1576 052a C3       		ret
 1577 052b 0F1F4400 		.p2align 4,,10
 1577      00
 1578              		.p2align 3
 1579              	.L232:
 1580              		.cfi_restore_state
 1581 0530 3C0A     		cmpb	$10, %al
 1582 0532 759C     		jne	.L230
 1583 0534 4183C401 		addl	$1, %r12d
 1584 0538 31ED     		xorl	%ebp, %ebp
 1585 053a EB94     		jmp	.L230
 1586              		.cfi_endproc
 1587              	.LFE68:
 1589              		.section	.text.unlikely
 1590              	.LCOLDE37:
 1591              		.text
 1592              	.LHOTE37:
 1593              		.section	.text.unlikely
 1594              	.LCOLDB38:
 1595              		.text
 1596              	.LHOTB38:
 1597 053c 0F1F4000 		.p2align 4,,15
 1598              		.globl	boolToHex
 1600              	boolToHex:
 1601              	.LFB69:
 1602              		.cfi_startproc
 1603 0540 53       		pushq	%rbx
 1604              		.cfi_def_cfa_offset 16
 1605              		.cfi_offset 3, -16
 1606 0541 4889FB   		movq	%rdi, %rbx
 1607 0544 BF090000 		movl	$9, %edi
 1607      00
 1608 0549 E8000000 		call	malloc
 1608      00
 1609 054e 31F6     		xorl	%esi, %esi
 1610 0550 803B31   		cmpb	$49, (%rbx)
 1611 0553 4C8B0500 		movq	mm(%rip), %r8
 1611      000000
 1612 055a 488D7B01 		leaq	1(%rbx), %rdi
 1613 055e BA010000 		movl	$1, %edx
 1613      00
 1614 0563 41B90100 		movl	$1, %r9d
 1614      0000
 1615 0569 400F94C6 		sete	%sil
 1616 056d EB2B     		jmp	.L242
 1617 056f 90       		.p2align 4,,10
 1618              		.p2align 3
 1619              	.L246:
 1620 0570 4863F6   		movslq	%esi, %rsi
 1621 0573 89D1     		movl	%edx, %ecx
 1622 0575 410FB634 		movzbl	(%r8,%rsi), %esi
 1622      30
 1623 057a C1F902   		sarl	$2, %ecx
 1624 057d 4863C9   		movslq	%ecx, %rcx
 1625 0580 40887408 		movb	%sil, -1(%rax,%rcx)
 1625      FF
 1626 0585 31F6     		xorl	%esi, %esi
 1627 0587 803F31   		cmpb	$49, (%rdi)
 1628 058a 400F94C6 		sete	%sil
 1629              	.L241:
 1630 058e 83C201   		addl	$1, %edx
 1631 0591 4883C701 		addq	$1, %rdi
 1632 0595 83FA20   		cmpl	$32, %edx
 1633 0598 741F     		je	.L245
 1634              	.L242:
 1635 059a 89D1     		movl	%edx, %ecx
 1636 059c 83E103   		andl	$3, %ecx
 1637 059f 74CF     		je	.L246
 1638 05a1 803F31   		cmpb	$49, (%rdi)
 1639 05a4 75E8     		jne	.L241
 1640 05a6 4489CB   		movl	%r9d, %ebx
 1641 05a9 83C201   		addl	$1, %edx
 1642 05ac 4883C701 		addq	$1, %rdi
 1643 05b0 D3E3     		sall	%cl, %ebx
 1644 05b2 01DE     		addl	%ebx, %esi
 1645 05b4 83FA20   		cmpl	$32, %edx
 1646 05b7 75E1     		jne	.L242
 1647              	.L245:
 1648 05b9 0FB610   		movzbl	(%rax), %edx
 1649 05bc 4863F6   		movslq	%esi, %rsi
 1650 05bf 410FB60C 		movzbl	(%r8,%rsi), %ecx
 1650      30
 1651 05c4 0FB67001 		movzbl	1(%rax), %esi
 1652 05c8 C6400800 		movb	$0, 8(%rax)
 1653 05cc 885001   		movb	%dl, 1(%rax)
 1654 05cf 0FB65002 		movzbl	2(%rax), %edx
 1655 05d3 408830   		movb	%sil, (%rax)
 1656 05d6 0FB67003 		movzbl	3(%rax), %esi
 1657 05da 885003   		movb	%dl, 3(%rax)
 1658 05dd 0FB65004 		movzbl	4(%rax), %edx
 1659 05e1 40887002 		movb	%sil, 2(%rax)
 1660 05e5 0FB67005 		movzbl	5(%rax), %esi
 1661 05e9 885005   		movb	%dl, 5(%rax)
 1662 05ec 0FB65006 		movzbl	6(%rax), %edx
 1663 05f0 40887004 		movb	%sil, 4(%rax)
 1664 05f4 884806   		movb	%cl, 6(%rax)
 1665 05f7 885007   		movb	%dl, 7(%rax)
 1666 05fa 5B       		popq	%rbx
 1667              		.cfi_def_cfa_offset 8
 1668 05fb C3       		ret
 1669              		.cfi_endproc
 1670              	.LFE69:
 1672              		.section	.text.unlikely
 1673              	.LCOLDE38:
 1674              		.text
 1675              	.LHOTE38:
 1676              		.section	.rodata.str1.1
 1677              	.LC39:
 1678 00e0 25642020 		.string	"%d                       %d\n"
 1678      20202020 
 1678      20202020 
 1678      20202020 
 1678      20202020 
 1679              		.section	.text.unlikely
 1680              	.LCOLDB40:
 1681              		.text
 1682              	.LHOTB40:
 1683 05fc 0F1F4000 		.p2align 4,,15
 1684              		.globl	get_coordinate
 1686              	get_coordinate:
 1687              	.LFB70:
 1688              		.cfi_startproc
 1689 0600 C7060000 		movl	$0, (%rsi)
 1689      0000
 1690 0606 C7020000 		movl	$0, (%rdx)
 1690      0000
 1691 060c 803F31   		cmpb	$49, (%rdi)
 1692 060f 743F     		je	.L256
 1693 0611 807F0131 		cmpb	$49, 1(%rdi)
 1694 0615 7442     		je	.L257
 1695              	.L249:
 1696 0617 807F0231 		cmpb	$49, 2(%rdi)
 1697 061b 7445     		je	.L258
 1698              	.L250:
 1699 061d 807F0331 		cmpb	$49, 3(%rdi)
 1700 0621 7448     		je	.L259
 1701              	.L251:
 1702 0623 807F0431 		cmpb	$49, 4(%rdi)
 1703 0627 8B0A     		movl	(%rdx), %ecx
 1704 0629 744B     		je	.L260
 1705              	.L252:
 1706 062b 807F0531 		cmpb	$49, 5(%rdi)
 1707 062f 7450     		je	.L261
 1708              	.L253:
 1709 0631 807F0631 		cmpb	$49, 6(%rdi)
 1710 0635 7455     		je	.L262
 1711              	.L254:
 1712 0637 807F0731 		cmpb	$49, 7(%rdi)
 1713 063b 745A     		je	.L263
 1714              	.L255:
 1715 063d 8B16     		movl	(%rsi), %edx
 1716 063f BF010000 		movl	$1, %edi
 1716      00
 1717 0644 BE000000 		movl	$.LC39, %esi
 1717      00
 1718 0649 31C0     		xorl	%eax, %eax
 1719 064b E9000000 		jmp	__printf_chk
 1719      00
 1720              		.p2align 4,,10
 1721              		.p2align 3
 1722              	.L256:
 1723 0650 830601   		addl	$1, (%rsi)
 1724 0653 807F0131 		cmpb	$49, 1(%rdi)
 1725 0657 75BE     		jne	.L249
 1726              	.L257:
 1727 0659 830602   		addl	$2, (%rsi)
 1728 065c 807F0231 		cmpb	$49, 2(%rdi)
 1729 0660 75BB     		jne	.L250
 1730              	.L258:
 1731 0662 830604   		addl	$4, (%rsi)
 1732 0665 807F0331 		cmpb	$49, 3(%rdi)
 1733 0669 75B8     		jne	.L251
 1734              	.L259:
 1735 066b 830608   		addl	$8, (%rsi)
 1736 066e 807F0431 		cmpb	$49, 4(%rdi)
 1737 0672 8B0A     		movl	(%rdx), %ecx
 1738 0674 75B5     		jne	.L252
 1739              	.L260:
 1740 0676 83C101   		addl	$1, %ecx
 1741 0679 890A     		movl	%ecx, (%rdx)
 1742 067b 807F0531 		cmpb	$49, 5(%rdi)
 1743 067f 75B0     		jne	.L253
 1744              	.L261:
 1745 0681 83C102   		addl	$2, %ecx
 1746 0684 890A     		movl	%ecx, (%rdx)
 1747 0686 807F0631 		cmpb	$49, 6(%rdi)
 1748 068a 75AB     		jne	.L254
 1749              	.L262:
 1750 068c 83C104   		addl	$4, %ecx
 1751 068f 890A     		movl	%ecx, (%rdx)
 1752 0691 807F0731 		cmpb	$49, 7(%rdi)
 1753 0695 75A6     		jne	.L255
 1754              	.L263:
 1755 0697 83C108   		addl	$8, %ecx
 1756 069a 890A     		movl	%ecx, (%rdx)
 1757 069c EB9F     		jmp	.L255
 1758              		.cfi_endproc
 1759              	.LFE70:
 1761              		.section	.text.unlikely
 1762              	.LCOLDE40:
 1763              		.text
 1764              	.LHOTE40:
 1765              		.section	.text.unlikely
 1766              	.LCOLDB41:
 1767              		.text
 1768              	.LHOTB41:
 1769 069e 6690     		.p2align 4,,15
 1770              		.globl	func
 1772              	func:
 1773              	.LFB71:
 1774              		.cfi_startproc
 1775 06a0 4156     		pushq	%r14
 1776              		.cfi_def_cfa_offset 16
 1777              		.cfi_offset 14, -16
 1778 06a2 4155     		pushq	%r13
 1779              		.cfi_def_cfa_offset 24
 1780              		.cfi_offset 13, -24
 1781 06a4 4989D6   		movq	%rdx, %r14
 1782 06a7 4154     		pushq	%r12
 1783              		.cfi_def_cfa_offset 32
 1784              		.cfi_offset 12, -32
 1785 06a9 55       		pushq	%rbp
 1786              		.cfi_def_cfa_offset 40
 1787              		.cfi_offset 6, -40
 1788 06aa 89FD     		movl	%edi, %ebp
 1789 06ac 53       		pushq	%rbx
 1790              		.cfi_def_cfa_offset 48
 1791              		.cfi_offset 3, -48
 1792 06ad BF410000 		movl	$65, %edi
 1792      00
 1793 06b2 4189CD   		movl	%ecx, %r13d
 1794 06b5 4189F4   		movl	%esi, %r12d
 1795 06b8 E8000000 		call	malloc
 1795      00
 1796 06bd BE010000 		movl	$1, %esi
 1796      00
 1797 06c2 BF080000 		movl	$8, %edi
 1797      00
 1798 06c7 4889C3   		movq	%rax, %rbx
 1799 06ca E8000000 		call	calloc
 1799      00
 1800 06cf 4585ED   		testl	%r13d, %r13d
 1801 06d2 0F8E6801 		jle	.L284
 1801      0000
 1802 06d8 418D4DFF 		leal	-1(%r13), %ecx
 1803 06dc 4C89F2   		movq	%r14, %rdx
 1804 06df 488D4C89 		leaq	5(%rcx,%rcx,4), %rcx
 1804      05
 1805 06e4 498D348E 		leaq	(%r14,%rcx,4), %rsi
 1806 06e8 EB13     		jmp	.L283
 1807 06ea 660F1F44 		.p2align 4,,10
 1807      0000
 1808              		.p2align 3
 1809              	.L275:
 1810 06f0 4883C214 		addq	$20, %rdx
 1811 06f4 4839F2   		cmpq	%rsi, %rdx
 1812 06f7 0F844301 		je	.L284
 1812      0000
 1813              	.L283:
 1814 06fd 392A     		cmpl	%ebp, (%rdx)
 1815 06ff 75EF     		jne	.L275
 1816 0701 44396204 		cmpl	%r12d, 4(%rdx)
 1817 0705 75E9     		jne	.L275
 1818 0707 48637A08 		movslq	8(%rdx), %rdi
 1819 070b 8B4A10   		movl	16(%rdx), %ecx
 1820 070e 448D5703 		leal	3(%rdi), %r10d
 1821 0712 85FF     		testl	%edi, %edi
 1822 0714 448D04FD 		leal	0(,%rdi,8), %r8d
 1822      00000000 
 1823 071c C6043801 		movb	$1, (%rax,%rdi)
 1824 0720 440F49D7 		cmovns	%edi, %r10d
 1825 0724 4D63C0   		movslq	%r8d, %r8
 1826 0727 4589D1   		movl	%r10d, %r9d
 1827 072a 41C1EA1F 		shrl	$31, %r10d
 1828 072e 42C60403 		movb	$49, (%rbx,%r8)
 1828      31
 1829 0733 41C1F902 		sarl	$2, %r9d
 1830 0737 4501D1   		addl	%r10d, %r9d
 1831 073a 4183E101 		andl	$1, %r9d
 1832 073e 4529D1   		subl	%r10d, %r9d
 1833 0741 4189FA   		movl	%edi, %r10d
 1834 0744 4183F901 		cmpl	$1, %r9d
 1835 0748 410F94C1 		sete	%r9b
 1836 074c 41C1EA1F 		shrl	$31, %r10d
 1837 0750 4183C130 		addl	$48, %r9d
 1838 0754 4101FA   		addl	%edi, %r10d
 1839 0757 46884C03 		movb	%r9b, 2(%rbx,%r8)
 1839      02
 1840 075c 4589D1   		movl	%r10d, %r9d
 1841 075f 41C1EA1F 		shrl	$31, %r10d
 1842 0763 41D1F9   		sarl	%r9d
 1843 0766 4501D1   		addl	%r10d, %r9d
 1844 0769 4183E101 		andl	$1, %r9d
 1845 076d 4529D1   		subl	%r10d, %r9d
 1846 0770 4189FA   		movl	%edi, %r10d
 1847 0773 4183F901 		cmpl	$1, %r9d
 1848 0777 410F94C1 		sete	%r9b
 1849 077b 41C1EA1F 		shrl	$31, %r10d
 1850 077f 4183C130 		addl	$48, %r9d
 1851 0783 46884C03 		movb	%r9b, 3(%rbx,%r8)
 1851      03
 1852 0788 468D0C17 		leal	(%rdi,%r10), %r9d
 1853 078c 4183E101 		andl	$1, %r9d
 1854 0790 4529D1   		subl	%r10d, %r9d
 1855 0793 448D5103 		leal	3(%rcx), %r10d
 1856 0797 4183F901 		cmpl	$1, %r9d
 1857 079b 410F94C1 		sete	%r9b
 1858 079f 4183C130 		addl	$48, %r9d
 1859 07a3 837A0C01 		cmpl	$1, 12(%rdx)
 1860 07a7 46884C03 		movb	%r9b, 4(%rbx,%r8)
 1860      04
 1861 07ac 410F94C1 		sete	%r9b
 1862 07b0 4183C130 		addl	$48, %r9d
 1863 07b4 85C9     		testl	%ecx, %ecx
 1864 07b6 440F49D1 		cmovns	%ecx, %r10d
 1865 07ba 46884C03 		movb	%r9b, 1(%rbx,%r8)
 1865      01
 1866 07bf 4589D1   		movl	%r10d, %r9d
 1867 07c2 41C1EA1F 		shrl	$31, %r10d
 1868 07c6 41C1F902 		sarl	$2, %r9d
 1869 07ca 4501D1   		addl	%r10d, %r9d
 1870 07cd 4183E101 		andl	$1, %r9d
 1871 07d1 4529D1   		subl	%r10d, %r9d
 1872 07d4 4189CA   		movl	%ecx, %r10d
 1873 07d7 4183F901 		cmpl	$1, %r9d
 1874 07db 410F94C1 		sete	%r9b
 1875 07df 41C1EA1F 		shrl	$31, %r10d
 1876 07e3 4101CA   		addl	%ecx, %r10d
 1877 07e6 4183C130 		addl	$48, %r9d
 1878 07ea 46884C03 		movb	%r9b, 5(%rbx,%r8)
 1878      05
 1879 07ef 4589D1   		movl	%r10d, %r9d
 1880 07f2 41C1EA1F 		shrl	$31, %r10d
 1881 07f6 41D1F9   		sarl	%r9d
 1882 07f9 4501D1   		addl	%r10d, %r9d
 1883 07fc 4183E101 		andl	$1, %r9d
 1884 0800 4529D1   		subl	%r10d, %r9d
 1885 0803 4183F901 		cmpl	$1, %r9d
 1886 0807 410F94C1 		sete	%r9b
 1887 080b 4183C130 		addl	$48, %r9d
 1888 080f 46884C03 		movb	%r9b, 6(%rbx,%r8)
 1888      06
 1889 0814 4189C9   		movl	%ecx, %r9d
 1890 0817 41C1E91F 		shrl	$31, %r9d
 1891 081b 4401C9   		addl	%r9d, %ecx
 1892 081e 83E101   		andl	$1, %ecx
 1893 0821 4429C9   		subl	%r9d, %ecx
 1894 0824 83F901   		cmpl	$1, %ecx
 1895 0827 0F94C1   		sete	%cl
 1896 082a 4883C214 		addq	$20, %rdx
 1897 082e 83C130   		addl	$48, %ecx
 1898 0831 4839F2   		cmpq	%rsi, %rdx
 1899 0834 42884C03 		movb	%cl, 7(%rbx,%r8)
 1899      07
 1900 0839 0F85BEFE 		jne	.L283
 1900      FFFF
 1901 083f 90       		.p2align 4,,10
 1902              		.p2align 3
 1903              	.L284:
 1904 0840 803800   		cmpb	$0, (%rax)
 1905 0843 751F     		jne	.L266
 1906 0845 C6430230 		movb	$48, 2(%rbx)
 1907 0849 C6430330 		movb	$48, 3(%rbx)
 1908 084d C6430430 		movb	$48, 4(%rbx)
 1909 0851 C60330   		movb	$48, (%rbx)
 1910 0854 C6430130 		movb	$48, 1(%rbx)
 1911 0858 C6430530 		movb	$48, 5(%rbx)
 1912 085c C6430630 		movb	$48, 6(%rbx)
 1913 0860 C6430730 		movb	$48, 7(%rbx)
 1914              	.L266:
 1915 0864 80780100 		cmpb	$0, 1(%rax)
 1916 0868 7520     		jne	.L267
 1917 086a C6430A30 		movb	$48, 10(%rbx)
 1918 086e C6430B30 		movb	$48, 11(%rbx)
 1919 0872 C6430C31 		movb	$49, 12(%rbx)
 1920 0876 C6430830 		movb	$48, 8(%rbx)
 1921 087a C6430930 		movb	$48, 9(%rbx)
 1922 087e C6430D30 		movb	$48, 13(%rbx)
 1923 0882 C6430E30 		movb	$48, 14(%rbx)
 1924 0886 C6430F30 		movb	$48, 15(%rbx)
 1925              	.L267:
 1926 088a 80780200 		cmpb	$0, 2(%rax)
 1927 088e 7520     		jne	.L268
 1928 0890 C6431230 		movb	$48, 18(%rbx)
 1929 0894 C6431331 		movb	$49, 19(%rbx)
 1930 0898 C6431430 		movb	$48, 20(%rbx)
 1931 089c C6431030 		movb	$48, 16(%rbx)
 1932 08a0 C6431130 		movb	$48, 17(%rbx)
 1933 08a4 C6431530 		movb	$48, 21(%rbx)
 1934 08a8 C6431630 		movb	$48, 22(%rbx)
 1935 08ac C6431730 		movb	$48, 23(%rbx)
 1936              	.L268:
 1937 08b0 80780300 		cmpb	$0, 3(%rax)
 1938 08b4 7520     		jne	.L269
 1939 08b6 C6431A30 		movb	$48, 26(%rbx)
 1940 08ba C6431B31 		movb	$49, 27(%rbx)
 1941 08be C6431C31 		movb	$49, 28(%rbx)
 1942 08c2 C6431830 		movb	$48, 24(%rbx)
 1943 08c6 C6431930 		movb	$48, 25(%rbx)
 1944 08ca C6431D30 		movb	$48, 29(%rbx)
 1945 08ce C6431E30 		movb	$48, 30(%rbx)
 1946 08d2 C6431F30 		movb	$48, 31(%rbx)
 1947              	.L269:
 1948 08d6 80780400 		cmpb	$0, 4(%rax)
 1949 08da 7520     		jne	.L270
 1950 08dc C6432231 		movb	$49, 34(%rbx)
 1951 08e0 C6432330 		movb	$48, 35(%rbx)
 1952 08e4 C6432430 		movb	$48, 36(%rbx)
 1953 08e8 C6432030 		movb	$48, 32(%rbx)
 1954 08ec C6432130 		movb	$48, 33(%rbx)
 1955 08f0 C6432530 		movb	$48, 37(%rbx)
 1956 08f4 C6432630 		movb	$48, 38(%rbx)
 1957 08f8 C6432730 		movb	$48, 39(%rbx)
 1958              	.L270:
 1959 08fc 80780500 		cmpb	$0, 5(%rax)
 1960 0900 7520     		jne	.L271
 1961 0902 C6432A31 		movb	$49, 42(%rbx)
 1962 0906 C6432B30 		movb	$48, 43(%rbx)
 1963 090a C6432C31 		movb	$49, 44(%rbx)
 1964 090e C6432830 		movb	$48, 40(%rbx)
 1965 0912 C6432930 		movb	$48, 41(%rbx)
 1966 0916 C6432D30 		movb	$48, 45(%rbx)
 1967 091a C6432E30 		movb	$48, 46(%rbx)
 1968 091e C6432F30 		movb	$48, 47(%rbx)
 1969              	.L271:
 1970 0922 80780600 		cmpb	$0, 6(%rax)
 1971 0926 7520     		jne	.L272
 1972 0928 C6433231 		movb	$49, 50(%rbx)
 1973 092c C6433331 		movb	$49, 51(%rbx)
 1974 0930 C6433430 		movb	$48, 52(%rbx)
 1975 0934 C6433030 		movb	$48, 48(%rbx)
 1976 0938 C6433130 		movb	$48, 49(%rbx)
 1977 093c C6433530 		movb	$48, 53(%rbx)
 1978 0940 C6433630 		movb	$48, 54(%rbx)
 1979 0944 C6433730 		movb	$48, 55(%rbx)
 1980              	.L272:
 1981 0948 80780700 		cmpb	$0, 7(%rax)
 1982 094c 7520     		jne	.L273
 1983 094e C6433A31 		movb	$49, 58(%rbx)
 1984 0952 C6433B31 		movb	$49, 59(%rbx)
 1985 0956 C6433C31 		movb	$49, 60(%rbx)
 1986 095a C6433830 		movb	$48, 56(%rbx)
 1987 095e C6433930 		movb	$48, 57(%rbx)
 1988 0962 C6433D30 		movb	$48, 61(%rbx)
 1989 0966 C6433E30 		movb	$48, 62(%rbx)
 1990 096a C6433F30 		movb	$48, 63(%rbx)
 1991              	.L273:
 1992 096e 4889D8   		movq	%rbx, %rax
 1993 0971 C6434000 		movb	$0, 64(%rbx)
 1994 0975 5B       		popq	%rbx
 1995              		.cfi_def_cfa_offset 40
 1996 0976 5D       		popq	%rbp
 1997              		.cfi_def_cfa_offset 32
 1998 0977 415C     		popq	%r12
 1999              		.cfi_def_cfa_offset 24
 2000 0979 415D     		popq	%r13
 2001              		.cfi_def_cfa_offset 16
 2002 097b 415E     		popq	%r14
 2003              		.cfi_def_cfa_offset 8
 2004 097d C3       		ret
 2005              		.cfi_endproc
 2006              	.LFE71:
 2008              		.section	.text.unlikely
 2009              	.LCOLDE41:
 2010              		.text
 2011              	.LHOTE41:
 2012              		.section	.text.unlikely
 2013              	.LCOLDB42:
 2014              		.text
 2015              	.LHOTB42:
 2016 097e 6690     		.p2align 4,,15
 2017              		.globl	xor
 2019              	xor:
 2020              	.LFB72:
 2021              		.cfi_startproc
 2022 0980 4038F7   		cmpb	%sil, %dil
 2023 0983 0F95C0   		setne	%al
 2024 0986 83C030   		addl	$48, %eax
 2025 0989 C3       		ret
 2026              		.cfi_endproc
 2027              	.LFE72:
 2029              		.section	.text.unlikely
 2030              	.LCOLDE42:
 2031              		.text
 2032              	.LHOTE42:
 2033              		.section	.text.unlikely
 2034              	.LCOLDB43:
 2035              		.text
 2036              	.LHOTB43:
 2037 098a 660F1F44 		.p2align 4,,15
 2037      0000
 2038              		.globl	and
 2040              	and:
 2041              	.LFB73:
 2042              		.cfi_startproc
 2043 0990 4080FF31 		cmpb	$49, %dil
 2044 0994 7512     		jne	.L303
 2045 0996 4080FE31 		cmpb	$49, %sil
 2046 099a B8310000 		movl	$49, %eax
 2046      00
 2047 099f 7507     		jne	.L303
 2048 09a1 F3C3     		rep ret
 2049              		.p2align 4,,10
 2050 09a3 0F1F4400 		.p2align 3
 2050      00
 2051              	.L303:
 2052 09a8 B8300000 		movl	$48, %eax
 2052      00
 2053 09ad C3       		ret
 2054              		.cfi_endproc
 2055              	.LFE73:
 2057              		.section	.text.unlikely
 2058              	.LCOLDE43:
 2059              		.text
 2060              	.LHOTE43:
 2061              		.section	.text.unlikely
 2062              	.LCOLDB46:
 2063              		.text
 2064              	.LHOTB46:
 2065 09ae 6690     		.p2align 4,,15
 2066              		.globl	decrypt
 2068              	decrypt:
 2069              	.LFB74:
 2070              		.cfi_startproc
 2071 09b0 4157     		pushq	%r15
 2072              		.cfi_def_cfa_offset 16
 2073              		.cfi_offset 15, -16
 2074 09b2 4156     		pushq	%r14
 2075              		.cfi_def_cfa_offset 24
 2076              		.cfi_offset 14, -24
 2077 09b4 4155     		pushq	%r13
 2078              		.cfi_def_cfa_offset 32
 2079              		.cfi_offset 13, -32
 2080 09b6 4154     		pushq	%r12
 2081              		.cfi_def_cfa_offset 40
 2082              		.cfi_offset 12, -40
 2083 09b8 4989F5   		movq	%rsi, %r13
 2084 09bb 55       		pushq	%rbp
 2085              		.cfi_def_cfa_offset 48
 2086              		.cfi_offset 6, -48
 2087 09bc 53       		pushq	%rbx
 2088              		.cfi_def_cfa_offset 56
 2089              		.cfi_offset 3, -56
 2090 09bd 4889FD   		movq	%rdi, %rbp
 2091 09c0 BF210000 		movl	$33, %edi
 2091      00
 2092 09c5 4883EC08 		subq	$8, %rsp
 2093              		.cfi_def_cfa_offset 64
 2094 09c9 E8000000 		call	malloc
 2094      00
 2095 09ce 4C89EA   		movq	%r13, %rdx
 2096 09d1 4889C3   		movq	%rax, %rbx
 2097 09d4 48F7DA   		negq	%rdx
 2098 09d7 83E20F   		andl	$15, %edx
 2099 09da 0F845508 		je	.L386
 2099      0000
 2100 09e0 31C0     		xorl	%eax, %eax
 2101 09e2 41807D00 		cmpb	$48, 0(%r13)
 2101      30
 2102 09e7 0F94C0   		sete	%al
 2103 09ea 83FA01   		cmpl	$1, %edx
 2104 09ed 0F840C09 		je	.L387
 2104      0000
 2105 09f3 31C9     		xorl	%ecx, %ecx
 2106 09f5 41807D01 		cmpb	$48, 1(%r13)
 2106      30
 2107 09fa 0F94C1   		sete	%cl
 2108 09fd 01C8     		addl	%ecx, %eax
 2109 09ff 83FA02   		cmpl	$2, %edx
 2110 0a02 0F840609 		je	.L388
 2110      0000
 2111 0a08 31C9     		xorl	%ecx, %ecx
 2112 0a0a 41807D02 		cmpb	$48, 2(%r13)
 2112      30
 2113 0a0f 0F94C1   		sete	%cl
 2114 0a12 01C8     		addl	%ecx, %eax
 2115 0a14 83FA03   		cmpl	$3, %edx
 2116 0a17 0F840009 		je	.L389
 2116      0000
 2117 0a1d 31C9     		xorl	%ecx, %ecx
 2118 0a1f 41807D03 		cmpb	$48, 3(%r13)
 2118      30
 2119 0a24 0F94C1   		sete	%cl
 2120 0a27 01C8     		addl	%ecx, %eax
 2121 0a29 83FA04   		cmpl	$4, %edx
 2122 0a2c 0F84FA08 		je	.L390
 2122      0000
 2123 0a32 31C9     		xorl	%ecx, %ecx
 2124 0a34 41807D04 		cmpb	$48, 4(%r13)
 2124      30
 2125 0a39 0F94C1   		sete	%cl
 2126 0a3c 01C8     		addl	%ecx, %eax
 2127 0a3e 83FA05   		cmpl	$5, %edx
 2128 0a41 0F84F408 		je	.L391
 2128      0000
 2129 0a47 31C9     		xorl	%ecx, %ecx
 2130 0a49 41807D05 		cmpb	$48, 5(%r13)
 2130      30
 2131 0a4e 0F94C1   		sete	%cl
 2132 0a51 01C8     		addl	%ecx, %eax
 2133 0a53 83FA06   		cmpl	$6, %edx
 2134 0a56 0F84EE08 		je	.L392
 2134      0000
 2135 0a5c 31C9     		xorl	%ecx, %ecx
 2136 0a5e 41807D06 		cmpb	$48, 6(%r13)
 2136      30
 2137 0a63 0F94C1   		sete	%cl
 2138 0a66 01C8     		addl	%ecx, %eax
 2139 0a68 83FA07   		cmpl	$7, %edx
 2140 0a6b 0F84E808 		je	.L393
 2140      0000
 2141 0a71 31C9     		xorl	%ecx, %ecx
 2142 0a73 41807D07 		cmpb	$48, 7(%r13)
 2142      30
 2143 0a78 0F94C1   		sete	%cl
 2144 0a7b 01C8     		addl	%ecx, %eax
 2145 0a7d 83FA08   		cmpl	$8, %edx
 2146 0a80 0F84E208 		je	.L394
 2146      0000
 2147 0a86 31C9     		xorl	%ecx, %ecx
 2148 0a88 41807D08 		cmpb	$48, 8(%r13)
 2148      30
 2149 0a8d 0F94C1   		sete	%cl
 2150 0a90 01C8     		addl	%ecx, %eax
 2151 0a92 83FA09   		cmpl	$9, %edx
 2152 0a95 0F84DC08 		je	.L395
 2152      0000
 2153 0a9b 31C9     		xorl	%ecx, %ecx
 2154 0a9d 41807D09 		cmpb	$48, 9(%r13)
 2154      30
 2155 0aa2 0F94C1   		sete	%cl
 2156 0aa5 01C8     		addl	%ecx, %eax
 2157 0aa7 83FA0A   		cmpl	$10, %edx
 2158 0aaa 0F84D608 		je	.L396
 2158      0000
 2159 0ab0 31C9     		xorl	%ecx, %ecx
 2160 0ab2 41807D0A 		cmpb	$48, 10(%r13)
 2160      30
 2161 0ab7 0F94C1   		sete	%cl
 2162 0aba 01C8     		addl	%ecx, %eax
 2163 0abc 83FA0B   		cmpl	$11, %edx
 2164 0abf 0F84D008 		je	.L397
 2164      0000
 2165 0ac5 31C9     		xorl	%ecx, %ecx
 2166 0ac7 41807D0B 		cmpb	$48, 11(%r13)
 2166      30
 2167 0acc 0F94C1   		sete	%cl
 2168 0acf 01C8     		addl	%ecx, %eax
 2169 0ad1 83FA0C   		cmpl	$12, %edx
 2170 0ad4 0F84CA08 		je	.L398
 2170      0000
 2171 0ada 31C9     		xorl	%ecx, %ecx
 2172 0adc 41807D0C 		cmpb	$48, 12(%r13)
 2172      30
 2173 0ae1 0F94C1   		sete	%cl
 2174 0ae4 01C8     		addl	%ecx, %eax
 2175 0ae6 83FA0D   		cmpl	$13, %edx
 2176 0ae9 0F84C408 		je	.L399
 2176      0000
 2177 0aef 31C9     		xorl	%ecx, %ecx
 2178 0af1 41807D0D 		cmpb	$48, 13(%r13)
 2178      30
 2179 0af6 0F94C1   		sete	%cl
 2180 0af9 01C8     		addl	%ecx, %eax
 2181 0afb 83FA0F   		cmpl	$15, %edx
 2182 0afe 0F85EC07 		jne	.L400
 2182      0000
 2183 0b04 31C9     		xorl	%ecx, %ecx
 2184 0b06 41807D0E 		cmpb	$48, 14(%r13)
 2184      30
 2185 0b0b BE110000 		movl	$17, %esi
 2185      00
 2186 0b10 0F94C1   		sete	%cl
 2187 0b13 01C8     		addl	%ecx, %eax
 2188 0b15 B90F0000 		movl	$15, %ecx
 2188      00
 2189              	.L309:
 2190 0b1a BF200000 		movl	$32, %edi
 2190      00
 2191 0b1f 4189D0   		movl	%edx, %r8d
 2192 0b22 41B90100 		movl	$1, %r9d
 2192      0000
 2193 0b28 29D7     		subl	%edx, %edi
 2194 0b2a 89FA     		movl	%edi, %edx
 2195 0b2c BF100000 		movl	$16, %edi
 2195      00
 2196              	.L308:
 2197 0b31 4D01E8   		addq	%r13, %r8
 2198 0b34 660F6F2D 		movdqa	.LC44(%rip), %xmm5
 2198      00000000 
 2199 0b3c 660FEFE4 		pxor	%xmm4, %xmm4
 2200 0b40 4183F902 		cmpl	$2, %r9d
 2201 0b44 66410F6F 		movdqa	(%r8), %xmm1
 2201      08
 2202 0b49 660F6F15 		movdqa	.LC45(%rip), %xmm2
 2202      00000000 
 2203 0b51 660F74CD 		pcmpeqb	%xmm5, %xmm1
 2204 0b55 660F6FDC 		movdqa	%xmm4, %xmm3
 2205 0b59 660FDBCA 		pand	%xmm2, %xmm1
 2206 0b5d 660F64D9 		pcmpgtb	%xmm1, %xmm3
 2207 0b61 660F6FC1 		movdqa	%xmm1, %xmm0
 2208 0b65 660F68CB 		punpckhbw	%xmm3, %xmm1
 2209 0b69 660F60C3 		punpcklbw	%xmm3, %xmm0
 2210 0b6d 660FEFDB 		pxor	%xmm3, %xmm3
 2211 0b71 660F6FF0 		movdqa	%xmm0, %xmm6
 2212 0b75 660F6FFB 		movdqa	%xmm3, %xmm7
 2213 0b79 660F65F8 		pcmpgtw	%xmm0, %xmm7
 2214 0b7d 660F61F7 		punpcklwd	%xmm7, %xmm6
 2215 0b81 660F69C7 		punpckhwd	%xmm7, %xmm0
 2216 0b85 660F6FFB 		movdqa	%xmm3, %xmm7
 2217 0b89 660F65F9 		pcmpgtw	%xmm1, %xmm7
 2218 0b8d 660FFEC6 		paddd	%xmm6, %xmm0
 2219 0b91 660F6FF1 		movdqa	%xmm1, %xmm6
 2220 0b95 660F69CF 		punpckhwd	%xmm7, %xmm1
 2221 0b99 660F61F7 		punpcklwd	%xmm7, %xmm6
 2222 0b9d 660FFEC6 		paddd	%xmm6, %xmm0
 2223 0ba1 660FFEC1 		paddd	%xmm1, %xmm0
 2224 0ba5 7552     		jne	.L310
 2225 0ba7 66410F6F 		movdqa	16(%r8), %xmm1
 2225      4810
 2226 0bad 660F74CD 		pcmpeqb	%xmm5, %xmm1
 2227 0bb1 660F6FEB 		movdqa	%xmm3, %xmm5
 2228 0bb5 660FDBCA 		pand	%xmm2, %xmm1
 2229 0bb9 660F64E1 		pcmpgtb	%xmm1, %xmm4
 2230 0bbd 660F6FD1 		movdqa	%xmm1, %xmm2
 2231 0bc1 660F60D4 		punpcklbw	%xmm4, %xmm2
 2232 0bc5 660F68CC 		punpckhbw	%xmm4, %xmm1
 2233 0bc9 660F65EA 		pcmpgtw	%xmm2, %xmm5
 2234 0bcd 660F6FE2 		movdqa	%xmm2, %xmm4
 2235 0bd1 660F65D9 		pcmpgtw	%xmm1, %xmm3
 2236 0bd5 660F61E5 		punpcklwd	%xmm5, %xmm4
 2237 0bd9 660F69D5 		punpckhwd	%xmm5, %xmm2
 2238 0bdd 660FFEC4 		paddd	%xmm4, %xmm0
 2239 0be1 660FFED0 		paddd	%xmm0, %xmm2
 2240 0be5 660F6FC1 		movdqa	%xmm1, %xmm0
 2241 0be9 660F69CB 		punpckhwd	%xmm3, %xmm1
 2242 0bed 660F61C3 		punpcklwd	%xmm3, %xmm0
 2243 0bf1 660FFEC2 		paddd	%xmm2, %xmm0
 2244 0bf5 660FFEC1 		paddd	%xmm1, %xmm0
 2245              	.L310:
 2246 0bf9 660F6FC8 		movdqa	%xmm0, %xmm1
 2247 0bfd 29FE     		subl	%edi, %esi
 2248 0bff 660F73D9 		psrldq	$8, %xmm1
 2248      08
 2249 0c04 660FFEC1 		paddd	%xmm1, %xmm0
 2250 0c08 660F6FC8 		movdqa	%xmm0, %xmm1
 2251 0c0c 660F73D9 		psrldq	$4, %xmm1
 2251      04
 2252 0c11 660FFEC1 		paddd	%xmm1, %xmm0
 2253 0c15 66410F7E 		movd	%xmm0, %r12d
 2253      C4
 2254 0c1a 4101C4   		addl	%eax, %r12d
 2255 0c1d 39D7     		cmpl	%edx, %edi
 2256 0c1f 8D040F   		leal	(%rdi,%rcx), %eax
 2257 0c22 0F84A101 		je	.L312
 2257      0000
 2258 0c28 4863D0   		movslq	%eax, %rdx
 2259 0c2b 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2259      0030
 2260 0c31 0F94C2   		sete	%dl
 2261 0c34 0FB6D2   		movzbl	%dl, %edx
 2262 0c37 4101D4   		addl	%edx, %r12d
 2263 0c3a 83FE01   		cmpl	$1, %esi
 2264 0c3d 8D5001   		leal	1(%rax), %edx
 2265 0c40 0F848301 		je	.L312
 2265      0000
 2266 0c46 4863D2   		movslq	%edx, %rdx
 2267 0c49 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2267      0030
 2268 0c4f 0F94C2   		sete	%dl
 2269 0c52 0FB6D2   		movzbl	%dl, %edx
 2270 0c55 4101D4   		addl	%edx, %r12d
 2271 0c58 83FE02   		cmpl	$2, %esi
 2272 0c5b 8D5002   		leal	2(%rax), %edx
 2273 0c5e 0F846501 		je	.L312
 2273      0000
 2274 0c64 4863D2   		movslq	%edx, %rdx
 2275 0c67 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2275      0030
 2276 0c6d 0F94C2   		sete	%dl
 2277 0c70 0FB6D2   		movzbl	%dl, %edx
 2278 0c73 4101D4   		addl	%edx, %r12d
 2279 0c76 83FE03   		cmpl	$3, %esi
 2280 0c79 8D5003   		leal	3(%rax), %edx
 2281 0c7c 0F844701 		je	.L312
 2281      0000
 2282 0c82 4863D2   		movslq	%edx, %rdx
 2283 0c85 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2283      0030
 2284 0c8b 0F94C2   		sete	%dl
 2285 0c8e 0FB6D2   		movzbl	%dl, %edx
 2286 0c91 4101D4   		addl	%edx, %r12d
 2287 0c94 83FE04   		cmpl	$4, %esi
 2288 0c97 8D5004   		leal	4(%rax), %edx
 2289 0c9a 0F842901 		je	.L312
 2289      0000
 2290 0ca0 4863D2   		movslq	%edx, %rdx
 2291 0ca3 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2291      0030
 2292 0ca9 0F94C2   		sete	%dl
 2293 0cac 0FB6D2   		movzbl	%dl, %edx
 2294 0caf 4101D4   		addl	%edx, %r12d
 2295 0cb2 83FE05   		cmpl	$5, %esi
 2296 0cb5 8D5005   		leal	5(%rax), %edx
 2297 0cb8 0F840B01 		je	.L312
 2297      0000
 2298 0cbe 4863D2   		movslq	%edx, %rdx
 2299 0cc1 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2299      0030
 2300 0cc7 0F94C2   		sete	%dl
 2301 0cca 0FB6D2   		movzbl	%dl, %edx
 2302 0ccd 4101D4   		addl	%edx, %r12d
 2303 0cd0 83FE06   		cmpl	$6, %esi
 2304 0cd3 8D5006   		leal	6(%rax), %edx
 2305 0cd6 0F84ED00 		je	.L312
 2305      0000
 2306 0cdc 4863D2   		movslq	%edx, %rdx
 2307 0cdf 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2307      0030
 2308 0ce5 0F94C2   		sete	%dl
 2309 0ce8 0FB6D2   		movzbl	%dl, %edx
 2310 0ceb 4101D4   		addl	%edx, %r12d
 2311 0cee 83FE07   		cmpl	$7, %esi
 2312 0cf1 8D5007   		leal	7(%rax), %edx
 2313 0cf4 0F84CF00 		je	.L312
 2313      0000
 2314 0cfa 4863D2   		movslq	%edx, %rdx
 2315 0cfd 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2315      0030
 2316 0d03 0F94C2   		sete	%dl
 2317 0d06 0FB6D2   		movzbl	%dl, %edx
 2318 0d09 4101D4   		addl	%edx, %r12d
 2319 0d0c 83FE08   		cmpl	$8, %esi
 2320 0d0f 8D5008   		leal	8(%rax), %edx
 2321 0d12 0F84B100 		je	.L312
 2321      0000
 2322 0d18 4863D2   		movslq	%edx, %rdx
 2323 0d1b 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2323      0030
 2324 0d21 0F94C2   		sete	%dl
 2325 0d24 0FB6D2   		movzbl	%dl, %edx
 2326 0d27 4101D4   		addl	%edx, %r12d
 2327 0d2a 83FE09   		cmpl	$9, %esi
 2328 0d2d 8D5009   		leal	9(%rax), %edx
 2329 0d30 0F849300 		je	.L312
 2329      0000
 2330 0d36 4863D2   		movslq	%edx, %rdx
 2331 0d39 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2331      0030
 2332 0d3f 0F94C2   		sete	%dl
 2333 0d42 0FB6D2   		movzbl	%dl, %edx
 2334 0d45 4101D4   		addl	%edx, %r12d
 2335 0d48 83FE0A   		cmpl	$10, %esi
 2336 0d4b 8D500A   		leal	10(%rax), %edx
 2337 0d4e 7479     		je	.L312
 2338 0d50 4863D2   		movslq	%edx, %rdx
 2339 0d53 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2339      0030
 2340 0d59 0F94C2   		sete	%dl
 2341 0d5c 0FB6D2   		movzbl	%dl, %edx
 2342 0d5f 4101D4   		addl	%edx, %r12d
 2343 0d62 83FE0B   		cmpl	$11, %esi
 2344 0d65 8D500B   		leal	11(%rax), %edx
 2345 0d68 745F     		je	.L312
 2346 0d6a 4863D2   		movslq	%edx, %rdx
 2347 0d6d 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2347      0030
 2348 0d73 0F94C2   		sete	%dl
 2349 0d76 0FB6D2   		movzbl	%dl, %edx
 2350 0d79 4101D4   		addl	%edx, %r12d
 2351 0d7c 83FE0C   		cmpl	$12, %esi
 2352 0d7f 8D500C   		leal	12(%rax), %edx
 2353 0d82 7445     		je	.L312
 2354 0d84 4863D2   		movslq	%edx, %rdx
 2355 0d87 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2355      0030
 2356 0d8d 0F94C2   		sete	%dl
 2357 0d90 0FB6D2   		movzbl	%dl, %edx
 2358 0d93 4101D4   		addl	%edx, %r12d
 2359 0d96 83FE0D   		cmpl	$13, %esi
 2360 0d99 8D500D   		leal	13(%rax), %edx
 2361 0d9c 742B     		je	.L312
 2362 0d9e 4863D2   		movslq	%edx, %rdx
 2363 0da1 41807C15 		cmpb	$48, 0(%r13,%rdx)
 2363      0030
 2364 0da7 0F94C2   		sete	%dl
 2365 0daa 83C00E   		addl	$14, %eax
 2366 0dad 0FB6D2   		movzbl	%dl, %edx
 2367 0db0 4101D4   		addl	%edx, %r12d
 2368 0db3 83FE0E   		cmpl	$14, %esi
 2369 0db6 7411     		je	.L312
 2370 0db8 4898     		cltq
 2371 0dba 41807C05 		cmpb	$48, 0(%r13,%rax)
 2371      0030
 2372 0dc0 0F94C0   		sete	%al
 2373 0dc3 0FB6C0   		movzbl	%al, %eax
 2374 0dc6 4101C4   		addl	%eax, %r12d
 2375              	.L312:
 2376 0dc9 488B4500 		movq	0(%rbp), %rax
 2377 0dcd BF050000 		movl	$5, %edi
 2377      00
 2378 0dd2 C6432000 		movb	$0, 32(%rbx)
 2379 0dd6 488903   		movq	%rax, (%rbx)
 2380 0dd9 488B4508 		movq	8(%rbp), %rax
 2381 0ddd 48894308 		movq	%rax, 8(%rbx)
 2382 0de1 488B4510 		movq	16(%rbp), %rax
 2383 0de5 48894310 		movq	%rax, 16(%rbx)
 2384 0de9 488B4518 		movq	24(%rbp), %rax
 2385 0ded 48894318 		movq	%rax, 24(%rbx)
 2386 0df1 E8000000 		call	malloc
 2386      00
 2387 0df6 C6400400 		movb	$0, 4(%rax)
 2388 0dfa 4889C5   		movq	%rax, %rbp
 2389 0dfd 410FB645 		movzbl	7(%r13), %eax
 2389      07
 2390 0e02 41384503 		cmpb	%al, 3(%r13)
 2391 0e06 0F95C0   		setne	%al
 2392 0e09 83C030   		addl	$48, %eax
 2393 0e0c 4138450B 		cmpb	%al, 11(%r13)
 2394 0e10 0F95C0   		setne	%al
 2395 0e13 83C030   		addl	$48, %eax
 2396 0e16 4138450F 		cmpb	%al, 15(%r13)
 2397 0e1a 0F95C0   		setne	%al
 2398 0e1d 83C030   		addl	$48, %eax
 2399 0e20 41384513 		cmpb	%al, 19(%r13)
 2400 0e24 0F95C0   		setne	%al
 2401 0e27 83C030   		addl	$48, %eax
 2402 0e2a 41384517 		cmpb	%al, 23(%r13)
 2403 0e2e 0F95C0   		setne	%al
 2404 0e31 83C030   		addl	$48, %eax
 2405 0e34 4138451B 		cmpb	%al, 27(%r13)
 2406 0e38 0F95C0   		setne	%al
 2407 0e3b 83C030   		addl	$48, %eax
 2408 0e3e 4138451F 		cmpb	%al, 31(%r13)
 2409 0e42 0F95C0   		setne	%al
 2410 0e45 83C030   		addl	$48, %eax
 2411 0e48 884503   		movb	%al, 3(%rbp)
 2412 0e4b 410FB645 		movzbl	6(%r13), %eax
 2412      06
 2413 0e50 41384502 		cmpb	%al, 2(%r13)
 2414 0e54 0F95C0   		setne	%al
 2415 0e57 83C030   		addl	$48, %eax
 2416 0e5a 4138450A 		cmpb	%al, 10(%r13)
 2417 0e5e 0F95C0   		setne	%al
 2418 0e61 83C030   		addl	$48, %eax
 2419 0e64 4138450E 		cmpb	%al, 14(%r13)
 2420 0e68 0F95C0   		setne	%al
 2421 0e6b 83C030   		addl	$48, %eax
 2422 0e6e 41384512 		cmpb	%al, 18(%r13)
 2423 0e72 0F95C0   		setne	%al
 2424 0e75 83C030   		addl	$48, %eax
 2425 0e78 41384516 		cmpb	%al, 22(%r13)
 2426 0e7c 0F95C0   		setne	%al
 2427 0e7f 83C030   		addl	$48, %eax
 2428 0e82 4138451A 		cmpb	%al, 26(%r13)
 2429 0e86 0F95C0   		setne	%al
 2430 0e89 83C030   		addl	$48, %eax
 2431 0e8c 4138451E 		cmpb	%al, 30(%r13)
 2432 0e90 0F95C0   		setne	%al
 2433 0e93 83C030   		addl	$48, %eax
 2434 0e96 884502   		movb	%al, 2(%rbp)
 2435 0e99 410FB645 		movzbl	5(%r13), %eax
 2435      05
 2436 0e9e 41384501 		cmpb	%al, 1(%r13)
 2437 0ea2 0F95C0   		setne	%al
 2438 0ea5 83C030   		addl	$48, %eax
 2439 0ea8 413A4509 		cmpb	9(%r13), %al
 2440 0eac 0F95C0   		setne	%al
 2441 0eaf 83C030   		addl	$48, %eax
 2442 0eb2 413A450D 		cmpb	13(%r13), %al
 2443 0eb6 0F95C0   		setne	%al
 2444 0eb9 83C030   		addl	$48, %eax
 2445 0ebc 413A4511 		cmpb	17(%r13), %al
 2446 0ec0 0F95C0   		setne	%al
 2447 0ec3 83C030   		addl	$48, %eax
 2448 0ec6 413A4515 		cmpb	21(%r13), %al
 2449 0eca 0F95C0   		setne	%al
 2450 0ecd 83C030   		addl	$48, %eax
 2451 0ed0 413A4519 		cmpb	25(%r13), %al
 2452 0ed4 0F95C0   		setne	%al
 2453 0ed7 83C030   		addl	$48, %eax
 2454 0eda 4138451D 		cmpb	%al, 29(%r13)
 2455 0ede 0F95C0   		setne	%al
 2456 0ee1 83C030   		addl	$48, %eax
 2457 0ee4 884501   		movb	%al, 1(%rbp)
 2458 0ee7 410FB645 		movzbl	4(%r13), %eax
 2458      04
 2459 0eec 41384500 		cmpb	%al, 0(%r13)
 2460 0ef0 0F95C0   		setne	%al
 2461 0ef3 83C030   		addl	$48, %eax
 2462 0ef6 41384508 		cmpb	%al, 8(%r13)
 2463 0efa 0F95C0   		setne	%al
 2464 0efd 83C030   		addl	$48, %eax
 2465 0f00 4138450C 		cmpb	%al, 12(%r13)
 2466 0f04 0F95C0   		setne	%al
 2467 0f07 83C030   		addl	$48, %eax
 2468 0f0a 41384510 		cmpb	%al, 16(%r13)
 2469 0f0e 0F95C0   		setne	%al
 2470 0f11 83C030   		addl	$48, %eax
 2471 0f14 41384514 		cmpb	%al, 20(%r13)
 2472 0f18 0F95C0   		setne	%al
 2473 0f1b 83C030   		addl	$48, %eax
 2474 0f1e 41384518 		cmpb	%al, 24(%r13)
 2475 0f22 0F95C0   		setne	%al
 2476 0f25 83C030   		addl	$48, %eax
 2477 0f28 4138451C 		cmpb	%al, 28(%r13)
 2478 0f2c 0F848503 		je	.L537
 2478      0000
 2479 0f32 BF040000 		movl	$4, %edi
 2479      00
 2480 0f37 C6450031 		movb	$49, 0(%rbp)
 2481 0f3b E8000000 		call	malloc
 2481      00
 2482 0f40 BF040000 		movl	$4, %edi
 2482      00
 2483 0f45 4989C5   		movq	%rax, %r13
 2484 0f48 E8000000 		call	malloc
 2484      00
 2485 0f4d 488D7801 		leaq	1(%rax), %rdi
 2486 0f51 41C74500 		movl	$808464432, 0(%r13)
 2486      30303030 
 2487 0f59 C60030   		movb	$48, (%rax)
 2488 0f5c 41C64500 		movb	$49, 0(%r13)
 2488      31
 2489 0f61 BE310000 		movl	$49, %esi
 2489      00
 2490 0f66 B9300000 		movl	$48, %ecx
 2490      00
 2491              	.L379:
 2492 0f6b 0FB65501 		movzbl	1(%rbp), %edx
 2493 0f6f 38D1     		cmpb	%dl, %cl
 2494 0f71 0F95C1   		setne	%cl
 2495 0f74 83C130   		addl	$48, %ecx
 2496 0f77 80FA31   		cmpb	$49, %dl
 2497 0f7a 880F     		movb	%cl, (%rdi)
 2498 0f7c 0F841C03 		je	.L538
 2498      0000
 2499 0f82 4080FE31 		cmpb	$49, %sil
 2500 0f86 0F84FA02 		je	.L345
 2500      0000
 2501 0f8c 488D7802 		leaq	2(%rax), %rdi
 2502 0f90 41C64501 		movb	$48, 1(%r13)
 2502      30
 2503 0f95 BA300000 		movl	$48, %edx
 2503      00
 2504 0f9a BE310000 		movl	$49, %esi
 2504      00
 2505              	.L380:
 2506 0f9f 0FB64D02 		movzbl	2(%rbp), %ecx
 2507 0fa3 4038F1   		cmpb	%sil, %cl
 2508 0fa6 400F95C6 		setne	%sil
 2509 0faa 83C630   		addl	$48, %esi
 2510 0fad 80F931   		cmpb	$49, %cl
 2511 0fb0 408837   		movb	%sil, (%rdi)
 2512 0fb3 0F84B502 		je	.L539
 2512      0000
 2513 0fb9 80FA31   		cmpb	$49, %dl
 2514 0fbc 0F849402 		je	.L350
 2514      0000
 2515 0fc2 488D7803 		leaq	3(%rax), %rdi
 2516 0fc6 41C64502 		movb	$48, 2(%r13)
 2516      30
 2517 0fcb B9300000 		movl	$48, %ecx
 2517      00
 2518 0fd0 BE310000 		movl	$49, %esi
 2518      00
 2519              	.L381:
 2520 0fd5 0FB65503 		movzbl	3(%rbp), %edx
 2521 0fd9 4038F2   		cmpb	%sil, %dl
 2522 0fdc 400F95C6 		setne	%sil
 2523 0fe0 83C630   		addl	$48, %esi
 2524 0fe3 80FA31   		cmpb	$49, %dl
 2525 0fe6 408837   		movb	%sil, (%rdi)
 2526 0fe9 7409     		je	.L371
 2527 0feb 80F931   		cmpb	$49, %cl
 2528 0fee 0F94C2   		sete	%dl
 2529 0ff1 83C230   		addl	$48, %edx
 2530              	.L371:
 2531 0ff4 8B00     		movl	(%rax), %eax
 2532 0ff6 4585E4   		testl	%r12d, %r12d
 2533 0ff9 41885503 		movb	%dl, 3(%r13)
 2534 0ffd 894500   		movl	%eax, 0(%rbp)
 2535 1000 0F8E5801 		jle	.L524
 2535      0000
 2536 1006 440FB675 		movzbl	0(%rbp), %r14d
 2536      00
 2537 100b 4531FF   		xorl	%r15d, %r15d
 2538 100e 6690     		.p2align 4,,10
 2539              		.p2align 3
 2540              	.L368:
 2541 1010 31C0     		xorl	%eax, %eax
 2542              		.p2align 4,,10
 2543 1012 660F1F44 		.p2align 3
 2543      0000
 2544              	.L356:
 2545 1018 4889C2   		movq	%rax, %rdx
 2546 101b 0FB63403 		movzbl	(%rbx,%rax), %esi
 2547 101f 83E203   		andl	$3, %edx
 2548 1022 40387415 		cmpb	%sil, 0(%rbp,%rdx)
 2548      00
 2549 1027 0F95C2   		setne	%dl
 2550 102a 83C230   		addl	$48, %edx
 2551 102d 881403   		movb	%dl, (%rbx,%rax)
 2552 1030 4883C001 		addq	$1, %rax
 2553 1034 4883F820 		cmpq	$32, %rax
 2554 1038 75DE     		jne	.L356
 2555 103a BF050000 		movl	$5, %edi
 2555      00
 2556 103f E8000000 		call	malloc
 2556      00
 2557 1044 BF050000 		movl	$5, %edi
 2557      00
 2558 1049 4989C5   		movq	%rax, %r13
 2559 104c E8000000 		call	malloc
 2559      00
 2560 1051 4180FE31 		cmpb	$49, %r14b
 2561 1055 41C64500 		movb	$48, 0(%r13)
 2561      30
 2562 105a 41C64501 		movb	$48, 1(%r13)
 2562      30
 2563 105f 41C64502 		movb	$48, 2(%r13)
 2563      30
 2564 1064 41C64503 		movb	$48, 3(%r13)
 2564      30
 2565 1069 0F849F01 		je	.L540
 2565      0000
 2566 106f C60031   		movb	$49, (%rax)
 2567 1072 31D2     		xorl	%edx, %edx
 2568 1074 BF300000 		movl	$48, %edi
 2568      00
 2569 1079 41BE3100 		movl	$49, %r14d
 2569      0000
 2570              	.L372:
 2571 107f 0FB64D01 		movzbl	1(%rbp), %ecx
 2572 1083 4138CE   		cmpb	%cl, %r14b
 2573 1086 400F95C6 		setne	%sil
 2574 108a 83C630   		addl	$48, %esi
 2575 108d 80F931   		cmpb	$49, %cl
 2576 1090 40887001 		movb	%sil, 1(%rax)
 2577 1094 0F84FC00 		je	.L541
 2577      0000
 2578 109a 4080FF31 		cmpb	$49, %dil
 2579 109e 0F84FC00 		je	.L383
 2579      0000
 2580              	.L382:
 2581 10a4 80F931   		cmpb	$49, %cl
 2582 10a7 0F94C1   		sete	%cl
 2583 10aa 21CA     		andl	%ecx, %edx
 2584 10ac 80FA01   		cmpb	$1, %dl
 2585 10af 89D7     		movl	%edx, %edi
 2586 10b1 4519C0   		sbbl	%r8d, %r8d
 2587 10b4 F7DF     		negl	%edi
 2588 10b6 4183C031 		addl	$49, %r8d
 2589 10ba 83C731   		addl	$49, %edi
 2590              	.L374:
 2591 10bd 0FB64D02 		movzbl	2(%rbp), %ecx
 2592 10c1 45884501 		movb	%r8b, 1(%r13)
 2593 10c5 4038CF   		cmpb	%cl, %dil
 2594 10c8 400F95C7 		setne	%dil
 2595 10cc 83C730   		addl	$48, %edi
 2596 10cf 80F931   		cmpb	$49, %cl
 2597 10d2 40887802 		movb	%dil, 2(%rax)
 2598 10d6 0F849400 		je	.L542
 2598      0000
 2599 10dc 4180F831 		cmpb	$49, %r8b
 2600 10e0 0F849400 		je	.L385
 2600      0000
 2601              	.L384:
 2602 10e6 80F931   		cmpb	$49, %cl
 2603 10e9 0F94C1   		sete	%cl
 2604 10ec 21CA     		andl	%ecx, %edx
 2605 10ee 80FA01   		cmpb	$1, %dl
 2606 10f1 4189D0   		movl	%edx, %r8d
 2607 10f4 4519C9   		sbbl	%r9d, %r9d
 2608 10f7 41F7D8   		negl	%r8d
 2609 10fa 4183C131 		addl	$49, %r9d
 2610 10fe 4183C031 		addl	$49, %r8d
 2611              	.L376:
 2612 1102 0FB64D03 		movzbl	3(%rbp), %ecx
 2613 1106 45884D02 		movb	%r9b, 2(%r13)
 2614 110a 4138C8   		cmpb	%cl, %r8b
 2615 110d 410F95C0 		setne	%r8b
 2616 1111 4183C030 		addl	$48, %r8d
 2617 1115 80F931   		cmpb	$49, %cl
 2618 1118 44884003 		movb	%r8b, 3(%rax)
 2619 111c 0F84D300 		je	.L543
 2619      0000
 2620 1122 4180F931 		cmpb	$49, %r9b
 2621 1126 0F84FF00 		je	.L544
 2621      0000
 2622              	.L377:
 2623 112c 80F931   		cmpb	$49, %cl
 2624 112f 0F858D02 		jne	.L434
 2624      0000
 2625 1135 84D2     		testb	%dl, %dl
 2626 1137 0F848502 		je	.L434
 2626      0000
 2627              	.L370:
 2628 113d 4183C701 		addl	$1, %r15d
 2629 1141 41884D03 		movb	%cl, 3(%r13)
 2630 1145 44887500 		movb	%r14b, 0(%rbp)
 2631 1149 4539FC   		cmpl	%r15d, %r12d
 2632 114c 40887501 		movb	%sil, 1(%rbp)
 2633 1150 40887D02 		movb	%dil, 2(%rbp)
 2634 1154 44884503 		movb	%r8b, 3(%rbp)
 2635 1158 0F85B2FE 		jne	.L368
 2635      FFFF
 2636              	.L524:
 2637 115e 4883C408 		addq	$8, %rsp
 2638              		.cfi_remember_state
 2639              		.cfi_def_cfa_offset 56
 2640 1162 4889D8   		movq	%rbx, %rax
 2641 1165 5B       		popq	%rbx
 2642              		.cfi_def_cfa_offset 48
 2643 1166 5D       		popq	%rbp
 2644              		.cfi_def_cfa_offset 40
 2645 1167 415C     		popq	%r12
 2646              		.cfi_def_cfa_offset 32
 2647 1169 415D     		popq	%r13
 2648              		.cfi_def_cfa_offset 24
 2649 116b 415E     		popq	%r14
 2650              		.cfi_def_cfa_offset 16
 2651 116d 415F     		popq	%r15
 2652              		.cfi_def_cfa_offset 8
 2653 116f C3       		ret
 2654              	.L542:
 2655              		.cfi_restore_state
 2656 1170 4180F831 		cmpb	$49, %r8b
 2657 1174 0F846CFF 		je	.L384
 2657      FFFF
 2658              	.L385:
 2659 117a 80F931   		cmpb	$49, %cl
 2660 117d 7541     		jne	.L437
 2661 117f 84D2     		testb	%dl, %dl
 2662 1181 743D     		je	.L437
 2663 1183 31D2     		xorl	%edx, %edx
 2664 1185 41B93000 		movl	$48, %r9d
 2664      0000
 2665 118b 41B83100 		movl	$49, %r8d
 2665      0000
 2666 1191 E96CFFFF 		jmp	.L376
 2666      FF
 2667              	.L541:
 2668 1196 4080FF31 		cmpb	$49, %dil
 2669 119a 0F8404FF 		je	.L382
 2669      FFFF
 2670              	.L383:
 2671 11a0 80F931   		cmpb	$49, %cl
 2672 11a3 753B     		jne	.L436
 2673 11a5 84D2     		testb	%dl, %dl
 2674 11a7 7437     		je	.L436
 2675 11a9 31D2     		xorl	%edx, %edx
 2676 11ab 41B83000 		movl	$48, %r8d
 2676      0000
 2677 11b1 BF310000 		movl	$49, %edi
 2677      00
 2678 11b6 E902FFFF 		jmp	.L374
 2678      FF
 2679 11bb 0F1F4400 		.p2align 4,,10
 2679      00
 2680              		.p2align 3
 2681              	.L437:
 2682 11c0 BA010000 		movl	$1, %edx
 2682      00
 2683 11c5 41B93100 		movl	$49, %r9d
 2683      0000
 2684 11cb 41B83000 		movl	$48, %r8d
 2684      0000
 2685 11d1 E92CFFFF 		jmp	.L376
 2685      FF
 2686 11d6 662E0F1F 		.p2align 4,,10
 2686      84000000 
 2686      0000
 2687              		.p2align 3
 2688              	.L436:
 2689 11e0 BA010000 		movl	$1, %edx
 2689      00
 2690 11e5 41B83100 		movl	$49, %r8d
 2690      0000
 2691 11eb BF300000 		movl	$48, %edi
 2691      00
 2692 11f0 E9C8FEFF 		jmp	.L374
 2692      FF
 2693              	.L543:
 2694 11f5 4180F931 		cmpb	$49, %r9b
 2695 11f9 0F842DFF 		je	.L377
 2695      FFFF
 2696 11ff 84D2     		testb	%dl, %dl
 2697 1201 B8300000 		movl	$48, %eax
 2697      00
 2698 1206 0F45C8   		cmovne	%eax, %ecx
 2699 1209 E92FFFFF 		jmp	.L370
 2699      FF
 2700              	.L540:
 2701 120e C60030   		movb	$48, (%rax)
 2702 1211 41C64500 		movb	$49, 0(%r13)
 2702      31
 2703 1216 BF310000 		movl	$49, %edi
 2703      00
 2704 121b BA010000 		movl	$1, %edx
 2704      00
 2705 1220 41BE3000 		movl	$48, %r14d
 2705      0000
 2706 1226 E954FEFF 		jmp	.L372
 2706      FF
 2707              	.L544:
 2708 122b B9310000 		movl	$49, %ecx
 2708      00
 2709 1230 E908FFFF 		jmp	.L370
 2709      FF
 2710              	.L386:
 2711 1235 31C0     		xorl	%eax, %eax
 2712 1237 31C9     		xorl	%ecx, %ecx
 2713 1239 BE200000 		movl	$32, %esi
 2713      00
 2714 123e 4531C0   		xorl	%r8d, %r8d
 2715 1241 BA200000 		movl	$32, %edx
 2715      00
 2716 1246 41B90200 		movl	$2, %r9d
 2716      0000
 2717 124c BF200000 		movl	$32, %edi
 2717      00
 2718 1251 E9DBF8FF 		jmp	.L308
 2718      FF
 2719              	.L350:
 2720 1256 41C64502 		movb	$49, 2(%r13)
 2720      31
 2721 125b 488D7803 		leaq	3(%rax), %rdi
 2722 125f B9310000 		movl	$49, %ecx
 2722      00
 2723 1264 BE300000 		movl	$48, %esi
 2723      00
 2724 1269 E967FDFF 		jmp	.L381
 2724      FF
 2725              	.L539:
 2726 126e 80FA31   		cmpb	$49, %dl
 2727 1271 74E3     		je	.L350
 2728 1273 41C64502 		movb	$49, 2(%r13)
 2728      31
 2729 1278 488D7803 		leaq	3(%rax), %rdi
 2730 127c BE300000 		movl	$48, %esi
 2730      00
 2731 1281 E94FFDFF 		jmp	.L381
 2731      FF
 2732              	.L345:
 2733 1286 41C64501 		movb	$49, 1(%r13)
 2733      31
 2734 128b 488D7802 		leaq	2(%rax), %rdi
 2735 128f BA310000 		movl	$49, %edx
 2735      00
 2736 1294 BE300000 		movl	$48, %esi
 2736      00
 2737 1299 E901FDFF 		jmp	.L380
 2737      FF
 2738              	.L538:
 2739 129e 4080FE31 		cmpb	$49, %sil
 2740 12a2 74E2     		je	.L345
 2741 12a4 41C64501 		movb	$49, 1(%r13)
 2741      31
 2742 12a9 488D7802 		leaq	2(%rax), %rdi
 2743 12ad BE300000 		movl	$48, %esi
 2743      00
 2744 12b2 E9E8FCFF 		jmp	.L380
 2744      FF
 2745              	.L537:
 2746 12b7 BF040000 		movl	$4, %edi
 2746      00
 2747 12bc C6450030 		movb	$48, 0(%rbp)
 2748 12c0 E8000000 		call	malloc
 2748      00
 2749 12c5 BF040000 		movl	$4, %edi
 2749      00
 2750 12ca 4989C5   		movq	%rax, %r13
 2751 12cd E8000000 		call	malloc
 2751      00
 2752 12d2 41C74500 		movl	$808464432, 0(%r13)
 2752      30303030 
 2753 12da C60031   		movb	$49, (%rax)
 2754 12dd 488D7801 		leaq	1(%rax), %rdi
 2755 12e1 BE300000 		movl	$48, %esi
 2755      00
 2756 12e6 B9310000 		movl	$49, %ecx
 2756      00
 2757 12eb E97BFCFF 		jmp	.L379
 2757      FF
 2758              	.L400:
 2759 12f0 BE120000 		movl	$18, %esi
 2759      00
 2760 12f5 B90E0000 		movl	$14, %ecx
 2760      00
 2761 12fa E91BF8FF 		jmp	.L309
 2761      FF
 2762              	.L387:
 2763 12ff BE1F0000 		movl	$31, %esi
 2763      00
 2764 1304 B9010000 		movl	$1, %ecx
 2764      00
 2765 1309 E90CF8FF 		jmp	.L309
 2765      FF
 2766              	.L388:
 2767 130e BE1E0000 		movl	$30, %esi
 2767      00
 2768 1313 B9020000 		movl	$2, %ecx
 2768      00
 2769 1318 E9FDF7FF 		jmp	.L309
 2769      FF
 2770              	.L389:
 2771 131d BE1D0000 		movl	$29, %esi
 2771      00
 2772 1322 B9030000 		movl	$3, %ecx
 2772      00
 2773 1327 E9EEF7FF 		jmp	.L309
 2773      FF
 2774              	.L390:
 2775 132c BE1C0000 		movl	$28, %esi
 2775      00
 2776 1331 B9040000 		movl	$4, %ecx
 2776      00
 2777 1336 E9DFF7FF 		jmp	.L309
 2777      FF
 2778              	.L391:
 2779 133b BE1B0000 		movl	$27, %esi
 2779      00
 2780 1340 B9050000 		movl	$5, %ecx
 2780      00
 2781 1345 E9D0F7FF 		jmp	.L309
 2781      FF
 2782              	.L392:
 2783 134a BE1A0000 		movl	$26, %esi
 2783      00
 2784 134f B9060000 		movl	$6, %ecx
 2784      00
 2785 1354 E9C1F7FF 		jmp	.L309
 2785      FF
 2786              	.L393:
 2787 1359 BE190000 		movl	$25, %esi
 2787      00
 2788 135e B9070000 		movl	$7, %ecx
 2788      00
 2789 1363 E9B2F7FF 		jmp	.L309
 2789      FF
 2790              	.L394:
 2791 1368 BE180000 		movl	$24, %esi
 2791      00
 2792 136d B9080000 		movl	$8, %ecx
 2792      00
 2793 1372 E9A3F7FF 		jmp	.L309
 2793      FF
 2794              	.L395:
 2795 1377 BE170000 		movl	$23, %esi
 2795      00
 2796 137c B9090000 		movl	$9, %ecx
 2796      00
 2797 1381 E994F7FF 		jmp	.L309
 2797      FF
 2798              	.L396:
 2799 1386 BE160000 		movl	$22, %esi
 2799      00
 2800 138b B90A0000 		movl	$10, %ecx
 2800      00
 2801 1390 E985F7FF 		jmp	.L309
 2801      FF
 2802              	.L397:
 2803 1395 BE150000 		movl	$21, %esi
 2803      00
 2804 139a B90B0000 		movl	$11, %ecx
 2804      00
 2805 139f E976F7FF 		jmp	.L309
 2805      FF
 2806              	.L398:
 2807 13a4 BE140000 		movl	$20, %esi
 2807      00
 2808 13a9 B90C0000 		movl	$12, %ecx
 2808      00
 2809 13ae E967F7FF 		jmp	.L309
 2809      FF
 2810              	.L399:
 2811 13b3 BE130000 		movl	$19, %esi
 2811      00
 2812 13b8 B90D0000 		movl	$13, %ecx
 2812      00
 2813 13bd E958F7FF 		jmp	.L309
 2813      FF
 2814              	.L434:
 2815 13c2 B9300000 		movl	$48, %ecx
 2815      00
 2816 13c7 E971FDFF 		jmp	.L370
 2816      FF
 2817              		.cfi_endproc
 2818              	.LFE74:
 2820              		.section	.text.unlikely
 2821              	.LCOLDE46:
 2822              		.text
 2823              	.LHOTE46:
 2824              		.section	.rodata.str1.1
 2825              	.LC47:
 2826 00fd 30303030 		.string	"0000"
 2826      00
 2827              	.LC49:
 2828 0102 31313131 		.string	"1111"
 2828      00
 2829              		.section	.text.unlikely
 2830              	.LCOLDB50:
 2831              		.text
 2832              	.LHOTB50:
 2833 13cc 0F1F4000 		.p2align 4,,15
 2834              		.globl	encrypt
 2836              	encrypt:
 2837              	.LFB75:
 2838              		.cfi_startproc
 2839 13d0 4157     		pushq	%r15
 2840              		.cfi_def_cfa_offset 16
 2841              		.cfi_offset 15, -16
 2842 13d2 4156     		pushq	%r14
 2843              		.cfi_def_cfa_offset 24
 2844              		.cfi_offset 14, -24
 2845 13d4 4155     		pushq	%r13
 2846              		.cfi_def_cfa_offset 32
 2847              		.cfi_offset 13, -32
 2848 13d6 4154     		pushq	%r12
 2849              		.cfi_def_cfa_offset 40
 2850              		.cfi_offset 12, -40
 2851 13d8 4989F4   		movq	%rsi, %r12
 2852 13db 55       		pushq	%rbp
 2853              		.cfi_def_cfa_offset 48
 2854              		.cfi_offset 6, -48
 2855 13dc 53       		pushq	%rbx
 2856              		.cfi_def_cfa_offset 56
 2857              		.cfi_offset 3, -56
 2858 13dd 4889FD   		movq	%rdi, %rbp
 2859 13e0 BF210000 		movl	$33, %edi
 2859      00
 2860 13e5 4883EC08 		subq	$8, %rsp
 2861              		.cfi_def_cfa_offset 64
 2862 13e9 E8000000 		call	malloc
 2862      00
 2863 13ee 4C89E2   		movq	%r12, %rdx
 2864 13f1 4889C3   		movq	%rax, %rbx
 2865 13f4 48F7DA   		negq	%rdx
 2866 13f7 83E20F   		andl	$15, %edx
 2867 13fa 0F843007 		je	.L596
 2867      0000
 2868 1400 31C0     		xorl	%eax, %eax
 2869 1402 41803C24 		cmpb	$49, (%r12)
 2869      31
 2870 1407 0F94C0   		sete	%al
 2871 140a 83FA01   		cmpl	$1, %edx
 2872 140d 0F842508 		je	.L597
 2872      0000
 2873 1413 31C9     		xorl	%ecx, %ecx
 2874 1415 41807C24 		cmpb	$49, 1(%r12)
 2874      0131
 2875 141b 0F94C1   		sete	%cl
 2876 141e 01C8     		addl	%ecx, %eax
 2877 1420 83FA02   		cmpl	$2, %edx
 2878 1423 0F844C07 		je	.L598
 2878      0000
 2879 1429 31C9     		xorl	%ecx, %ecx
 2880 142b 41807C24 		cmpb	$49, 2(%r12)
 2880      0231
 2881 1431 0F94C1   		sete	%cl
 2882 1434 01C8     		addl	%ecx, %eax
 2883 1436 83FA03   		cmpl	$3, %edx
 2884 1439 0F84BD07 		je	.L599
 2884      0000
 2885 143f 31C9     		xorl	%ecx, %ecx
 2886 1441 41807C24 		cmpb	$49, 3(%r12)
 2886      0331
 2887 1447 0F94C1   		sete	%cl
 2888 144a 01C8     		addl	%ecx, %eax
 2889 144c 83FA04   		cmpl	$4, %edx
 2890 144f 0F84B607 		je	.L600
 2890      0000
 2891 1455 31C9     		xorl	%ecx, %ecx
 2892 1457 41807C24 		cmpb	$49, 4(%r12)
 2892      0431
 2893 145d 0F94C1   		sete	%cl
 2894 1460 01C8     		addl	%ecx, %eax
 2895 1462 83FA05   		cmpl	$5, %edx
 2896 1465 0F84AF07 		je	.L601
 2896      0000
 2897 146b 31C9     		xorl	%ecx, %ecx
 2898 146d 41807C24 		cmpb	$49, 5(%r12)
 2898      0531
 2899 1473 0F94C1   		sete	%cl
 2900 1476 01C8     		addl	%ecx, %eax
 2901 1478 83FA06   		cmpl	$6, %edx
 2902 147b 0F84A807 		je	.L602
 2902      0000
 2903 1481 31C9     		xorl	%ecx, %ecx
 2904 1483 41807C24 		cmpb	$49, 6(%r12)
 2904      0631
 2905 1489 0F94C1   		sete	%cl
 2906 148c 01C8     		addl	%ecx, %eax
 2907 148e 83FA07   		cmpl	$7, %edx
 2908 1491 0F84ED06 		je	.L603
 2908      0000
 2909 1497 31C9     		xorl	%ecx, %ecx
 2910 1499 41807C24 		cmpb	$49, 7(%r12)
 2910      0731
 2911 149f 0F94C1   		sete	%cl
 2912 14a2 01C8     		addl	%ecx, %eax
 2913 14a4 83FA08   		cmpl	$8, %edx
 2914 14a7 0F84E606 		je	.L604
 2914      0000
 2915 14ad 31C9     		xorl	%ecx, %ecx
 2916 14af 41807C24 		cmpb	$49, 8(%r12)
 2916      0831
 2917 14b5 0F94C1   		sete	%cl
 2918 14b8 01C8     		addl	%ecx, %eax
 2919 14ba 83FA09   		cmpl	$9, %edx
 2920 14bd 0F84DF06 		je	.L605
 2920      0000
 2921 14c3 31C9     		xorl	%ecx, %ecx
 2922 14c5 41807C24 		cmpb	$49, 9(%r12)
 2922      0931
 2923 14cb 0F94C1   		sete	%cl
 2924 14ce 01C8     		addl	%ecx, %eax
 2925 14d0 83FA0A   		cmpl	$10, %edx
 2926 14d3 0F84D806 		je	.L606
 2926      0000
 2927 14d9 31C9     		xorl	%ecx, %ecx
 2928 14db 41807C24 		cmpb	$49, 10(%r12)
 2928      0A31
 2929 14e1 0F94C1   		sete	%cl
 2930 14e4 01C8     		addl	%ecx, %eax
 2931 14e6 83FA0B   		cmpl	$11, %edx
 2932 14e9 0F84D106 		je	.L607
 2932      0000
 2933 14ef 31C9     		xorl	%ecx, %ecx
 2934 14f1 41807C24 		cmpb	$49, 11(%r12)
 2934      0B31
 2935 14f7 0F94C1   		sete	%cl
 2936 14fa 01C8     		addl	%ecx, %eax
 2937 14fc 83FA0C   		cmpl	$12, %edx
 2938 14ff 0F84CA06 		je	.L608
 2938      0000
 2939 1505 31C9     		xorl	%ecx, %ecx
 2940 1507 41807C24 		cmpb	$49, 12(%r12)
 2940      0C31
 2941 150d 0F94C1   		sete	%cl
 2942 1510 01C8     		addl	%ecx, %eax
 2943 1512 83FA0D   		cmpl	$13, %edx
 2944 1515 0F84C306 		je	.L609
 2944      0000
 2945 151b 31C9     		xorl	%ecx, %ecx
 2946 151d 41807C24 		cmpb	$49, 13(%r12)
 2946      0D31
 2947 1523 0F94C1   		sete	%cl
 2948 1526 01C8     		addl	%ecx, %eax
 2949 1528 83FA0F   		cmpl	$15, %edx
 2950 152b 0F85BC06 		jne	.L610
 2950      0000
 2951 1531 31C9     		xorl	%ecx, %ecx
 2952 1533 41807C24 		cmpb	$49, 14(%r12)
 2952      0E31
 2953 1539 BE110000 		movl	$17, %esi
 2953      00
 2954 153e 0F94C1   		sete	%cl
 2955 1541 01C8     		addl	%ecx, %eax
 2956 1543 B90F0000 		movl	$15, %ecx
 2956      00
 2957              	.L547:
 2958 1548 BF200000 		movl	$32, %edi
 2958      00
 2959 154d 4189D0   		movl	%edx, %r8d
 2960 1550 41B90100 		movl	$1, %r9d
 2960      0000
 2961 1556 29D7     		subl	%edx, %edi
 2962 1558 89FA     		movl	%edi, %edx
 2963 155a BF100000 		movl	$16, %edi
 2963      00
 2964              	.L546:
 2965 155f 4D01E0   		addq	%r12, %r8
 2966 1562 660F6F2D 		movdqa	.LC48(%rip), %xmm5
 2966      00000000 
 2967 156a 660FEFE4 		pxor	%xmm4, %xmm4
 2968 156e 4183F902 		cmpl	$2, %r9d
 2969 1572 66410F6F 		movdqa	(%r8), %xmm1
 2969      08
 2970 1577 660F6F15 		movdqa	.LC45(%rip), %xmm2
 2970      00000000 
 2971 157f 660F74CD 		pcmpeqb	%xmm5, %xmm1
 2972 1583 660F6FDC 		movdqa	%xmm4, %xmm3
 2973 1587 660FDBCA 		pand	%xmm2, %xmm1
 2974 158b 660F64D9 		pcmpgtb	%xmm1, %xmm3
 2975 158f 660F6FC1 		movdqa	%xmm1, %xmm0
 2976 1593 660F68CB 		punpckhbw	%xmm3, %xmm1
 2977 1597 660F60C3 		punpcklbw	%xmm3, %xmm0
 2978 159b 660FEFDB 		pxor	%xmm3, %xmm3
 2979 159f 660F6FF0 		movdqa	%xmm0, %xmm6
 2980 15a3 660F6FFB 		movdqa	%xmm3, %xmm7
 2981 15a7 660F65F8 		pcmpgtw	%xmm0, %xmm7
 2982 15ab 660F61F7 		punpcklwd	%xmm7, %xmm6
 2983 15af 660F69C7 		punpckhwd	%xmm7, %xmm0
 2984 15b3 660F6FFB 		movdqa	%xmm3, %xmm7
 2985 15b7 660F65F9 		pcmpgtw	%xmm1, %xmm7
 2986 15bb 660FFEC6 		paddd	%xmm6, %xmm0
 2987 15bf 660F6FF1 		movdqa	%xmm1, %xmm6
 2988 15c3 660F69CF 		punpckhwd	%xmm7, %xmm1
 2989 15c7 660F61F7 		punpcklwd	%xmm7, %xmm6
 2990 15cb 660FFEC6 		paddd	%xmm6, %xmm0
 2991 15cf 660FFEC1 		paddd	%xmm1, %xmm0
 2992 15d3 7552     		jne	.L548
 2993 15d5 66410F6F 		movdqa	16(%r8), %xmm1
 2993      4810
 2994 15db 660F74CD 		pcmpeqb	%xmm5, %xmm1
 2995 15df 660F6FEB 		movdqa	%xmm3, %xmm5
 2996 15e3 660FDBCA 		pand	%xmm2, %xmm1
 2997 15e7 660F64E1 		pcmpgtb	%xmm1, %xmm4
 2998 15eb 660F6FD1 		movdqa	%xmm1, %xmm2
 2999 15ef 660F60D4 		punpcklbw	%xmm4, %xmm2
 3000 15f3 660F68CC 		punpckhbw	%xmm4, %xmm1
 3001 15f7 660F65EA 		pcmpgtw	%xmm2, %xmm5
 3002 15fb 660F6FE2 		movdqa	%xmm2, %xmm4
 3003 15ff 660F65D9 		pcmpgtw	%xmm1, %xmm3
 3004 1603 660F61E5 		punpcklwd	%xmm5, %xmm4
 3005 1607 660F69D5 		punpckhwd	%xmm5, %xmm2
 3006 160b 660FFEC4 		paddd	%xmm4, %xmm0
 3007 160f 660FFED0 		paddd	%xmm0, %xmm2
 3008 1613 660F6FC1 		movdqa	%xmm1, %xmm0
 3009 1617 660F69CB 		punpckhwd	%xmm3, %xmm1
 3010 161b 660F61C3 		punpcklwd	%xmm3, %xmm0
 3011 161f 660FFEC2 		paddd	%xmm2, %xmm0
 3012 1623 660FFEC1 		paddd	%xmm1, %xmm0
 3013              	.L548:
 3014 1627 660F6FC8 		movdqa	%xmm0, %xmm1
 3015 162b 29FE     		subl	%edi, %esi
 3016 162d 660F73D9 		psrldq	$8, %xmm1
 3016      08
 3017 1632 660FFEC1 		paddd	%xmm1, %xmm0
 3018 1636 660F6FC8 		movdqa	%xmm0, %xmm1
 3019 163a 660F73D9 		psrldq	$4, %xmm1
 3019      04
 3020 163f 660FFEC1 		paddd	%xmm1, %xmm0
 3021 1643 66410F7E 		movd	%xmm0, %r13d
 3021      C5
 3022 1648 4101C5   		addl	%eax, %r13d
 3023 164b 39D7     		cmpl	%edx, %edi
 3024 164d 8D040F   		leal	(%rdi,%rcx), %eax
 3025 1650 0F849201 		je	.L550
 3025      0000
 3026 1656 4863D0   		movslq	%eax, %rdx
 3027 1659 41803C14 		cmpb	$49, (%r12,%rdx)
 3027      31
 3028 165e 0F94C2   		sete	%dl
 3029 1661 0FB6D2   		movzbl	%dl, %edx
 3030 1664 4101D5   		addl	%edx, %r13d
 3031 1667 83FE01   		cmpl	$1, %esi
 3032 166a 8D5001   		leal	1(%rax), %edx
 3033 166d 0F847501 		je	.L550
 3033      0000
 3034 1673 4863D2   		movslq	%edx, %rdx
 3035 1676 41803C14 		cmpb	$49, (%r12,%rdx)
 3035      31
 3036 167b 0F94C2   		sete	%dl
 3037 167e 0FB6D2   		movzbl	%dl, %edx
 3038 1681 4101D5   		addl	%edx, %r13d
 3039 1684 83FE02   		cmpl	$2, %esi
 3040 1687 8D5002   		leal	2(%rax), %edx
 3041 168a 0F845801 		je	.L550
 3041      0000
 3042 1690 4863D2   		movslq	%edx, %rdx
 3043 1693 41803C14 		cmpb	$49, (%r12,%rdx)
 3043      31
 3044 1698 0F94C2   		sete	%dl
 3045 169b 0FB6D2   		movzbl	%dl, %edx
 3046 169e 4101D5   		addl	%edx, %r13d
 3047 16a1 83FE03   		cmpl	$3, %esi
 3048 16a4 8D5003   		leal	3(%rax), %edx
 3049 16a7 0F843B01 		je	.L550
 3049      0000
 3050 16ad 4863D2   		movslq	%edx, %rdx
 3051 16b0 41803C14 		cmpb	$49, (%r12,%rdx)
 3051      31
 3052 16b5 0F94C2   		sete	%dl
 3053 16b8 0FB6D2   		movzbl	%dl, %edx
 3054 16bb 4101D5   		addl	%edx, %r13d
 3055 16be 83FE04   		cmpl	$4, %esi
 3056 16c1 8D5004   		leal	4(%rax), %edx
 3057 16c4 0F841E01 		je	.L550
 3057      0000
 3058 16ca 4863D2   		movslq	%edx, %rdx
 3059 16cd 41803C14 		cmpb	$49, (%r12,%rdx)
 3059      31
 3060 16d2 0F94C2   		sete	%dl
 3061 16d5 0FB6D2   		movzbl	%dl, %edx
 3062 16d8 4101D5   		addl	%edx, %r13d
 3063 16db 83FE05   		cmpl	$5, %esi
 3064 16de 8D5005   		leal	5(%rax), %edx
 3065 16e1 0F840101 		je	.L550
 3065      0000
 3066 16e7 4863D2   		movslq	%edx, %rdx
 3067 16ea 41803C14 		cmpb	$49, (%r12,%rdx)
 3067      31
 3068 16ef 0F94C2   		sete	%dl
 3069 16f2 0FB6D2   		movzbl	%dl, %edx
 3070 16f5 4101D5   		addl	%edx, %r13d
 3071 16f8 83FE06   		cmpl	$6, %esi
 3072 16fb 8D5006   		leal	6(%rax), %edx
 3073 16fe 0F84E400 		je	.L550
 3073      0000
 3074 1704 4863D2   		movslq	%edx, %rdx
 3075 1707 41803C14 		cmpb	$49, (%r12,%rdx)
 3075      31
 3076 170c 0F94C2   		sete	%dl
 3077 170f 0FB6D2   		movzbl	%dl, %edx
 3078 1712 4101D5   		addl	%edx, %r13d
 3079 1715 83FE07   		cmpl	$7, %esi
 3080 1718 8D5007   		leal	7(%rax), %edx
 3081 171b 0F84C700 		je	.L550
 3081      0000
 3082 1721 4863D2   		movslq	%edx, %rdx
 3083 1724 41803C14 		cmpb	$49, (%r12,%rdx)
 3083      31
 3084 1729 0F94C2   		sete	%dl
 3085 172c 0FB6D2   		movzbl	%dl, %edx
 3086 172f 4101D5   		addl	%edx, %r13d
 3087 1732 83FE08   		cmpl	$8, %esi
 3088 1735 8D5008   		leal	8(%rax), %edx
 3089 1738 0F84AA00 		je	.L550
 3089      0000
 3090 173e 4863D2   		movslq	%edx, %rdx
 3091 1741 41803C14 		cmpb	$49, (%r12,%rdx)
 3091      31
 3092 1746 0F94C2   		sete	%dl
 3093 1749 0FB6D2   		movzbl	%dl, %edx
 3094 174c 4101D5   		addl	%edx, %r13d
 3095 174f 83FE09   		cmpl	$9, %esi
 3096 1752 8D5009   		leal	9(%rax), %edx
 3097 1755 0F848D00 		je	.L550
 3097      0000
 3098 175b 4863D2   		movslq	%edx, %rdx
 3099 175e 41803C14 		cmpb	$49, (%r12,%rdx)
 3099      31
 3100 1763 0F94C2   		sete	%dl
 3101 1766 0FB6D2   		movzbl	%dl, %edx
 3102 1769 4101D5   		addl	%edx, %r13d
 3103 176c 83FE0A   		cmpl	$10, %esi
 3104 176f 8D500A   		leal	10(%rax), %edx
 3105 1772 7474     		je	.L550
 3106 1774 4863D2   		movslq	%edx, %rdx
 3107 1777 41803C14 		cmpb	$49, (%r12,%rdx)
 3107      31
 3108 177c 0F94C2   		sete	%dl
 3109 177f 0FB6D2   		movzbl	%dl, %edx
 3110 1782 4101D5   		addl	%edx, %r13d
 3111 1785 83FE0B   		cmpl	$11, %esi
 3112 1788 8D500B   		leal	11(%rax), %edx
 3113 178b 745B     		je	.L550
 3114 178d 4863D2   		movslq	%edx, %rdx
 3115 1790 41803C14 		cmpb	$49, (%r12,%rdx)
 3115      31
 3116 1795 0F94C2   		sete	%dl
 3117 1798 0FB6D2   		movzbl	%dl, %edx
 3118 179b 4101D5   		addl	%edx, %r13d
 3119 179e 83FE0C   		cmpl	$12, %esi
 3120 17a1 8D500C   		leal	12(%rax), %edx
 3121 17a4 7442     		je	.L550
 3122 17a6 4863D2   		movslq	%edx, %rdx
 3123 17a9 41803C14 		cmpb	$49, (%r12,%rdx)
 3123      31
 3124 17ae 0F94C2   		sete	%dl
 3125 17b1 0FB6D2   		movzbl	%dl, %edx
 3126 17b4 4101D5   		addl	%edx, %r13d
 3127 17b7 83FE0D   		cmpl	$13, %esi
 3128 17ba 8D500D   		leal	13(%rax), %edx
 3129 17bd 7429     		je	.L550
 3130 17bf 4863D2   		movslq	%edx, %rdx
 3131 17c2 41803C14 		cmpb	$49, (%r12,%rdx)
 3131      31
 3132 17c7 0F94C2   		sete	%dl
 3133 17ca 83C00E   		addl	$14, %eax
 3134 17cd 0FB6D2   		movzbl	%dl, %edx
 3135 17d0 4101D5   		addl	%edx, %r13d
 3136 17d3 83FE0E   		cmpl	$14, %esi
 3137 17d6 7410     		je	.L550
 3138 17d8 4898     		cltq
 3139 17da 41803C04 		cmpb	$49, (%r12,%rax)
 3139      31
 3140 17df 0F94C0   		sete	%al
 3141 17e2 0FB6C0   		movzbl	%al, %eax
 3142 17e5 4101C5   		addl	%eax, %r13d
 3143              	.L550:
 3144 17e8 488B4500 		movq	0(%rbp), %rax
 3145 17ec BF050000 		movl	$5, %edi
 3145      00
 3146 17f1 488903   		movq	%rax, (%rbx)
 3147 17f4 488B4508 		movq	8(%rbp), %rax
 3148 17f8 48894308 		movq	%rax, 8(%rbx)
 3149 17fc 488B4510 		movq	16(%rbp), %rax
 3150 1800 48894310 		movq	%rax, 16(%rbx)
 3151 1804 488B4518 		movq	24(%rbp), %rax
 3152 1808 48894318 		movq	%rax, 24(%rbx)
 3153 180c E8000000 		call	malloc
 3153      00
 3154 1811 4889C5   		movq	%rax, %rbp
 3155 1814 C6400400 		movb	$0, 4(%rax)
 3156 1818 410FB644 		movzbl	7(%r12), %eax
 3156      2407
 3157 181e 41384424 		cmpb	%al, 3(%r12)
 3157      03
 3158 1823 C6432000 		movb	$0, 32(%rbx)
 3159 1827 0F95C0   		setne	%al
 3160 182a 83C030   		addl	$48, %eax
 3161 182d 41384424 		cmpb	%al, 11(%r12)
 3161      0B
 3162 1832 0F95C0   		setne	%al
 3163 1835 83C030   		addl	$48, %eax
 3164 1838 41384424 		cmpb	%al, 15(%r12)
 3164      0F
 3165 183d 0F95C0   		setne	%al
 3166 1840 83C030   		addl	$48, %eax
 3167 1843 41384424 		cmpb	%al, 19(%r12)
 3167      13
 3168 1848 0F95C0   		setne	%al
 3169 184b 83C030   		addl	$48, %eax
 3170 184e 41384424 		cmpb	%al, 23(%r12)
 3170      17
 3171 1853 0F95C0   		setne	%al
 3172 1856 83C030   		addl	$48, %eax
 3173 1859 41384424 		cmpb	%al, 27(%r12)
 3173      1B
 3174 185e 0F95C0   		setne	%al
 3175 1861 83C030   		addl	$48, %eax
 3176 1864 41384424 		cmpb	%al, 31(%r12)
 3176      1F
 3177 1869 0F95C0   		setne	%al
 3178 186c 83C030   		addl	$48, %eax
 3179 186f 884503   		movb	%al, 3(%rbp)
 3180 1872 410FB644 		movzbl	6(%r12), %eax
 3180      2406
 3181 1878 41384424 		cmpb	%al, 2(%r12)
 3181      02
 3182 187d 0F95C0   		setne	%al
 3183 1880 83C030   		addl	$48, %eax
 3184 1883 41384424 		cmpb	%al, 10(%r12)
 3184      0A
 3185 1888 0F95C0   		setne	%al
 3186 188b 83C030   		addl	$48, %eax
 3187 188e 41384424 		cmpb	%al, 14(%r12)
 3187      0E
 3188 1893 0F95C0   		setne	%al
 3189 1896 83C030   		addl	$48, %eax
 3190 1899 41384424 		cmpb	%al, 18(%r12)
 3190      12
 3191 189e 0F95C0   		setne	%al
 3192 18a1 83C030   		addl	$48, %eax
 3193 18a4 41384424 		cmpb	%al, 22(%r12)
 3193      16
 3194 18a9 0F95C0   		setne	%al
 3195 18ac 83C030   		addl	$48, %eax
 3196 18af 41384424 		cmpb	%al, 26(%r12)
 3196      1A
 3197 18b4 0F95C0   		setne	%al
 3198 18b7 83C030   		addl	$48, %eax
 3199 18ba 41384424 		cmpb	%al, 30(%r12)
 3199      1E
 3200 18bf 0F95C0   		setne	%al
 3201 18c2 83C030   		addl	$48, %eax
 3202 18c5 884502   		movb	%al, 2(%rbp)
 3203 18c8 410FB644 		movzbl	5(%r12), %eax
 3203      2405
 3204 18ce 41384424 		cmpb	%al, 1(%r12)
 3204      01
 3205 18d3 0F95C0   		setne	%al
 3206 18d6 83C030   		addl	$48, %eax
 3207 18d9 41384424 		cmpb	%al, 9(%r12)
 3207      09
 3208 18de 0F95C0   		setne	%al
 3209 18e1 83C030   		addl	$48, %eax
 3210 18e4 41384424 		cmpb	%al, 13(%r12)
 3210      0D
 3211 18e9 0F95C0   		setne	%al
 3212 18ec 83C030   		addl	$48, %eax
 3213 18ef 41384424 		cmpb	%al, 17(%r12)
 3213      11
 3214 18f4 0F95C0   		setne	%al
 3215 18f7 83C030   		addl	$48, %eax
 3216 18fa 413A4424 		cmpb	21(%r12), %al
 3216      15
 3217 18ff 0F95C0   		setne	%al
 3218 1902 83C030   		addl	$48, %eax
 3219 1905 413A4424 		cmpb	25(%r12), %al
 3219      19
 3220 190a 0F95C0   		setne	%al
 3221 190d 83C030   		addl	$48, %eax
 3222 1910 413A4424 		cmpb	29(%r12), %al
 3222      1D
 3223 1915 0F95C0   		setne	%al
 3224 1918 83C030   		addl	$48, %eax
 3225 191b 884501   		movb	%al, 1(%rbp)
 3226 191e 410FB644 		movzbl	4(%r12), %eax
 3226      2404
 3227 1924 41380424 		cmpb	%al, (%r12)
 3228 1928 0F95C0   		setne	%al
 3229 192b 83C030   		addl	$48, %eax
 3230 192e 413A4424 		cmpb	8(%r12), %al
 3230      08
 3231 1933 0F95C0   		setne	%al
 3232 1936 83C030   		addl	$48, %eax
 3233 1939 413A4424 		cmpb	12(%r12), %al
 3233      0C
 3234 193e 0F95C0   		setne	%al
 3235 1941 83C030   		addl	$48, %eax
 3236 1944 413A4424 		cmpb	16(%r12), %al
 3236      10
 3237 1949 0F95C0   		setne	%al
 3238 194c 83C030   		addl	$48, %eax
 3239 194f 413A4424 		cmpb	20(%r12), %al
 3239      14
 3240 1954 0F95C0   		setne	%al
 3241 1957 83C030   		addl	$48, %eax
 3242 195a 413A4424 		cmpb	24(%r12), %al
 3242      18
 3243 195f 0F95C0   		setne	%al
 3244 1962 83C030   		addl	$48, %eax
 3245 1965 41384424 		cmpb	%al, 28(%r12)
 3245      1C
 3246 196a 41BC0000 		movl	$.LC49, %r12d
 3246      0000
 3247 1970 0F95C0   		setne	%al
 3248 1973 4531FF   		xorl	%r15d, %r15d
 3249 1976 83C030   		addl	$48, %eax
 3250 1979 4585ED   		testl	%r13d, %r13d
 3251 197c 884500   		movb	%al, 0(%rbp)
 3252 197f 0F8E0B01 		jle	.L690
 3252      0000
 3253              		.p2align 4,,10
 3254 1985 0F1F00   		.p2align 3
 3255              	.L672:
 3256 1988 31C0     		xorl	%eax, %eax
 3257 198a 660F1F44 		.p2align 4,,10
 3257      0000
 3258              		.p2align 3
 3259              	.L581:
 3260 1990 4889C2   		movq	%rax, %rdx
 3261 1993 0FB63C03 		movzbl	(%rbx,%rax), %edi
 3262 1997 83E203   		andl	$3, %edx
 3263 199a 40387C15 		cmpb	%dil, 0(%rbp,%rdx)
 3263      00
 3264 199f 0F95C2   		setne	%dl
 3265 19a2 83C230   		addl	$48, %edx
 3266 19a5 881403   		movb	%dl, (%rbx,%rax)
 3267 19a8 4883C001 		addq	$1, %rax
 3268 19ac 4883F820 		cmpq	$32, %rax
 3269 19b0 75DE     		jne	.L581
 3270 19b2 B9050000 		movl	$5, %ecx
 3270      00
 3271 19b7 4889EE   		movq	%rbp, %rsi
 3272 19ba 4C89E7   		movq	%r12, %rdi
 3273 19bd F3A6     		repz cmpsb
 3274 19bf 0F97C0   		seta	%al
 3275 19c2 0F92C2   		setb	%dl
 3276 19c5 29D0     		subl	%edx, %eax
 3277 19c7 3C01     		cmpb	$1, %al
 3278 19c9 0F84D900 		je	.L639
 3278      0000
 3279 19cf BF040000 		movl	$4, %edi
 3279      00
 3280 19d4 E8000000 		call	malloc
 3280      00
 3281 19d9 BF040000 		movl	$4, %edi
 3281      00
 3282 19de 4989C6   		movq	%rax, %r14
 3283 19e1 E8000000 		call	malloc
 3283      00
 3284 19e6 807D0031 		cmpb	$49, 0(%rbp)
 3285 19ea 41C60630 		movb	$48, (%r14)
 3286 19ee 41C64601 		movb	$48, 1(%r14)
 3286      30
 3287 19f3 41C64602 		movb	$48, 2(%r14)
 3287      30
 3288 19f8 41C64603 		movb	$48, 3(%r14)
 3288      30
 3289 19fd 0F84F200 		je	.L695
 3289      0000
 3290 1a03 0FB64D01 		movzbl	1(%rbp), %ecx
 3291 1a07 C60031   		movb	$49, (%rax)
 3292 1a0a 41B83100 		movl	$49, %r8d
 3292      0000
 3293 1a10 80F930   		cmpb	$48, %cl
 3294 1a13 0F849600 		je	.L696
 3294      0000
 3295              	.L584:
 3296 1a19 C6400131 		movb	$49, 1(%rax)
 3297 1a1d 31FF     		xorl	%edi, %edi
 3298 1a1f B9310000 		movl	$49, %ecx
 3298      00
 3299 1a24 BA300000 		movl	$48, %edx
 3299      00
 3300              	.L595:
 3301 1a29 0FB67502 		movzbl	2(%rbp), %esi
 3302 1a2d 41885601 		movb	%dl, 1(%r14)
 3303 1a31 4038F2   		cmpb	%sil, %dl
 3304 1a34 0F95C2   		setne	%dl
 3305 1a37 83C230   		addl	$48, %edx
 3306 1a3a 4080FE31 		cmpb	$49, %sil
 3307 1a3e 885002   		movb	%dl, 2(%rax)
 3308 1a41 0F858D00 		jne	.L586
 3308      0000
 3309 1a47 4084FF   		testb	%dil, %dil
 3310 1a4a 0F848400 		je	.L586
 3310      0000
 3311 1a50 0FB67503 		movzbl	3(%rbp), %esi
 3312 1a54 41C64602 		movb	$49, 2(%r14)
 3312      31
 3313 1a59 4080FE31 		cmpb	$49, %sil
 3314 1a5d 0F84BF00 		je	.L697
 3314      0000
 3315              	.L587:
 3316 1a63 C6400331 		movb	$49, 3(%rax)
 3317 1a67 BF310000 		movl	$49, %edi
 3317      00
 3318 1a6c BE300000 		movl	$48, %esi
 3318      00
 3319              	.L593:
 3320 1a71 41887603 		movb	%sil, 3(%r14)
 3321 1a75 44884500 		movb	%r8b, 0(%rbp)
 3322 1a79 884D01   		movb	%cl, 1(%rbp)
 3323 1a7c 885502   		movb	%dl, 2(%rbp)
 3324 1a7f 40887D03 		movb	%dil, 3(%rbp)
 3325              	.L582:
 3326 1a83 4183C701 		addl	$1, %r15d
 3327 1a87 4539EF   		cmpl	%r13d, %r15d
 3328 1a8a 0F85F8FE 		jne	.L672
 3328      FFFF
 3329              	.L690:
 3330 1a90 4883C408 		addq	$8, %rsp
 3331              		.cfi_remember_state
 3332              		.cfi_def_cfa_offset 56
 3333 1a94 4889D8   		movq	%rbx, %rax
 3334 1a97 5B       		popq	%rbx
 3335              		.cfi_def_cfa_offset 48
 3336 1a98 5D       		popq	%rbp
 3337              		.cfi_def_cfa_offset 40
 3338 1a99 415C     		popq	%r12
 3339              		.cfi_def_cfa_offset 32
 3340 1a9b 415D     		popq	%r13
 3341              		.cfi_def_cfa_offset 24
 3342 1a9d 415E     		popq	%r14
 3343              		.cfi_def_cfa_offset 16
 3344 1a9f 415F     		popq	%r15
 3345              		.cfi_def_cfa_offset 8
 3346 1aa1 C3       		ret
 3347              		.p2align 4,,10
 3348 1aa2 660F1F44 		.p2align 3
 3348      0000
 3349              	.L639:
 3350              		.cfi_restore_state
 3351 1aa8 BD000000 		movl	$.LC47, %ebp
 3351      00
 3352 1aad EBD4     		jmp	.L582
 3353              	.L696:
 3354 1aaf 0FB65502 		movzbl	2(%rbp), %edx
 3355 1ab3 C6400130 		movb	$48, 1(%rax)
 3356 1ab7 41C64601 		movb	$48, 1(%r14)
 3356      30
 3357 1abc 80FA30   		cmpb	$48, %dl
 3358 1abf 0F848C00 		je	.L698
 3358      0000
 3359 1ac5 C6400231 		movb	$49, 2(%rax)
 3360 1ac9 BA310000 		movl	$49, %edx
 3360      00
 3361 1ace 41B83100 		movl	$49, %r8d
 3361      0000
 3362              	.L586:
 3363 1ad4 0FB67D03 		movzbl	3(%rbp), %edi
 3364 1ad8 41C64602 		movb	$48, 2(%r14)
 3364      30
 3365 1add 4080FF30 		cmpb	$48, %dil
 3366 1ae1 0F857CFF 		jne	.L587
 3366      FFFF
 3367              	.L699:
 3368 1ae7 C6400330 		movb	$48, 3(%rax)
 3369 1aeb BE300000 		movl	$48, %esi
 3369      00
 3370 1af0 E97CFFFF 		jmp	.L593
 3370      FF
 3371              	.L695:
 3372 1af5 0FB65501 		movzbl	1(%rbp), %edx
 3373 1af9 C60030   		movb	$48, (%rax)
 3374 1afc 41B83000 		movl	$48, %r8d
 3374      0000
 3375 1b02 41C60631 		movb	$49, (%r14)
 3376 1b06 80FA31   		cmpb	$49, %dl
 3377 1b09 0F850AFF 		jne	.L584
 3377      FFFF
 3378 1b0f C6400130 		movb	$48, 1(%rax)
 3379 1b13 BF010000 		movl	$1, %edi
 3379      00
 3380 1b18 B9300000 		movl	$48, %ecx
 3380      00
 3381 1b1d E907FFFF 		jmp	.L595
 3381      FF
 3382              	.L697:
 3383 1b22 C6400330 		movb	$48, 3(%rax)
 3384 1b26 BF300000 		movl	$48, %edi
 3384      00
 3385 1b2b E941FFFF 		jmp	.L593
 3385      FF
 3386              	.L596:
 3387 1b30 31C0     		xorl	%eax, %eax
 3388 1b32 31C9     		xorl	%ecx, %ecx
 3389 1b34 BE200000 		movl	$32, %esi
 3389      00
 3390 1b39 4531C0   		xorl	%r8d, %r8d
 3391 1b3c BA200000 		movl	$32, %edx
 3391      00
 3392 1b41 41B90200 		movl	$2, %r9d
 3392      0000
 3393 1b47 BF200000 		movl	$32, %edi
 3393      00
 3394 1b4c E90EFAFF 		jmp	.L546
 3394      FF
 3395              	.L698:
 3396 1b51 0FB67D03 		movzbl	3(%rbp), %edi
 3397 1b55 C6400230 		movb	$48, 2(%rax)
 3398 1b59 89D1     		movl	%edx, %ecx
 3399 1b5b 41B83100 		movl	$49, %r8d
 3399      0000
 3400 1b61 41C64602 		movb	$48, 2(%r14)
 3400      30
 3401 1b66 4080FF30 		cmpb	$48, %dil
 3402 1b6a 0F85F3FE 		jne	.L587
 3402      FFFF
 3403 1b70 E972FFFF 		jmp	.L699
 3403      FF
 3404              	.L598:
 3405 1b75 BE1E0000 		movl	$30, %esi
 3405      00
 3406 1b7a B9020000 		movl	$2, %ecx
 3406      00
 3407 1b7f E9C4F9FF 		jmp	.L547
 3407      FF
 3408              	.L603:
 3409 1b84 BE190000 		movl	$25, %esi
 3409      00
 3410 1b89 B9070000 		movl	$7, %ecx
 3410      00
 3411 1b8e E9B5F9FF 		jmp	.L547
 3411      FF
 3412              	.L604:
 3413 1b93 BE180000 		movl	$24, %esi
 3413      00
 3414 1b98 B9080000 		movl	$8, %ecx
 3414      00
 3415 1b9d E9A6F9FF 		jmp	.L547
 3415      FF
 3416              	.L605:
 3417 1ba2 BE170000 		movl	$23, %esi
 3417      00
 3418 1ba7 B9090000 		movl	$9, %ecx
 3418      00
 3419 1bac E997F9FF 		jmp	.L547
 3419      FF
 3420              	.L606:
 3421 1bb1 BE160000 		movl	$22, %esi
 3421      00
 3422 1bb6 B90A0000 		movl	$10, %ecx
 3422      00
 3423 1bbb E988F9FF 		jmp	.L547
 3423      FF
 3424              	.L607:
 3425 1bc0 BE150000 		movl	$21, %esi
 3425      00
 3426 1bc5 B90B0000 		movl	$11, %ecx
 3426      00
 3427 1bca E979F9FF 		jmp	.L547
 3427      FF
 3428              	.L608:
 3429 1bcf BE140000 		movl	$20, %esi
 3429      00
 3430 1bd4 B90C0000 		movl	$12, %ecx
 3430      00
 3431 1bd9 E96AF9FF 		jmp	.L547
 3431      FF
 3432              	.L609:
 3433 1bde BE130000 		movl	$19, %esi
 3433      00
 3434 1be3 B90D0000 		movl	$13, %ecx
 3434      00
 3435 1be8 E95BF9FF 		jmp	.L547
 3435      FF
 3436              	.L610:
 3437 1bed BE120000 		movl	$18, %esi
 3437      00
 3438 1bf2 B90E0000 		movl	$14, %ecx
 3438      00
 3439 1bf7 E94CF9FF 		jmp	.L547
 3439      FF
 3440              	.L599:
 3441 1bfc BE1D0000 		movl	$29, %esi
 3441      00
 3442 1c01 B9030000 		movl	$3, %ecx
 3442      00
 3443 1c06 E93DF9FF 		jmp	.L547
 3443      FF
 3444              	.L600:
 3445 1c0b BE1C0000 		movl	$28, %esi
 3445      00
 3446 1c10 B9040000 		movl	$4, %ecx
 3446      00
 3447 1c15 E92EF9FF 		jmp	.L547
 3447      FF
 3448              	.L601:
 3449 1c1a BE1B0000 		movl	$27, %esi
 3449      00
 3450 1c1f B9050000 		movl	$5, %ecx
 3450      00
 3451 1c24 E91FF9FF 		jmp	.L547
 3451      FF
 3452              	.L602:
 3453 1c29 BE1A0000 		movl	$26, %esi
 3453      00
 3454 1c2e B9060000 		movl	$6, %ecx
 3454      00
 3455 1c33 E910F9FF 		jmp	.L547
 3455      FF
 3456              	.L597:
 3457 1c38 BE1F0000 		movl	$31, %esi
 3457      00
 3458 1c3d B9010000 		movl	$1, %ecx
 3458      00
 3459 1c42 E901F9FF 		jmp	.L547
 3459      FF
 3460              		.cfi_endproc
 3461              	.LFE75:
 3463              		.section	.text.unlikely
 3464              	.LCOLDE50:
 3465              		.text
 3466              	.LHOTE50:
 3467              		.section	.text.unlikely
 3468              	.LCOLDB51:
 3469              		.text
 3470              	.LHOTB51:
 3471 1c47 660F1F84 		.p2align 4,,15
 3471      00000000 
 3471      00
 3472              		.globl	read_byte
 3474              	read_byte:
 3475              	.LFB76:
 3476              		.cfi_startproc
 3477 1c50 53       		pushq	%rbx
 3478              		.cfi_def_cfa_offset 16
 3479              		.cfi_offset 3, -16
 3480 1c51 89FB     		movl	%edi, %ebx
 3481 1c53 BF090000 		movl	$9, %edi
 3481      00
 3482 1c58 E8000000 		call	malloc
 3482      00
 3483 1c5d 89DA     		movl	%ebx, %edx
 3484 1c5f C6400800 		movb	$0, 8(%rax)
 3485 1c63 83E201   		andl	$1, %edx
 3486 1c66 80FA01   		cmpb	$1, %dl
 3487 1c69 19D2     		sbbl	%edx, %edx
 3488 1c6b 83C231   		addl	$49, %edx
 3489 1c6e 8810     		movb	%dl, (%rax)
 3490 1c70 89DA     		movl	%ebx, %edx
 3491 1c72 D0EA     		shrb	%dl
 3492 1c74 83E201   		andl	$1, %edx
 3493 1c77 80FA01   		cmpb	$1, %dl
 3494 1c7a 19D2     		sbbl	%edx, %edx
 3495 1c7c 83C231   		addl	$49, %edx
 3496 1c7f 885001   		movb	%dl, 1(%rax)
 3497 1c82 89DA     		movl	%ebx, %edx
 3498 1c84 C0EA02   		shrb	$2, %dl
 3499 1c87 83E201   		andl	$1, %edx
 3500 1c8a 80FA01   		cmpb	$1, %dl
 3501 1c8d 19D2     		sbbl	%edx, %edx
 3502 1c8f 83C231   		addl	$49, %edx
 3503 1c92 885002   		movb	%dl, 2(%rax)
 3504 1c95 89DA     		movl	%ebx, %edx
 3505 1c97 C0EA03   		shrb	$3, %dl
 3506 1c9a 83E201   		andl	$1, %edx
 3507 1c9d 80FA01   		cmpb	$1, %dl
 3508 1ca0 19D2     		sbbl	%edx, %edx
 3509 1ca2 83C231   		addl	$49, %edx
 3510 1ca5 885003   		movb	%dl, 3(%rax)
 3511 1ca8 89DA     		movl	%ebx, %edx
 3512 1caa C0EA04   		shrb	$4, %dl
 3513 1cad 83E201   		andl	$1, %edx
 3514 1cb0 80FA01   		cmpb	$1, %dl
 3515 1cb3 19D2     		sbbl	%edx, %edx
 3516 1cb5 83C231   		addl	$49, %edx
 3517 1cb8 885004   		movb	%dl, 4(%rax)
 3518 1cbb 89DA     		movl	%ebx, %edx
 3519 1cbd C0EA05   		shrb	$5, %dl
 3520 1cc0 83E201   		andl	$1, %edx
 3521 1cc3 80FA01   		cmpb	$1, %dl
 3522 1cc6 19D2     		sbbl	%edx, %edx
 3523 1cc8 83C231   		addl	$49, %edx
 3524 1ccb 885005   		movb	%dl, 5(%rax)
 3525 1cce 89DA     		movl	%ebx, %edx
 3526 1cd0 C0EA06   		shrb	$6, %dl
 3527 1cd3 83E201   		andl	$1, %edx
 3528 1cd6 80FA01   		cmpb	$1, %dl
 3529 1cd9 19D2     		sbbl	%edx, %edx
 3530 1cdb C0EB07   		shrb	$7, %bl
 3531 1cde 83C231   		addl	$49, %edx
 3532 1ce1 80FB01   		cmpb	$1, %bl
 3533 1ce4 885006   		movb	%dl, 6(%rax)
 3534 1ce7 19D2     		sbbl	%edx, %edx
 3535 1ce9 83C231   		addl	$49, %edx
 3536 1cec 885007   		movb	%dl, 7(%rax)
 3537 1cef 5B       		popq	%rbx
 3538              		.cfi_def_cfa_offset 8
 3539 1cf0 C3       		ret
 3540              		.cfi_endproc
 3541              	.LFE76:
 3543              		.section	.text.unlikely
 3544              	.LCOLDE51:
 3545              		.text
 3546              	.LHOTE51:
 3547              		.section	.text.unlikely
 3548              	.LCOLDB52:
 3549              		.text
 3550              	.LHOTB52:
 3551 1cf1 0F1F4400 		.p2align 4,,15
 3551      00662E0F 
 3551      1F840000 
 3551      000000
 3552              		.globl	write_4byte_to_board
 3554              	write_4byte_to_board:
 3555              	.LFB77:
 3556              		.cfi_startproc
 3557 1d00 4155     		pushq	%r13
 3558              		.cfi_def_cfa_offset 16
 3559              		.cfi_offset 13, -16
 3560 1d02 4154     		pushq	%r12
 3561              		.cfi_def_cfa_offset 24
 3562              		.cfi_offset 12, -24
 3563 1d04 4989CD   		movq	%rcx, %r13
 3564 1d07 55       		pushq	%rbp
 3565              		.cfi_def_cfa_offset 32
 3566              		.cfi_offset 6, -32
 3567 1d08 53       		pushq	%rbx
 3568              		.cfi_def_cfa_offset 40
 3569              		.cfi_offset 3, -40
 3570 1d09 89FD     		movl	%edi, %ebp
 3571 1d0b 4889F3   		movq	%rsi, %rbx
 3572 1d0e BF210000 		movl	$33, %edi
 3572      00
 3573 1d13 4989D4   		movq	%rdx, %r12
 3574 1d16 4883EC18 		subq	$24, %rsp
 3575              		.cfi_def_cfa_offset 64
 3576 1d1a 64488B04 		movq	%fs:40, %rax
 3576      25280000 
 3576      00
 3577 1d23 48894424 		movq	%rax, 8(%rsp)
 3577      08
 3578 1d28 31C0     		xorl	%eax, %eax
 3579 1d2a E8000000 		call	malloc
 3579      00
 3580 1d2f 0FB65307 		movzbl	7(%rbx), %edx
 3581 1d33 4889C7   		movq	%rax, %rdi
 3582 1d36 8810     		movb	%dl, (%rax)
 3583 1d38 0FB65306 		movzbl	6(%rbx), %edx
 3584 1d3c 885001   		movb	%dl, 1(%rax)
 3585 1d3f 0FB65305 		movzbl	5(%rbx), %edx
 3586 1d43 885002   		movb	%dl, 2(%rax)
 3587 1d46 0FB65304 		movzbl	4(%rbx), %edx
 3588 1d4a 885003   		movb	%dl, 3(%rax)
 3589 1d4d 0FB65303 		movzbl	3(%rbx), %edx
 3590 1d51 885004   		movb	%dl, 4(%rax)
 3591 1d54 0FB65302 		movzbl	2(%rbx), %edx
 3592 1d58 885005   		movb	%dl, 5(%rax)
 3593 1d5b 0FB65301 		movzbl	1(%rbx), %edx
 3594 1d5f 885006   		movb	%dl, 6(%rax)
 3595 1d62 0FB613   		movzbl	(%rbx), %edx
 3596 1d65 885007   		movb	%dl, 7(%rax)
 3597 1d68 0FB6530F 		movzbl	15(%rbx), %edx
 3598 1d6c 885008   		movb	%dl, 8(%rax)
 3599 1d6f 0FB6530E 		movzbl	14(%rbx), %edx
 3600 1d73 885009   		movb	%dl, 9(%rax)
 3601 1d76 0FB6530D 		movzbl	13(%rbx), %edx
 3602 1d7a 88500A   		movb	%dl, 10(%rax)
 3603 1d7d 0FB6530C 		movzbl	12(%rbx), %edx
 3604 1d81 88500B   		movb	%dl, 11(%rax)
 3605 1d84 0FB6530B 		movzbl	11(%rbx), %edx
 3606 1d88 88500C   		movb	%dl, 12(%rax)
 3607 1d8b 0FB6530A 		movzbl	10(%rbx), %edx
 3608 1d8f 88500D   		movb	%dl, 13(%rax)
 3609 1d92 0FB65309 		movzbl	9(%rbx), %edx
 3610 1d96 88500E   		movb	%dl, 14(%rax)
 3611 1d99 0FB65308 		movzbl	8(%rbx), %edx
 3612 1d9d 88500F   		movb	%dl, 15(%rax)
 3613 1da0 0FB65317 		movzbl	23(%rbx), %edx
 3614 1da4 885010   		movb	%dl, 16(%rax)
 3615 1da7 0FB65316 		movzbl	22(%rbx), %edx
 3616 1dab 885011   		movb	%dl, 17(%rax)
 3617 1dae 0FB65315 		movzbl	21(%rbx), %edx
 3618 1db2 885012   		movb	%dl, 18(%rax)
 3619 1db5 0FB65314 		movzbl	20(%rbx), %edx
 3620 1db9 885013   		movb	%dl, 19(%rax)
 3621 1dbc 0FB65313 		movzbl	19(%rbx), %edx
 3622 1dc0 885014   		movb	%dl, 20(%rax)
 3623 1dc3 0FB65312 		movzbl	18(%rbx), %edx
 3624 1dc7 885015   		movb	%dl, 21(%rax)
 3625 1dca 0FB65311 		movzbl	17(%rbx), %edx
 3626 1dce 885016   		movb	%dl, 22(%rax)
 3627 1dd1 0FB65310 		movzbl	16(%rbx), %edx
 3628 1dd5 885017   		movb	%dl, 23(%rax)
 3629 1dd8 0FB6531F 		movzbl	31(%rbx), %edx
 3630 1ddc 885018   		movb	%dl, 24(%rax)
 3631 1ddf 0FB6531E 		movzbl	30(%rbx), %edx
 3632 1de3 885019   		movb	%dl, 25(%rax)
 3633 1de6 0FB6531D 		movzbl	29(%rbx), %edx
 3634 1dea 88501A   		movb	%dl, 26(%rax)
 3635 1ded 0FB6531C 		movzbl	28(%rbx), %edx
 3636 1df1 88501B   		movb	%dl, 27(%rax)
 3637 1df4 0FB6531B 		movzbl	27(%rbx), %edx
 3638 1df8 88501C   		movb	%dl, 28(%rax)
 3639 1dfb 0FB6531A 		movzbl	26(%rbx), %edx
 3640 1dff 88501D   		movb	%dl, 29(%rax)
 3641 1e02 0FB65319 		movzbl	25(%rbx), %edx
 3642 1e06 88501E   		movb	%dl, 30(%rax)
 3643 1e09 0FB65318 		movzbl	24(%rbx), %edx
 3644 1e0d 88501F   		movb	%dl, 31(%rax)
 3645 1e10 C6402000 		movb	$0, 32(%rax)
 3646 1e14 488B3500 		movq	key(%rip), %rsi
 3646      000000
 3647 1e1b E8000000 		call	encrypt
 3647      00
 3648 1e20 803831   		cmpb	$49, (%rax)
 3649 1e23 4C89E7   		movq	%r12, %rdi
 3650 1e26 400FB6F5 		movzbl	%bpl, %esi
 3651 1e2a 4D89E8   		movq	%r13, %r8
 3652 1e2d 0F94C1   		sete	%cl
 3653 1e30 80780131 		cmpb	$49, 1(%rax)
 3654 1e34 8D5102   		leal	2(%rcx), %edx
 3655 1e37 0F44CA   		cmove	%edx, %ecx
 3656 1e3a 80780231 		cmpb	$49, 2(%rax)
 3657 1e3e 8D5104   		leal	4(%rcx), %edx
 3658 1e41 0F44CA   		cmove	%edx, %ecx
 3659 1e44 80780331 		cmpb	$49, 3(%rax)
 3660 1e48 8D5108   		leal	8(%rcx), %edx
 3661 1e4b 0F44CA   		cmove	%edx, %ecx
 3662 1e4e 80780431 		cmpb	$49, 4(%rax)
 3663 1e52 8D5110   		leal	16(%rcx), %edx
 3664 1e55 0F44CA   		cmove	%edx, %ecx
 3665 1e58 80780531 		cmpb	$49, 5(%rax)
 3666 1e5c 8D5120   		leal	32(%rcx), %edx
 3667 1e5f 0F44CA   		cmove	%edx, %ecx
 3668 1e62 80780631 		cmpb	$49, 6(%rax)
 3669 1e66 8D5140   		leal	64(%rcx), %edx
 3670 1e69 0F45D1   		cmovne	%ecx, %edx
 3671 1e6c 80780731 		cmpb	$49, 7(%rax)
 3672 1e70 8D4A80   		leal	-128(%rdx), %ecx
 3673 1e73 0F44D1   		cmove	%ecx, %edx
 3674 1e76 80780831 		cmpb	$49, 8(%rax)
 3675 1e7a 881424   		movb	%dl, (%rsp)
 3676 1e7d 0F94C1   		sete	%cl
 3677 1e80 80780931 		cmpb	$49, 9(%rax)
 3678 1e84 8D5102   		leal	2(%rcx), %edx
 3679 1e87 0F44CA   		cmove	%edx, %ecx
 3680 1e8a 80780A31 		cmpb	$49, 10(%rax)
 3681 1e8e 8D5104   		leal	4(%rcx), %edx
 3682 1e91 0F44CA   		cmove	%edx, %ecx
 3683 1e94 80780B31 		cmpb	$49, 11(%rax)
 3684 1e98 8D5108   		leal	8(%rcx), %edx
 3685 1e9b 0F44CA   		cmove	%edx, %ecx
 3686 1e9e 80780C31 		cmpb	$49, 12(%rax)
 3687 1ea2 8D5110   		leal	16(%rcx), %edx
 3688 1ea5 0F45D1   		cmovne	%ecx, %edx
 3689 1ea8 80780D31 		cmpb	$49, 13(%rax)
 3690 1eac 8D4A20   		leal	32(%rdx), %ecx
 3691 1eaf 0F44D1   		cmove	%ecx, %edx
 3692 1eb2 80780E31 		cmpb	$49, 14(%rax)
 3693 1eb6 8D4A40   		leal	64(%rdx), %ecx
 3694 1eb9 0F44D1   		cmove	%ecx, %edx
 3695 1ebc 80780F31 		cmpb	$49, 15(%rax)
 3696 1ec0 8D4A80   		leal	-128(%rdx), %ecx
 3697 1ec3 0F44D1   		cmove	%ecx, %edx
 3698 1ec6 80781031 		cmpb	$49, 16(%rax)
 3699 1eca 88542401 		movb	%dl, 1(%rsp)
 3700 1ece 0F94C1   		sete	%cl
 3701 1ed1 80781131 		cmpb	$49, 17(%rax)
 3702 1ed5 8D5102   		leal	2(%rcx), %edx
 3703 1ed8 0F45D1   		cmovne	%ecx, %edx
 3704 1edb 80781231 		cmpb	$49, 18(%rax)
 3705 1edf 8D4A04   		leal	4(%rdx), %ecx
 3706 1ee2 0F44D1   		cmove	%ecx, %edx
 3707 1ee5 80781331 		cmpb	$49, 19(%rax)
 3708 1ee9 8D4A08   		leal	8(%rdx), %ecx
 3709 1eec 0F44D1   		cmove	%ecx, %edx
 3710 1eef 80781431 		cmpb	$49, 20(%rax)
 3711 1ef3 8D4A10   		leal	16(%rdx), %ecx
 3712 1ef6 0F44D1   		cmove	%ecx, %edx
 3713 1ef9 80781531 		cmpb	$49, 21(%rax)
 3714 1efd 8D4A20   		leal	32(%rdx), %ecx
 3715 1f00 0F44D1   		cmove	%ecx, %edx
 3716 1f03 80781631 		cmpb	$49, 22(%rax)
 3717 1f07 8D4A40   		leal	64(%rdx), %ecx
 3718 1f0a 0F44D1   		cmove	%ecx, %edx
 3719 1f0d 80781731 		cmpb	$49, 23(%rax)
 3720 1f11 8D4A80   		leal	-128(%rdx), %ecx
 3721 1f14 0F44D1   		cmove	%ecx, %edx
 3722 1f17 80781831 		cmpb	$49, 24(%rax)
 3723 1f1b 88542402 		movb	%dl, 2(%rsp)
 3724 1f1f 0F94C1   		sete	%cl
 3725 1f22 80781931 		cmpb	$49, 25(%rax)
 3726 1f26 8D5102   		leal	2(%rcx), %edx
 3727 1f29 0F45D1   		cmovne	%ecx, %edx
 3728 1f2c 80781A31 		cmpb	$49, 26(%rax)
 3729 1f30 8D4A04   		leal	4(%rdx), %ecx
 3730 1f33 0F44D1   		cmove	%ecx, %edx
 3731 1f36 80781B31 		cmpb	$49, 27(%rax)
 3732 1f3a 8D4A08   		leal	8(%rdx), %ecx
 3733 1f3d 0F44D1   		cmove	%ecx, %edx
 3734 1f40 80781C31 		cmpb	$49, 28(%rax)
 3735 1f44 8D4A10   		leal	16(%rdx), %ecx
 3736 1f47 0F44D1   		cmove	%ecx, %edx
 3737 1f4a 80781D31 		cmpb	$49, 29(%rax)
 3738 1f4e 8D4A20   		leal	32(%rdx), %ecx
 3739 1f51 0F44D1   		cmove	%ecx, %edx
 3740 1f54 80781E31 		cmpb	$49, 30(%rax)
 3741 1f58 8D4A40   		leal	64(%rdx), %ecx
 3742 1f5b 0F44D1   		cmove	%ecx, %edx
 3743 1f5e 80781F31 		cmpb	$49, 31(%rax)
 3744 1f62 8D4A80   		leal	-128(%rdx), %ecx
 3745 1f65 0F44D1   		cmove	%ecx, %edx
 3746 1f68 4889E1   		movq	%rsp, %rcx
 3747 1f6b 88542403 		movb	%dl, 3(%rsp)
 3748 1f6f BA040000 		movl	$4, %edx
 3748      00
 3749 1f74 E8000000 		call	flWriteChannel
 3749      00
 3750 1f79 83F801   		cmpl	$1, %eax
 3751 1f7c 19C0     		sbbl	%eax, %eax
 3752 1f7e 83E00D   		andl	$13, %eax
 3753 1f81 83C066   		addl	$102, %eax
 3754 1f84 488B7C24 		movq	8(%rsp), %rdi
 3754      08
 3755 1f89 6448333C 		xorq	%fs:40, %rdi
 3755      25280000 
 3755      00
 3756 1f92 750B     		jne	.L723
 3757 1f94 4883C418 		addq	$24, %rsp
 3758              		.cfi_remember_state
 3759              		.cfi_def_cfa_offset 40
 3760 1f98 5B       		popq	%rbx
 3761              		.cfi_def_cfa_offset 32
 3762 1f99 5D       		popq	%rbp
 3763              		.cfi_def_cfa_offset 24
 3764 1f9a 415C     		popq	%r12
 3765              		.cfi_def_cfa_offset 16
 3766 1f9c 415D     		popq	%r13
 3767              		.cfi_def_cfa_offset 8
 3768 1f9e C3       		ret
 3769              	.L723:
 3770              		.cfi_restore_state
 3771 1f9f E8000000 		call	__stack_chk_fail
 3771      00
 3772              		.cfi_endproc
 3773              	.LFE77:
 3775              		.section	.text.unlikely
 3776              	.LCOLDE52:
 3777              		.text
 3778              	.LHOTE52:
 3779              		.section	.text.unlikely
 3780              	.LCOLDB53:
 3781              		.text
 3782              	.LHOTB53:
 3783 1fa4 6690662E 		.p2align 4,,15
 3783      0F1F8400 
 3783      00000000 
 3784              		.globl	read_4byte_from_fpga
 3786              	read_4byte_from_fpga:
 3787              	.LFB78:
 3788              		.cfi_startproc
 3789 1fb0 4155     		pushq	%r13
 3790              		.cfi_def_cfa_offset 16
 3791              		.cfi_offset 13, -16
 3792 1fb2 4154     		pushq	%r12
 3793              		.cfi_def_cfa_offset 24
 3794              		.cfi_offset 12, -24
 3795 1fb4 4989D5   		movq	%rdx, %r13
 3796 1fb7 55       		pushq	%rbp
 3797              		.cfi_def_cfa_offset 32
 3798              		.cfi_offset 6, -32
 3799 1fb8 53       		pushq	%rbx
 3800              		.cfi_def_cfa_offset 40
 3801              		.cfi_offset 3, -40
 3802 1fb9 89FD     		movl	%edi, %ebp
 3803 1fbb 4989F4   		movq	%rsi, %r12
 3804 1fbe BF210000 		movl	$33, %edi
 3804      00
 3805 1fc3 400FB6ED 		movzbl	%bpl, %ebp
 3806 1fc7 4883EC18 		subq	$24, %rsp
 3807              		.cfi_def_cfa_offset 64
 3808 1fcb 64488B04 		movq	%fs:40, %rax
 3808      25280000 
 3808      00
 3809 1fd4 48894424 		movq	%rax, 8(%rsp)
 3809      08
 3810 1fd9 31C0     		xorl	%eax, %eax
 3811 1fdb E8000000 		call	malloc
 3811      00
 3812 1fe0 4D89E8   		movq	%r13, %r8
 3813 1fe3 4889E1   		movq	%rsp, %rcx
 3814 1fe6 BA020000 		movl	$2, %edx
 3814      00
 3815 1feb 89EE     		movl	%ebp, %esi
 3816 1fed 4C89E7   		movq	%r12, %rdi
 3817 1ff0 4889C3   		movq	%rax, %rbx
 3818 1ff3 E8000000 		call	flReadChannel
 3818      00
 3819 1ff8 4D89E8   		movq	%r13, %r8
 3820 1ffb 4889E1   		movq	%rsp, %rcx
 3821 1ffe BA040000 		movl	$4, %edx
 3821      00
 3822 2003 89EE     		movl	%ebp, %esi
 3823 2005 4C89E7   		movq	%r12, %rdi
 3824 2008 E8000000 		call	flReadChannel
 3824      00
 3825 200d 85C0     		testl	%eax, %eax
 3826 200f 0F852302 		jne	.L793
 3826      0000
 3827 2015 0FB60424 		movzbl	(%rsp), %eax
 3828 2019 4889DF   		movq	%rbx, %rdi
 3829 201c 89C2     		movl	%eax, %edx
 3830 201e 83E201   		andl	$1, %edx
 3831 2021 83C230   		addl	$48, %edx
 3832 2024 8813     		movb	%dl, (%rbx)
 3833 2026 89C2     		movl	%eax, %edx
 3834 2028 83E202   		andl	$2, %edx
 3835 202b 80FA01   		cmpb	$1, %dl
 3836 202e 19D2     		sbbl	%edx, %edx
 3837 2030 83C231   		addl	$49, %edx
 3838 2033 885301   		movb	%dl, 1(%rbx)
 3839 2036 89C2     		movl	%eax, %edx
 3840 2038 83E204   		andl	$4, %edx
 3841 203b 80FA01   		cmpb	$1, %dl
 3842 203e 19D2     		sbbl	%edx, %edx
 3843 2040 83C231   		addl	$49, %edx
 3844 2043 885302   		movb	%dl, 2(%rbx)
 3845 2046 89C2     		movl	%eax, %edx
 3846 2048 83E208   		andl	$8, %edx
 3847 204b 80FA01   		cmpb	$1, %dl
 3848 204e 19D2     		sbbl	%edx, %edx
 3849 2050 83C231   		addl	$49, %edx
 3850 2053 885303   		movb	%dl, 3(%rbx)
 3851 2056 89C2     		movl	%eax, %edx
 3852 2058 83E210   		andl	$16, %edx
 3853 205b 80FA01   		cmpb	$1, %dl
 3854 205e 19D2     		sbbl	%edx, %edx
 3855 2060 83C231   		addl	$49, %edx
 3856 2063 885304   		movb	%dl, 4(%rbx)
 3857 2066 89C2     		movl	%eax, %edx
 3858 2068 83E220   		andl	$32, %edx
 3859 206b 80FA01   		cmpb	$1, %dl
 3860 206e 19D2     		sbbl	%edx, %edx
 3861 2070 83C231   		addl	$49, %edx
 3862 2073 885305   		movb	%dl, 5(%rbx)
 3863 2076 89C2     		movl	%eax, %edx
 3864 2078 83E240   		andl	$64, %edx
 3865 207b 80FA01   		cmpb	$1, %dl
 3866 207e 19D2     		sbbl	%edx, %edx
 3867 2080 83E080   		andl	$-128, %eax
 3868 2083 83C231   		addl	$49, %edx
 3869 2086 3C01     		cmpb	$1, %al
 3870 2088 19C0     		sbbl	%eax, %eax
 3871 208a 885306   		movb	%dl, 6(%rbx)
 3872 208d 83C031   		addl	$49, %eax
 3873 2090 884307   		movb	%al, 7(%rbx)
 3874 2093 0FB64424 		movzbl	1(%rsp), %eax
 3874      01
 3875 2098 89C2     		movl	%eax, %edx
 3876 209a 83E201   		andl	$1, %edx
 3877 209d 83C230   		addl	$48, %edx
 3878 20a0 885308   		movb	%dl, 8(%rbx)
 3879 20a3 89C2     		movl	%eax, %edx
 3880 20a5 83E202   		andl	$2, %edx
 3881 20a8 80FA01   		cmpb	$1, %dl
 3882 20ab 19D2     		sbbl	%edx, %edx
 3883 20ad 83C231   		addl	$49, %edx
 3884 20b0 885309   		movb	%dl, 9(%rbx)
 3885 20b3 89C2     		movl	%eax, %edx
 3886 20b5 83E204   		andl	$4, %edx
 3887 20b8 80FA01   		cmpb	$1, %dl
 3888 20bb 19D2     		sbbl	%edx, %edx
 3889 20bd 83C231   		addl	$49, %edx
 3890 20c0 88530A   		movb	%dl, 10(%rbx)
 3891 20c3 89C2     		movl	%eax, %edx
 3892 20c5 83E208   		andl	$8, %edx
 3893 20c8 80FA01   		cmpb	$1, %dl
 3894 20cb 19D2     		sbbl	%edx, %edx
 3895 20cd 83C231   		addl	$49, %edx
 3896 20d0 88530B   		movb	%dl, 11(%rbx)
 3897 20d3 89C2     		movl	%eax, %edx
 3898 20d5 83E210   		andl	$16, %edx
 3899 20d8 80FA01   		cmpb	$1, %dl
 3900 20db 19D2     		sbbl	%edx, %edx
 3901 20dd 83C231   		addl	$49, %edx
 3902 20e0 88530C   		movb	%dl, 12(%rbx)
 3903 20e3 89C2     		movl	%eax, %edx
 3904 20e5 83E220   		andl	$32, %edx
 3905 20e8 80FA01   		cmpb	$1, %dl
 3906 20eb 19D2     		sbbl	%edx, %edx
 3907 20ed 83C231   		addl	$49, %edx
 3908 20f0 88530D   		movb	%dl, 13(%rbx)
 3909 20f3 89C2     		movl	%eax, %edx
 3910 20f5 83E240   		andl	$64, %edx
 3911 20f8 80FA01   		cmpb	$1, %dl
 3912 20fb 19D2     		sbbl	%edx, %edx
 3913 20fd 83E080   		andl	$-128, %eax
 3914 2100 83C231   		addl	$49, %edx
 3915 2103 3C01     		cmpb	$1, %al
 3916 2105 19C0     		sbbl	%eax, %eax
 3917 2107 88530E   		movb	%dl, 14(%rbx)
 3918 210a 83C031   		addl	$49, %eax
 3919 210d 88430F   		movb	%al, 15(%rbx)
 3920 2110 0FB64424 		movzbl	2(%rsp), %eax
 3920      02
 3921 2115 89C2     		movl	%eax, %edx
 3922 2117 83E201   		andl	$1, %edx
 3923 211a 83C230   		addl	$48, %edx
 3924 211d 885310   		movb	%dl, 16(%rbx)
 3925 2120 89C2     		movl	%eax, %edx
 3926 2122 83E202   		andl	$2, %edx
 3927 2125 80FA01   		cmpb	$1, %dl
 3928 2128 19D2     		sbbl	%edx, %edx
 3929 212a 83C231   		addl	$49, %edx
 3930 212d 885311   		movb	%dl, 17(%rbx)
 3931 2130 89C2     		movl	%eax, %edx
 3932 2132 83E204   		andl	$4, %edx
 3933 2135 80FA01   		cmpb	$1, %dl
 3934 2138 19D2     		sbbl	%edx, %edx
 3935 213a 83C231   		addl	$49, %edx
 3936 213d 885312   		movb	%dl, 18(%rbx)
 3937 2140 89C2     		movl	%eax, %edx
 3938 2142 83E208   		andl	$8, %edx
 3939 2145 80FA01   		cmpb	$1, %dl
 3940 2148 19D2     		sbbl	%edx, %edx
 3941 214a 83C231   		addl	$49, %edx
 3942 214d 885313   		movb	%dl, 19(%rbx)
 3943 2150 89C2     		movl	%eax, %edx
 3944 2152 83E210   		andl	$16, %edx
 3945 2155 80FA01   		cmpb	$1, %dl
 3946 2158 19D2     		sbbl	%edx, %edx
 3947 215a 83C231   		addl	$49, %edx
 3948 215d 885314   		movb	%dl, 20(%rbx)
 3949 2160 89C2     		movl	%eax, %edx
 3950 2162 83E220   		andl	$32, %edx
 3951 2165 80FA01   		cmpb	$1, %dl
 3952 2168 19D2     		sbbl	%edx, %edx
 3953 216a 83C231   		addl	$49, %edx
 3954 216d 885315   		movb	%dl, 21(%rbx)
 3955 2170 89C2     		movl	%eax, %edx
 3956 2172 83E240   		andl	$64, %edx
 3957 2175 80FA01   		cmpb	$1, %dl
 3958 2178 19D2     		sbbl	%edx, %edx
 3959 217a 83E080   		andl	$-128, %eax
 3960 217d 83C231   		addl	$49, %edx
 3961 2180 3C01     		cmpb	$1, %al
 3962 2182 19C0     		sbbl	%eax, %eax
 3963 2184 885316   		movb	%dl, 22(%rbx)
 3964 2187 83C031   		addl	$49, %eax
 3965 218a 884317   		movb	%al, 23(%rbx)
 3966 218d 0FB64424 		movzbl	3(%rsp), %eax
 3966      03
 3967 2192 89C2     		movl	%eax, %edx
 3968 2194 83E201   		andl	$1, %edx
 3969 2197 83C230   		addl	$48, %edx
 3970 219a 885318   		movb	%dl, 24(%rbx)
 3971 219d 89C2     		movl	%eax, %edx
 3972 219f 83E202   		andl	$2, %edx
 3973 21a2 80FA01   		cmpb	$1, %dl
 3974 21a5 19D2     		sbbl	%edx, %edx
 3975 21a7 83C231   		addl	$49, %edx
 3976 21aa 885319   		movb	%dl, 25(%rbx)
 3977 21ad 89C2     		movl	%eax, %edx
 3978 21af 83E204   		andl	$4, %edx
 3979 21b2 80FA01   		cmpb	$1, %dl
 3980 21b5 19D2     		sbbl	%edx, %edx
 3981 21b7 83C231   		addl	$49, %edx
 3982 21ba 88531A   		movb	%dl, 26(%rbx)
 3983 21bd 89C2     		movl	%eax, %edx
 3984 21bf 83E208   		andl	$8, %edx
 3985 21c2 80FA01   		cmpb	$1, %dl
 3986 21c5 19D2     		sbbl	%edx, %edx
 3987 21c7 83C231   		addl	$49, %edx
 3988 21ca 88531B   		movb	%dl, 27(%rbx)
 3989 21cd 89C2     		movl	%eax, %edx
 3990 21cf 83E210   		andl	$16, %edx
 3991 21d2 80FA01   		cmpb	$1, %dl
 3992 21d5 19D2     		sbbl	%edx, %edx
 3993 21d7 83C231   		addl	$49, %edx
 3994 21da 88531C   		movb	%dl, 28(%rbx)
 3995 21dd 89C2     		movl	%eax, %edx
 3996 21df 488B3500 		movq	key(%rip), %rsi
 3996      000000
 3997 21e6 83E220   		andl	$32, %edx
 3998 21e9 80FA01   		cmpb	$1, %dl
 3999 21ec 19D2     		sbbl	%edx, %edx
 4000 21ee 83C231   		addl	$49, %edx
 4001 21f1 88531D   		movb	%dl, 29(%rbx)
 4002 21f4 89C2     		movl	%eax, %edx
 4003 21f6 83E240   		andl	$64, %edx
 4004 21f9 80FA01   		cmpb	$1, %dl
 4005 21fc 19D2     		sbbl	%edx, %edx
 4006 21fe 83E080   		andl	$-128, %eax
 4007 2201 83C231   		addl	$49, %edx
 4008 2204 3C01     		cmpb	$1, %al
 4009 2206 19C0     		sbbl	%eax, %eax
 4010 2208 88531E   		movb	%dl, 30(%rbx)
 4011 220b 83C031   		addl	$49, %eax
 4012 220e 88431F   		movb	%al, 31(%rbx)
 4013 2211 E8000000 		call	decrypt
 4013      00
 4014              	.L726:
 4015 2216 488B4C24 		movq	8(%rsp), %rcx
 4015      08
 4016 221b 6448330C 		xorq	%fs:40, %rcx
 4016      25280000 
 4016      00
 4017 2224 751A     		jne	.L794
 4018 2226 4883C418 		addq	$24, %rsp
 4019              		.cfi_remember_state
 4020              		.cfi_def_cfa_offset 40
 4021 222a 5B       		popq	%rbx
 4022              		.cfi_def_cfa_offset 32
 4023 222b 5D       		popq	%rbp
 4024              		.cfi_def_cfa_offset 24
 4025 222c 415C     		popq	%r12
 4026              		.cfi_def_cfa_offset 16
 4027 222e 415D     		popq	%r13
 4028              		.cfi_def_cfa_offset 8
 4029 2230 C3       		ret
 4030              		.p2align 4,,10
 4031 2231 0F1F8000 		.p2align 3
 4031      000000
 4032              	.L793:
 4033              		.cfi_restore_state
 4034 2238 C60366   		movb	$102, (%rbx)
 4035 223b 4889D8   		movq	%rbx, %rax
 4036 223e EBD6     		jmp	.L726
 4037              	.L794:
 4038 2240 E8000000 		call	__stack_chk_fail
 4038      00
 4039              		.cfi_endproc
 4040              	.LFE78:
 4042              		.section	.text.unlikely
 4043              	.LCOLDE53:
 4044              		.text
 4045              	.LHOTE53:
 4046              		.section	.text.unlikely
 4047              	.LCOLDB54:
 4048              		.text
 4049              	.LHOTB54:
 4050 2245 90662E0F 		.p2align 4,,15
 4050      1F840000 
 4050      000000
 4051              		.globl	read_1byte_from_fpgalink
 4053              	read_1byte_from_fpgalink:
 4054              	.LFB79:
 4055              		.cfi_startproc
 4056 2250 4156     		pushq	%r14
 4057              		.cfi_def_cfa_offset 16
 4058              		.cfi_offset 14, -16
 4059 2252 4155     		pushq	%r13
 4060              		.cfi_def_cfa_offset 24
 4061              		.cfi_offset 13, -24
 4062 2254 4989D6   		movq	%rdx, %r14
 4063 2257 4154     		pushq	%r12
 4064              		.cfi_def_cfa_offset 32
 4065              		.cfi_offset 12, -32
 4066 2259 55       		pushq	%rbp
 4067              		.cfi_def_cfa_offset 40
 4068              		.cfi_offset 6, -40
 4069 225a 4189FC   		movl	%edi, %r12d
 4070 225d 53       		pushq	%rbx
 4071              		.cfi_def_cfa_offset 48
 4072              		.cfi_offset 3, -48
 4073 225e BF210000 		movl	$33, %edi
 4073      00
 4074 2263 89CB     		movl	%ecx, %ebx
 4075 2265 4989F5   		movq	%rsi, %r13
 4076 2268 4883EC10 		subq	$16, %rsp
 4077              		.cfi_def_cfa_offset 64
 4078 226c 64488B04 		movq	%fs:40, %rax
 4078      25280000 
 4078      00
 4079 2275 48894424 		movq	%rax, 8(%rsp)
 4079      08
 4080 227a 31C0     		xorl	%eax, %eax
 4081 227c E8000000 		call	malloc
 4081      00
 4082 2281 85DB     		testl	%ebx, %ebx
 4083 2283 4889C5   		movq	%rax, %rbp
 4084 2286 0F8E7402 		jle	.L796
 4084      0000
 4085 228c 450FB6E4 		movzbl	%r12b, %r12d
 4086 2290 EB0E     		jmp	.L848
 4087              		.p2align 4,,10
 4088 2292 660F1F44 		.p2align 3
 4088      0000
 4089              	.L797:
 4090 2298 85DB     		testl	%ebx, %ebx
 4091 229a 0F846002 		je	.L796
 4091      0000
 4092              	.L848:
 4093 22a0 31FF     		xorl	%edi, %edi
 4094 22a2 83EB01   		subl	$1, %ebx
 4095 22a5 E8000000 		call	sleep
 4095      00
 4096 22aa 4D89F0   		movq	%r14, %r8
 4097 22ad 4889E1   		movq	%rsp, %rcx
 4098 22b0 BA010000 		movl	$1, %edx
 4098      00
 4099 22b5 4489E6   		movl	%r12d, %esi
 4100 22b8 4C89EF   		movq	%r13, %rdi
 4101 22bb E8000000 		call	flReadChannel
 4101      00
 4102 22c0 803C2400 		cmpb	$0, (%rsp)
 4103 22c4 74D2     		je	.L797
 4104 22c6 488D4C24 		leaq	1(%rsp), %rcx
 4104      01
 4105 22cb BA030000 		movl	$3, %edx
 4105      00
 4106 22d0 4489E6   		movl	%r12d, %esi
 4107 22d3 4C89EF   		movq	%r13, %rdi
 4108 22d6 4D89F0   		movq	%r14, %r8
 4109 22d9 E8000000 		call	flReadChannel
 4109      00
 4110 22de 0FB60424 		movzbl	(%rsp), %eax
 4111 22e2 4889EF   		movq	%rbp, %rdi
 4112 22e5 89C2     		movl	%eax, %edx
 4113 22e7 83E201   		andl	$1, %edx
 4114 22ea 83C230   		addl	$48, %edx
 4115 22ed 885500   		movb	%dl, 0(%rbp)
 4116 22f0 89C2     		movl	%eax, %edx
 4117 22f2 83E202   		andl	$2, %edx
 4118 22f5 80FA01   		cmpb	$1, %dl
 4119 22f8 19D2     		sbbl	%edx, %edx
 4120 22fa 83C231   		addl	$49, %edx
 4121 22fd 885501   		movb	%dl, 1(%rbp)
 4122 2300 89C2     		movl	%eax, %edx
 4123 2302 83E204   		andl	$4, %edx
 4124 2305 80FA01   		cmpb	$1, %dl
 4125 2308 19D2     		sbbl	%edx, %edx
 4126 230a 83C231   		addl	$49, %edx
 4127 230d 885502   		movb	%dl, 2(%rbp)
 4128 2310 89C2     		movl	%eax, %edx
 4129 2312 83E208   		andl	$8, %edx
 4130 2315 80FA01   		cmpb	$1, %dl
 4131 2318 19D2     		sbbl	%edx, %edx
 4132 231a 83C231   		addl	$49, %edx
 4133 231d 885503   		movb	%dl, 3(%rbp)
 4134 2320 89C2     		movl	%eax, %edx
 4135 2322 83E210   		andl	$16, %edx
 4136 2325 80FA01   		cmpb	$1, %dl
 4137 2328 19D2     		sbbl	%edx, %edx
 4138 232a 83C231   		addl	$49, %edx
 4139 232d 885504   		movb	%dl, 4(%rbp)
 4140 2330 89C2     		movl	%eax, %edx
 4141 2332 83E220   		andl	$32, %edx
 4142 2335 80FA01   		cmpb	$1, %dl
 4143 2338 19D2     		sbbl	%edx, %edx
 4144 233a 83C231   		addl	$49, %edx
 4145 233d 885505   		movb	%dl, 5(%rbp)
 4146 2340 89C2     		movl	%eax, %edx
 4147 2342 83E240   		andl	$64, %edx
 4148 2345 80FA01   		cmpb	$1, %dl
 4149 2348 19D2     		sbbl	%edx, %edx
 4150 234a 83E080   		andl	$-128, %eax
 4151 234d 83C231   		addl	$49, %edx
 4152 2350 3C01     		cmpb	$1, %al
 4153 2352 19C0     		sbbl	%eax, %eax
 4154 2354 885506   		movb	%dl, 6(%rbp)
 4155 2357 83C031   		addl	$49, %eax
 4156 235a 884507   		movb	%al, 7(%rbp)
 4157 235d 0FB64424 		movzbl	1(%rsp), %eax
 4157      01
 4158 2362 89C2     		movl	%eax, %edx
 4159 2364 83E201   		andl	$1, %edx
 4160 2367 83C230   		addl	$48, %edx
 4161 236a 885508   		movb	%dl, 8(%rbp)
 4162 236d 89C2     		movl	%eax, %edx
 4163 236f 83E202   		andl	$2, %edx
 4164 2372 80FA01   		cmpb	$1, %dl
 4165 2375 19D2     		sbbl	%edx, %edx
 4166 2377 83C231   		addl	$49, %edx
 4167 237a 885509   		movb	%dl, 9(%rbp)
 4168 237d 89C2     		movl	%eax, %edx
 4169 237f 83E204   		andl	$4, %edx
 4170 2382 80FA01   		cmpb	$1, %dl
 4171 2385 19D2     		sbbl	%edx, %edx
 4172 2387 83C231   		addl	$49, %edx
 4173 238a 88550A   		movb	%dl, 10(%rbp)
 4174 238d 89C2     		movl	%eax, %edx
 4175 238f 83E208   		andl	$8, %edx
 4176 2392 80FA01   		cmpb	$1, %dl
 4177 2395 19D2     		sbbl	%edx, %edx
 4178 2397 83C231   		addl	$49, %edx
 4179 239a 88550B   		movb	%dl, 11(%rbp)
 4180 239d 89C2     		movl	%eax, %edx
 4181 239f 83E210   		andl	$16, %edx
 4182 23a2 80FA01   		cmpb	$1, %dl
 4183 23a5 19D2     		sbbl	%edx, %edx
 4184 23a7 83C231   		addl	$49, %edx
 4185 23aa 88550C   		movb	%dl, 12(%rbp)
 4186 23ad 89C2     		movl	%eax, %edx
 4187 23af 83E220   		andl	$32, %edx
 4188 23b2 80FA01   		cmpb	$1, %dl
 4189 23b5 19D2     		sbbl	%edx, %edx
 4190 23b7 83C231   		addl	$49, %edx
 4191 23ba 88550D   		movb	%dl, 13(%rbp)
 4192 23bd 89C2     		movl	%eax, %edx
 4193 23bf 83E240   		andl	$64, %edx
 4194 23c2 80FA01   		cmpb	$1, %dl
 4195 23c5 19D2     		sbbl	%edx, %edx
 4196 23c7 83E080   		andl	$-128, %eax
 4197 23ca 83C231   		addl	$49, %edx
 4198 23cd 3C01     		cmpb	$1, %al
 4199 23cf 19C0     		sbbl	%eax, %eax
 4200 23d1 88550E   		movb	%dl, 14(%rbp)
 4201 23d4 83C031   		addl	$49, %eax
 4202 23d7 88450F   		movb	%al, 15(%rbp)
 4203 23da 0FB64424 		movzbl	2(%rsp), %eax
 4203      02
 4204 23df 89C2     		movl	%eax, %edx
 4205 23e1 83E201   		andl	$1, %edx
 4206 23e4 83C230   		addl	$48, %edx
 4207 23e7 885510   		movb	%dl, 16(%rbp)
 4208 23ea 89C2     		movl	%eax, %edx
 4209 23ec 83E202   		andl	$2, %edx
 4210 23ef 80FA01   		cmpb	$1, %dl
 4211 23f2 19D2     		sbbl	%edx, %edx
 4212 23f4 83C231   		addl	$49, %edx
 4213 23f7 885511   		movb	%dl, 17(%rbp)
 4214 23fa 89C2     		movl	%eax, %edx
 4215 23fc 83E204   		andl	$4, %edx
 4216 23ff 80FA01   		cmpb	$1, %dl
 4217 2402 19D2     		sbbl	%edx, %edx
 4218 2404 83C231   		addl	$49, %edx
 4219 2407 885512   		movb	%dl, 18(%rbp)
 4220 240a 89C2     		movl	%eax, %edx
 4221 240c 83E208   		andl	$8, %edx
 4222 240f 80FA01   		cmpb	$1, %dl
 4223 2412 19D2     		sbbl	%edx, %edx
 4224 2414 83C231   		addl	$49, %edx
 4225 2417 885513   		movb	%dl, 19(%rbp)
 4226 241a 89C2     		movl	%eax, %edx
 4227 241c 83E210   		andl	$16, %edx
 4228 241f 80FA01   		cmpb	$1, %dl
 4229 2422 19D2     		sbbl	%edx, %edx
 4230 2424 83C231   		addl	$49, %edx
 4231 2427 885514   		movb	%dl, 20(%rbp)
 4232 242a 89C2     		movl	%eax, %edx
 4233 242c 83E220   		andl	$32, %edx
 4234 242f 80FA01   		cmpb	$1, %dl
 4235 2432 19D2     		sbbl	%edx, %edx
 4236 2434 83C231   		addl	$49, %edx
 4237 2437 885515   		movb	%dl, 21(%rbp)
 4238 243a 89C2     		movl	%eax, %edx
 4239 243c 83E240   		andl	$64, %edx
 4240 243f 80FA01   		cmpb	$1, %dl
 4241 2442 19D2     		sbbl	%edx, %edx
 4242 2444 83E080   		andl	$-128, %eax
 4243 2447 83C231   		addl	$49, %edx
 4244 244a 3C01     		cmpb	$1, %al
 4245 244c 19C0     		sbbl	%eax, %eax
 4246 244e 885516   		movb	%dl, 22(%rbp)
 4247 2451 83C031   		addl	$49, %eax
 4248 2454 884517   		movb	%al, 23(%rbp)
 4249 2457 0FB64424 		movzbl	3(%rsp), %eax
 4249      03
 4250 245c 89C2     		movl	%eax, %edx
 4251 245e 83E201   		andl	$1, %edx
 4252 2461 83C230   		addl	$48, %edx
 4253 2464 885518   		movb	%dl, 24(%rbp)
 4254 2467 89C2     		movl	%eax, %edx
 4255 2469 83E202   		andl	$2, %edx
 4256 246c 80FA01   		cmpb	$1, %dl
 4257 246f 19D2     		sbbl	%edx, %edx
 4258 2471 83C231   		addl	$49, %edx
 4259 2474 885519   		movb	%dl, 25(%rbp)
 4260 2477 89C2     		movl	%eax, %edx
 4261 2479 83E204   		andl	$4, %edx
 4262 247c 80FA01   		cmpb	$1, %dl
 4263 247f 19D2     		sbbl	%edx, %edx
 4264 2481 83C231   		addl	$49, %edx
 4265 2484 88551A   		movb	%dl, 26(%rbp)
 4266 2487 89C2     		movl	%eax, %edx
 4267 2489 83E208   		andl	$8, %edx
 4268 248c 80FA01   		cmpb	$1, %dl
 4269 248f 19D2     		sbbl	%edx, %edx
 4270 2491 83C231   		addl	$49, %edx
 4271 2494 88551B   		movb	%dl, 27(%rbp)
 4272 2497 89C2     		movl	%eax, %edx
 4273 2499 83E210   		andl	$16, %edx
 4274 249c 80FA01   		cmpb	$1, %dl
 4275 249f 19D2     		sbbl	%edx, %edx
 4276 24a1 83C231   		addl	$49, %edx
 4277 24a4 88551C   		movb	%dl, 28(%rbp)
 4278 24a7 89C2     		movl	%eax, %edx
 4279 24a9 488B3500 		movq	key(%rip), %rsi
 4279      000000
 4280 24b0 83E220   		andl	$32, %edx
 4281 24b3 80FA01   		cmpb	$1, %dl
 4282 24b6 19D2     		sbbl	%edx, %edx
 4283 24b8 83C231   		addl	$49, %edx
 4284 24bb 88551D   		movb	%dl, 29(%rbp)
 4285 24be 89C2     		movl	%eax, %edx
 4286 24c0 83E240   		andl	$64, %edx
 4287 24c3 80FA01   		cmpb	$1, %dl
 4288 24c6 19D2     		sbbl	%edx, %edx
 4289 24c8 83E080   		andl	$-128, %eax
 4290 24cb 83C231   		addl	$49, %edx
 4291 24ce 3C01     		cmpb	$1, %al
 4292 24d0 19C0     		sbbl	%eax, %eax
 4293 24d2 88551E   		movb	%dl, 30(%rbp)
 4294 24d5 83C031   		addl	$49, %eax
 4295 24d8 88451F   		movb	%al, 31(%rbp)
 4296 24db E8000000 		call	decrypt
 4296      00
 4297              	.L864:
 4298 24e0 488B7424 		movq	8(%rsp), %rsi
 4298      08
 4299 24e5 64483334 		xorq	%fs:40, %rsi
 4299      25280000 
 4299      00
 4300 24ee 7519     		jne	.L870
 4301 24f0 4883C410 		addq	$16, %rsp
 4302              		.cfi_remember_state
 4303              		.cfi_def_cfa_offset 48
 4304 24f4 5B       		popq	%rbx
 4305              		.cfi_def_cfa_offset 40
 4306 24f5 5D       		popq	%rbp
 4307              		.cfi_def_cfa_offset 32
 4308 24f6 415C     		popq	%r12
 4309              		.cfi_def_cfa_offset 24
 4310 24f8 415D     		popq	%r13
 4311              		.cfi_def_cfa_offset 16
 4312 24fa 415E     		popq	%r14
 4313              		.cfi_def_cfa_offset 8
 4314 24fc C3       		ret
 4315 24fd 0F1F00   		.p2align 4,,10
 4316              		.p2align 3
 4317              	.L796:
 4318              		.cfi_restore_state
 4319 2500 C6450066 		movb	$102, 0(%rbp)
 4320 2504 4889E8   		movq	%rbp, %rax
 4321 2507 EBD7     		jmp	.L864
 4322              	.L870:
 4323 2509 E8000000 		call	__stack_chk_fail
 4323      00
 4324              		.cfi_endproc
 4325              	.LFE79:
 4327              		.section	.text.unlikely
 4328              	.LCOLDE54:
 4329              		.text
 4330              	.LHOTE54:
 4331              		.section	.rodata.str1.1
 4332              	.LC55:
 4333 0107 72656365 		.string	"received ack is %s\n"
 4333      69766564 
 4333      2061636B 
 4333      20697320 
 4333      25730A00 
 4334              		.section	.text.unlikely
 4335              	.LCOLDB56:
 4336              		.text
 4337              	.LHOTB56:
 4338 250e 6690     		.p2align 4,,15
 4339              		.globl	receive_ack
 4341              	receive_ack:
 4342              	.LFB80:
 4343              		.cfi_startproc
 4344 2510 4155     		pushq	%r13
 4345              		.cfi_def_cfa_offset 16
 4346              		.cfi_offset 13, -16
 4347 2512 4154     		pushq	%r12
 4348              		.cfi_def_cfa_offset 24
 4349              		.cfi_offset 12, -24
 4350 2514 4989D5   		movq	%rdx, %r13
 4351 2517 55       		pushq	%rbp
 4352              		.cfi_def_cfa_offset 32
 4353              		.cfi_offset 6, -32
 4354 2518 53       		pushq	%rbx
 4355              		.cfi_def_cfa_offset 40
 4356              		.cfi_offset 3, -40
 4357 2519 89FD     		movl	%edi, %ebp
 4358 251b 4989F4   		movq	%rsi, %r12
 4359 251e BF210000 		movl	$33, %edi
 4359      00
 4360 2523 400FB6ED 		movzbl	%bpl, %ebp
 4361 2527 4883EC18 		subq	$24, %rsp
 4362              		.cfi_def_cfa_offset 64
 4363 252b 64488B04 		movq	%fs:40, %rax
 4363      25280000 
 4363      00
 4364 2534 48894424 		movq	%rax, 8(%rsp)
 4364      08
 4365 2539 31C0     		xorl	%eax, %eax
 4366 253b E8000000 		call	malloc
 4366      00
 4367 2540 4D89E8   		movq	%r13, %r8
 4368 2543 4889E1   		movq	%rsp, %rcx
 4369 2546 BA020000 		movl	$2, %edx
 4369      00
 4370 254b 89EE     		movl	%ebp, %esi
 4371 254d 4C89E7   		movq	%r12, %rdi
 4372 2550 4889C3   		movq	%rax, %rbx
 4373 2553 E8000000 		call	flReadChannel
 4373      00
 4374 2558 4D89E8   		movq	%r13, %r8
 4375 255b 4889E1   		movq	%rsp, %rcx
 4376 255e BA040000 		movl	$4, %edx
 4376      00
 4377 2563 89EE     		movl	%ebp, %esi
 4378 2565 4C89E7   		movq	%r12, %rdi
 4379 2568 E8000000 		call	flReadChannel
 4379      00
 4380 256d 85C0     		testl	%eax, %eax
 4381 256f 0F856302 		jne	.L944
 4381      0000
 4382 2575 0FB60424 		movzbl	(%rsp), %eax
 4383 2579 4889DF   		movq	%rbx, %rdi
 4384 257c 89C2     		movl	%eax, %edx
 4385 257e 83E201   		andl	$1, %edx
 4386 2581 83C230   		addl	$48, %edx
 4387 2584 8813     		movb	%dl, (%rbx)
 4388 2586 89C2     		movl	%eax, %edx
 4389 2588 83E202   		andl	$2, %edx
 4390 258b 80FA01   		cmpb	$1, %dl
 4391 258e 19D2     		sbbl	%edx, %edx
 4392 2590 83C231   		addl	$49, %edx
 4393 2593 885301   		movb	%dl, 1(%rbx)
 4394 2596 89C2     		movl	%eax, %edx
 4395 2598 83E204   		andl	$4, %edx
 4396 259b 80FA01   		cmpb	$1, %dl
 4397 259e 19D2     		sbbl	%edx, %edx
 4398 25a0 83C231   		addl	$49, %edx
 4399 25a3 885302   		movb	%dl, 2(%rbx)
 4400 25a6 89C2     		movl	%eax, %edx
 4401 25a8 83E208   		andl	$8, %edx
 4402 25ab 80FA01   		cmpb	$1, %dl
 4403 25ae 19D2     		sbbl	%edx, %edx
 4404 25b0 83C231   		addl	$49, %edx
 4405 25b3 885303   		movb	%dl, 3(%rbx)
 4406 25b6 89C2     		movl	%eax, %edx
 4407 25b8 83E210   		andl	$16, %edx
 4408 25bb 80FA01   		cmpb	$1, %dl
 4409 25be 19D2     		sbbl	%edx, %edx
 4410 25c0 83C231   		addl	$49, %edx
 4411 25c3 885304   		movb	%dl, 4(%rbx)
 4412 25c6 89C2     		movl	%eax, %edx
 4413 25c8 83E220   		andl	$32, %edx
 4414 25cb 80FA01   		cmpb	$1, %dl
 4415 25ce 19D2     		sbbl	%edx, %edx
 4416 25d0 83C231   		addl	$49, %edx
 4417 25d3 885305   		movb	%dl, 5(%rbx)
 4418 25d6 89C2     		movl	%eax, %edx
 4419 25d8 83E240   		andl	$64, %edx
 4420 25db 80FA01   		cmpb	$1, %dl
 4421 25de 19D2     		sbbl	%edx, %edx
 4422 25e0 83E080   		andl	$-128, %eax
 4423 25e3 83C231   		addl	$49, %edx
 4424 25e6 3C01     		cmpb	$1, %al
 4425 25e8 19C0     		sbbl	%eax, %eax
 4426 25ea 885306   		movb	%dl, 6(%rbx)
 4427 25ed 83C031   		addl	$49, %eax
 4428 25f0 884307   		movb	%al, 7(%rbx)
 4429 25f3 0FB64424 		movzbl	1(%rsp), %eax
 4429      01
 4430 25f8 89C2     		movl	%eax, %edx
 4431 25fa 83E201   		andl	$1, %edx
 4432 25fd 83C230   		addl	$48, %edx
 4433 2600 885308   		movb	%dl, 8(%rbx)
 4434 2603 89C2     		movl	%eax, %edx
 4435 2605 83E202   		andl	$2, %edx
 4436 2608 80FA01   		cmpb	$1, %dl
 4437 260b 19D2     		sbbl	%edx, %edx
 4438 260d 83C231   		addl	$49, %edx
 4439 2610 885309   		movb	%dl, 9(%rbx)
 4440 2613 89C2     		movl	%eax, %edx
 4441 2615 83E204   		andl	$4, %edx
 4442 2618 80FA01   		cmpb	$1, %dl
 4443 261b 19D2     		sbbl	%edx, %edx
 4444 261d 83C231   		addl	$49, %edx
 4445 2620 88530A   		movb	%dl, 10(%rbx)
 4446 2623 89C2     		movl	%eax, %edx
 4447 2625 83E208   		andl	$8, %edx
 4448 2628 80FA01   		cmpb	$1, %dl
 4449 262b 19D2     		sbbl	%edx, %edx
 4450 262d 83C231   		addl	$49, %edx
 4451 2630 88530B   		movb	%dl, 11(%rbx)
 4452 2633 89C2     		movl	%eax, %edx
 4453 2635 83E210   		andl	$16, %edx
 4454 2638 80FA01   		cmpb	$1, %dl
 4455 263b 19D2     		sbbl	%edx, %edx
 4456 263d 83C231   		addl	$49, %edx
 4457 2640 88530C   		movb	%dl, 12(%rbx)
 4458 2643 89C2     		movl	%eax, %edx
 4459 2645 83E220   		andl	$32, %edx
 4460 2648 80FA01   		cmpb	$1, %dl
 4461 264b 19D2     		sbbl	%edx, %edx
 4462 264d 83C231   		addl	$49, %edx
 4463 2650 88530D   		movb	%dl, 13(%rbx)
 4464 2653 89C2     		movl	%eax, %edx
 4465 2655 83E240   		andl	$64, %edx
 4466 2658 80FA01   		cmpb	$1, %dl
 4467 265b 19D2     		sbbl	%edx, %edx
 4468 265d 83E080   		andl	$-128, %eax
 4469 2660 83C231   		addl	$49, %edx
 4470 2663 3C01     		cmpb	$1, %al
 4471 2665 19C0     		sbbl	%eax, %eax
 4472 2667 88530E   		movb	%dl, 14(%rbx)
 4473 266a 83C031   		addl	$49, %eax
 4474 266d 88430F   		movb	%al, 15(%rbx)
 4475 2670 0FB64424 		movzbl	2(%rsp), %eax
 4475      02
 4476 2675 89C2     		movl	%eax, %edx
 4477 2677 83E201   		andl	$1, %edx
 4478 267a 83C230   		addl	$48, %edx
 4479 267d 885310   		movb	%dl, 16(%rbx)
 4480 2680 89C2     		movl	%eax, %edx
 4481 2682 83E202   		andl	$2, %edx
 4482 2685 80FA01   		cmpb	$1, %dl
 4483 2688 19D2     		sbbl	%edx, %edx
 4484 268a 83C231   		addl	$49, %edx
 4485 268d 885311   		movb	%dl, 17(%rbx)
 4486 2690 89C2     		movl	%eax, %edx
 4487 2692 83E204   		andl	$4, %edx
 4488 2695 80FA01   		cmpb	$1, %dl
 4489 2698 19D2     		sbbl	%edx, %edx
 4490 269a 83C231   		addl	$49, %edx
 4491 269d 885312   		movb	%dl, 18(%rbx)
 4492 26a0 89C2     		movl	%eax, %edx
 4493 26a2 83E208   		andl	$8, %edx
 4494 26a5 80FA01   		cmpb	$1, %dl
 4495 26a8 19D2     		sbbl	%edx, %edx
 4496 26aa 83C231   		addl	$49, %edx
 4497 26ad 885313   		movb	%dl, 19(%rbx)
 4498 26b0 89C2     		movl	%eax, %edx
 4499 26b2 83E210   		andl	$16, %edx
 4500 26b5 80FA01   		cmpb	$1, %dl
 4501 26b8 19D2     		sbbl	%edx, %edx
 4502 26ba 83C231   		addl	$49, %edx
 4503 26bd 885314   		movb	%dl, 20(%rbx)
 4504 26c0 89C2     		movl	%eax, %edx
 4505 26c2 83E220   		andl	$32, %edx
 4506 26c5 80FA01   		cmpb	$1, %dl
 4507 26c8 19D2     		sbbl	%edx, %edx
 4508 26ca 83C231   		addl	$49, %edx
 4509 26cd 885315   		movb	%dl, 21(%rbx)
 4510 26d0 89C2     		movl	%eax, %edx
 4511 26d2 83E240   		andl	$64, %edx
 4512 26d5 80FA01   		cmpb	$1, %dl
 4513 26d8 19D2     		sbbl	%edx, %edx
 4514 26da 83E080   		andl	$-128, %eax
 4515 26dd 83C231   		addl	$49, %edx
 4516 26e0 3C01     		cmpb	$1, %al
 4517 26e2 19C0     		sbbl	%eax, %eax
 4518 26e4 885316   		movb	%dl, 22(%rbx)
 4519 26e7 83C031   		addl	$49, %eax
 4520 26ea 884317   		movb	%al, 23(%rbx)
 4521 26ed 0FB64424 		movzbl	3(%rsp), %eax
 4521      03
 4522 26f2 89C2     		movl	%eax, %edx
 4523 26f4 83E201   		andl	$1, %edx
 4524 26f7 83C230   		addl	$48, %edx
 4525 26fa 885318   		movb	%dl, 24(%rbx)
 4526 26fd 89C2     		movl	%eax, %edx
 4527 26ff 83E202   		andl	$2, %edx
 4528 2702 80FA01   		cmpb	$1, %dl
 4529 2705 19D2     		sbbl	%edx, %edx
 4530 2707 83C231   		addl	$49, %edx
 4531 270a 885319   		movb	%dl, 25(%rbx)
 4532 270d 89C2     		movl	%eax, %edx
 4533 270f 83E204   		andl	$4, %edx
 4534 2712 80FA01   		cmpb	$1, %dl
 4535 2715 19D2     		sbbl	%edx, %edx
 4536 2717 83C231   		addl	$49, %edx
 4537 271a 88531A   		movb	%dl, 26(%rbx)
 4538 271d 89C2     		movl	%eax, %edx
 4539 271f 83E208   		andl	$8, %edx
 4540 2722 80FA01   		cmpb	$1, %dl
 4541 2725 19D2     		sbbl	%edx, %edx
 4542 2727 83C231   		addl	$49, %edx
 4543 272a 88531B   		movb	%dl, 27(%rbx)
 4544 272d 89C2     		movl	%eax, %edx
 4545 272f 83E210   		andl	$16, %edx
 4546 2732 80FA01   		cmpb	$1, %dl
 4547 2735 19D2     		sbbl	%edx, %edx
 4548 2737 83C231   		addl	$49, %edx
 4549 273a 88531C   		movb	%dl, 28(%rbx)
 4550 273d 89C2     		movl	%eax, %edx
 4551 273f 488B3500 		movq	key(%rip), %rsi
 4551      000000
 4552 2746 83E220   		andl	$32, %edx
 4553 2749 80FA01   		cmpb	$1, %dl
 4554 274c 19D2     		sbbl	%edx, %edx
 4555 274e 83C231   		addl	$49, %edx
 4556 2751 88531D   		movb	%dl, 29(%rbx)
 4557 2754 89C2     		movl	%eax, %edx
 4558 2756 83E240   		andl	$64, %edx
 4559 2759 80FA01   		cmpb	$1, %dl
 4560 275c 19D2     		sbbl	%edx, %edx
 4561 275e 83E080   		andl	$-128, %eax
 4562 2761 83C231   		addl	$49, %edx
 4563 2764 3C01     		cmpb	$1, %al
 4564 2766 19C0     		sbbl	%eax, %eax
 4565 2768 88531E   		movb	%dl, 30(%rbx)
 4566 276b 83C031   		addl	$49, %eax
 4567 276e 88431F   		movb	%al, 31(%rbx)
 4568 2771 E8000000 		call	decrypt
 4568      00
 4569 2776 4889C3   		movq	%rax, %rbx
 4570              	.L873:
 4571 2779 31C0     		xorl	%eax, %eax
 4572 277b 4889DA   		movq	%rbx, %rdx
 4573 277e BE000000 		movl	$.LC55, %esi
 4573      00
 4574 2783 BF010000 		movl	$1, %edi
 4574      00
 4575 2788 E8000000 		call	__printf_chk
 4575      00
 4576 278d 803B66   		cmpb	$102, (%rbx)
 4577 2790 7424     		je	.L938
 4578 2792 488B0500 		movq	ack1(%rip), %rax
 4578      000000
 4579 2799 31D2     		xorl	%edx, %edx
 4580 279b EB0D     		jmp	.L940
 4581 279d 0F1F00   		.p2align 4,,10
 4582              		.p2align 3
 4583              	.L939:
 4584 27a0 4883C201 		addq	$1, %rdx
 4585 27a4 4883FA20 		cmpq	$32, %rdx
 4586 27a8 740C     		je	.L938
 4587              	.L940:
 4588 27aa 0FB60C10 		movzbl	(%rax,%rdx), %ecx
 4589 27ae 380C13   		cmpb	%cl, (%rbx,%rdx)
 4590 27b1 74ED     		je	.L939
 4591 27b3 C60366   		movb	$102, (%rbx)
 4592              	.L938:
 4593 27b6 488B7424 		movq	8(%rsp), %rsi
 4593      08
 4594 27bb 64483334 		xorq	%fs:40, %rsi
 4594      25280000 
 4594      00
 4595 27c4 4889D8   		movq	%rbx, %rax
 4596 27c7 7514     		jne	.L945
 4597 27c9 4883C418 		addq	$24, %rsp
 4598              		.cfi_remember_state
 4599              		.cfi_def_cfa_offset 40
 4600 27cd 5B       		popq	%rbx
 4601              		.cfi_def_cfa_offset 32
 4602 27ce 5D       		popq	%rbp
 4603              		.cfi_def_cfa_offset 24
 4604 27cf 415C     		popq	%r12
 4605              		.cfi_def_cfa_offset 16
 4606 27d1 415D     		popq	%r13
 4607              		.cfi_def_cfa_offset 8
 4608 27d3 C3       		ret
 4609              		.p2align 4,,10
 4610 27d4 0F1F4000 		.p2align 3
 4611              	.L944:
 4612              		.cfi_restore_state
 4613 27d8 C60366   		movb	$102, (%rbx)
 4614 27db EB9C     		jmp	.L873
 4615              	.L945:
 4616 27dd E8000000 		call	__stack_chk_fail
 4616      00
 4617              		.cfi_endproc
 4618              	.LFE80:
 4620              		.section	.text.unlikely
 4621              	.LCOLDE56:
 4622              		.text
 4623              	.LHOTE56:
 4624              		.section	.text.unlikely
 4625              	.LCOLDB57:
 4626              		.text
 4627              	.LHOTB57:
 4628 27e2 0F1F4000 		.p2align 4,,15
 4628      662E0F1F 
 4628      84000000 
 4628      0000
 4629              		.globl	send_ack
 4631              	send_ack:
 4632              	.LFB81:
 4633              		.cfi_startproc
 4634 27f0 4155     		pushq	%r13
 4635              		.cfi_def_cfa_offset 16
 4636              		.cfi_offset 13, -16
 4637 27f2 4154     		pushq	%r12
 4638              		.cfi_def_cfa_offset 24
 4639              		.cfi_offset 12, -24
 4640 27f4 4189CD   		movl	%ecx, %r13d
 4641 27f7 55       		pushq	%rbp
 4642              		.cfi_def_cfa_offset 32
 4643              		.cfi_offset 6, -32
 4644 27f8 53       		pushq	%rbx
 4645              		.cfi_def_cfa_offset 40
 4646              		.cfi_offset 3, -40
 4647 27f9 89FB     		movl	%edi, %ebx
 4648 27fb BF210000 		movl	$33, %edi
 4648      00
 4649 2800 4889F5   		movq	%rsi, %rbp
 4650 2803 4989D4   		movq	%rdx, %r12
 4651 2806 4883EC08 		subq	$8, %rsp
 4652              		.cfi_def_cfa_offset 48
 4653 280a E8000000 		call	malloc
 4653      00
 4654 280f 488B3D00 		movq	ack2(%rip), %rdi
 4654      000000
 4655 2816 4589E8   		movl	%r13d, %r8d
 4656 2819 4C89E1   		movq	%r12, %rcx
 4657 281c 4889C6   		movq	%rax, %rsi
 4658 281f 0FB65707 		movzbl	7(%rdi), %edx
 4659 2823 8810     		movb	%dl, (%rax)
 4660 2825 0FB65706 		movzbl	6(%rdi), %edx
 4661 2829 885001   		movb	%dl, 1(%rax)
 4662 282c 0FB65705 		movzbl	5(%rdi), %edx
 4663 2830 885002   		movb	%dl, 2(%rax)
 4664 2833 0FB65704 		movzbl	4(%rdi), %edx
 4665 2837 885003   		movb	%dl, 3(%rax)
 4666 283a 0FB65703 		movzbl	3(%rdi), %edx
 4667 283e 885004   		movb	%dl, 4(%rax)
 4668 2841 0FB65702 		movzbl	2(%rdi), %edx
 4669 2845 885005   		movb	%dl, 5(%rax)
 4670 2848 0FB65701 		movzbl	1(%rdi), %edx
 4671 284c 885006   		movb	%dl, 6(%rax)
 4672 284f 0FB617   		movzbl	(%rdi), %edx
 4673 2852 885007   		movb	%dl, 7(%rax)
 4674 2855 0FB6570F 		movzbl	15(%rdi), %edx
 4675 2859 885008   		movb	%dl, 8(%rax)
 4676 285c 0FB6570E 		movzbl	14(%rdi), %edx
 4677 2860 885009   		movb	%dl, 9(%rax)
 4678 2863 0FB6570D 		movzbl	13(%rdi), %edx
 4679 2867 88500A   		movb	%dl, 10(%rax)
 4680 286a 0FB6570C 		movzbl	12(%rdi), %edx
 4681 286e 88500B   		movb	%dl, 11(%rax)
 4682 2871 0FB6570B 		movzbl	11(%rdi), %edx
 4683 2875 88500C   		movb	%dl, 12(%rax)
 4684 2878 0FB6570A 		movzbl	10(%rdi), %edx
 4685 287c 88500D   		movb	%dl, 13(%rax)
 4686 287f 0FB65709 		movzbl	9(%rdi), %edx
 4687 2883 88500E   		movb	%dl, 14(%rax)
 4688 2886 0FB65708 		movzbl	8(%rdi), %edx
 4689 288a 88500F   		movb	%dl, 15(%rax)
 4690 288d 0FB65717 		movzbl	23(%rdi), %edx
 4691 2891 885010   		movb	%dl, 16(%rax)
 4692 2894 0FB65716 		movzbl	22(%rdi), %edx
 4693 2898 885011   		movb	%dl, 17(%rax)
 4694 289b 0FB65715 		movzbl	21(%rdi), %edx
 4695 289f 885012   		movb	%dl, 18(%rax)
 4696 28a2 0FB65714 		movzbl	20(%rdi), %edx
 4697 28a6 885013   		movb	%dl, 19(%rax)
 4698 28a9 0FB65713 		movzbl	19(%rdi), %edx
 4699 28ad 885014   		movb	%dl, 20(%rax)
 4700 28b0 0FB65712 		movzbl	18(%rdi), %edx
 4701 28b4 885015   		movb	%dl, 21(%rax)
 4702 28b7 0FB65711 		movzbl	17(%rdi), %edx
 4703 28bb 885016   		movb	%dl, 22(%rax)
 4704 28be 0FB65710 		movzbl	16(%rdi), %edx
 4705 28c2 885017   		movb	%dl, 23(%rax)
 4706 28c5 0FB6571F 		movzbl	31(%rdi), %edx
 4707 28c9 885018   		movb	%dl, 24(%rax)
 4708 28cc 0FB6571E 		movzbl	30(%rdi), %edx
 4709 28d0 885019   		movb	%dl, 25(%rax)
 4710 28d3 0FB6571D 		movzbl	29(%rdi), %edx
 4711 28d7 88501A   		movb	%dl, 26(%rax)
 4712 28da 0FB6571C 		movzbl	28(%rdi), %edx
 4713 28de 88501B   		movb	%dl, 27(%rax)
 4714 28e1 0FB6571B 		movzbl	27(%rdi), %edx
 4715 28e5 88501C   		movb	%dl, 28(%rax)
 4716 28e8 0FB6571A 		movzbl	26(%rdi), %edx
 4717 28ec 88501D   		movb	%dl, 29(%rax)
 4718 28ef 0FB65719 		movzbl	25(%rdi), %edx
 4719 28f3 88501E   		movb	%dl, 30(%rax)
 4720 28f6 0FB65718 		movzbl	24(%rdi), %edx
 4721 28fa 89DF     		movl	%ebx, %edi
 4722 28fc 88501F   		movb	%dl, 31(%rax)
 4723 28ff C6402000 		movb	$0, 32(%rax)
 4724 2903 4883C408 		addq	$8, %rsp
 4725              		.cfi_def_cfa_offset 40
 4726 2907 5B       		popq	%rbx
 4727              		.cfi_def_cfa_offset 32
 4728 2908 4889EA   		movq	%rbp, %rdx
 4729 290b 5D       		popq	%rbp
 4730              		.cfi_def_cfa_offset 24
 4731 290c 415C     		popq	%r12
 4732              		.cfi_def_cfa_offset 16
 4733 290e 415D     		popq	%r13
 4734              		.cfi_def_cfa_offset 8
 4735 2910 E9EBF3FF 		jmp	write_4byte_to_board
 4735      FF
 4736              		.cfi_endproc
 4737              	.LFE81:
 4739              		.section	.text.unlikely
 4740              	.LCOLDE57:
 4741              		.text
 4742              	.LHOTE57:
 4743              		.section	.text.unlikely
 4744              	.LCOLDB58:
 4745              		.text
 4746              	.LHOTB58:
 4747 2915 90662E0F 		.p2align 4,,15
 4747      1F840000 
 4747      000000
 4748              		.globl	wtt
 4750              	wtt:
 4751              	.LFB82:
 4752              		.cfi_startproc
 4753 2920 BFA08601 		movl	$100000, %edi
 4753      00
 4754 2925 31C0     		xorl	%eax, %eax
 4755 2927 E9000000 		jmp	usleep
 4755      00
 4756              		.cfi_endproc
 4757              	.LFE82:
 4759              		.section	.text.unlikely
 4760              	.LCOLDE58:
 4761              		.text
 4762              	.LHOTE58:
 4763              		.section	.rodata.str1.8
 4764 00cf 00       		.align 8
 4765              	.LC59:
 4766 00d0 20202020 		.string	"            vendor ID and product ID (e.g 04B4:8613)"
 4766      20202020 
 4766      20202020 
 4766      76656E64 
 4766      6F722049 
 4767              		.section	.rodata.str1.1
 4768              	.LC60:
 4769 011b 3C564944 		.string	"<VID:PID>"
 4769      3A504944 
 4769      3E00
 4770              	.LC61:
 4771 0125 69767000 		.string	"ivp"
 4772              	.LC62:
 4773 0129 6900     		.string	"i"
 4774              		.section	.rodata.str1.8
 4775 0105 000000   		.align 8
 4776              	.LC63:
 4777 0108 20202020 		.string	"       VID, PID and opt. dev ID (e.g 1D50:602B:0001)"
 4777      20202056 
 4777      49442C20 
 4777      50494420 
 4777      616E6420 
 4778              		.section	.rodata.str1.1
 4779              	.LC64:
 4780 012b 3C564944 		.string	"<VID:PID[:DID]>"
 4780      3A504944 
 4780      5B3A4449 
 4780      445D3E00 
 4781              	.LC65:
 4782 013b 767000   		.string	"vp"
 4783              	.LC66:
 4784 013e 7600     		.string	"v"
 4785              		.section	.rodata.str1.8
 4786 013d 000000   		.align 8
 4787              	.LC67:
 4788 0140 20202020 		.string	"       For running the program and giving the input file address"
 4788      20202046 
 4788      6F722072 
 4788      756E6E69 
 4788      6E672074 
 4789              		.section	.rodata.str1.1
 4790              	.LC68:
 4791 0140 3C46696C 		.string	"<File>"
 4791      653E00
 4792              	.LC69:
 4793 0147 727000   		.string	"rp"
 4794              		.section	.rodata.str1.8
 4795 0181 00000000 		.align 8
 4795      000000
 4796              	.LC70:
 4797 0188 20202020 		.string	"        firmware to RAM-load (or use std fw)"
 4797      20202020 
 4797      6669726D 
 4797      77617265 
 4797      20746F20 
 4798              		.section	.rodata.str1.1
 4799              	.LC71:
 4800 014a 3C666972 		.string	"<firmware.hex>"
 4800      6D776172 
 4800      652E6865 
 4800      783E00
 4801              	.LC72:
 4802 0159 667700   		.string	"fw"
 4803              	.LC73:
 4804 015c 6600     		.string	"f"
 4805              		.section	.rodata.str1.8
 4806 01b5 000000   		.align 8
 4807              	.LC74:
 4808 01b8 20726561 		.string	" read/write digital ports (e.g B13+,C1-,B2?)"
 4808      642F7772 
 4808      69746520 
 4808      64696769 
 4808      74616C20 
 4809              		.section	.rodata.str1.1
 4810              	.LC75:
 4811 015e 3C626974 		.string	"<bitCfg[,bitCfg]*>"
 4811      4366675B 
 4811      2C626974 
 4811      4366675D 
 4811      2A3E00
 4812              	.LC76:
 4813 0171 706F7274 		.string	"ports"
 4813      7300
 4814              	.LC77:
 4815 0177 6400     		.string	"d"
 4816              	.LC78:
 4817 0179 20202020 		.string	"         query the JTAG chain"
 4817      20202020 
 4817      20717565 
 4817      72792074 
 4817      6865204A 
 4818              	.LC79:
 4819 0197 3C6A7461 		.string	"<jtagBits>"
 4819      67426974 
 4819      733E00
 4820              	.LC80:
 4821 01a2 71756572 		.string	"query"
 4821      7900
 4822              	.LC81:
 4823 01a8 7100     		.string	"q"
 4824              	.LC82:
 4825 01aa 20202020 		.string	"         program a device"
 4825      20202020 
 4825      2070726F 
 4825      6772616D 
 4825      20612064 
 4826              	.LC83:
 4827 01c4 3C636F6E 		.string	"<config>"
 4827      6669673E 
 4827      00
 4828              	.LC84:
 4829 01cd 70726F67 		.string	"program"
 4829      72616D00 
 4830              	.LC85:
 4831 01d5 7000     		.string	"p"
 4832              		.section	.rodata.str1.8
 4833 01e5 000000   		.align 8
 4834              	.LC86:
 4835 01e8 20202020 		.string	"        which comm conduit to choose (default 0x01)"
 4835      20202020 
 4835      77686963 
 4835      6820636F 
 4835      6D6D2063 
 4836              		.section	.rodata.str1.1
 4837              	.LC87:
 4838 01d7 3C636F6E 		.string	"<conduit>"
 4838      64756974 
 4838      3E00
 4839              	.LC88:
 4840 01e1 636F6E64 		.string	"conduit"
 4840      75697400 
 4841              	.LC89:
 4842 01e9 6300     		.string	"c"
 4843              		.section	.rodata.str1.8
 4844 021c 00000000 		.align 8
 4845              	.LC90:
 4846 0220 20202020 		.string	"    a series of CommFPGA actions"
 4846      61207365 
 4846      72696573 
 4846      206F6620 
 4846      436F6D6D 
 4847              		.section	.rodata.str1.1
 4848              	.LC91:
 4849 01eb 3C616374 		.string	"<actionString>"
 4849      696F6E53 
 4849      7472696E 
 4849      673E00
 4850              	.LC92:
 4851 01fa 61637469 		.string	"action"
 4851      6F6E00
 4852              	.LC93:
 4853 0201 6100     		.string	"a"
 4854              		.section	.rodata.str1.8
 4855 0241 00000000 		.align 8
 4855      000000
 4856              	.LC94:
 4857 0248 20202020 		.string	"                    start up an interactive CommFPGA session"
 4857      20202020 
 4857      20202020 
 4857      20202020 
 4857      20202020 
 4858              		.section	.rodata.str1.1
 4859              	.LC95:
 4860 0203 7368656C 		.string	"shell"
 4860      6C00
 4861              	.LC96:
 4862 0209 7300     		.string	"s"
 4863              		.section	.rodata.str1.8
 4864 0285 000000   		.align 8
 4865              	.LC97:
 4866 0288 20202020 		.string	"                enable benchmarking & checksumming"
 4866      20202020 
 4866      20202020 
 4866      20202020 
 4866      656E6162 
 4867              		.section	.rodata.str1.1
 4868              	.LC98:
 4869 020b 62656E63 		.string	"benchmark"
 4869      686D6172 
 4869      6B00
 4870              	.LC99:
 4871 0215 6200     		.string	"b"
 4872              		.section	.rodata.str1.8
 4873 02bb 00000000 		.align 8
 4873      00
 4874              	.LC100:
 4875 02c0 20202020 		.string	"                    reset the bulk endpoints"
 4875      20202020 
 4875      20202020 
 4875      20202020 
 4875      20202020 
 4876              		.section	.rodata.str1.1
 4877              	.LC101:
 4878 0217 72657365 		.string	"reset"
 4878      7400
 4879              		.section	.rodata.str1.8
 4880 02ed 000000   		.align 8
 4881              	.LC102:
 4882 02f0 20202077 		.string	"   write data from channel ch to file"
 4882      72697465 
 4882      20646174 
 4882      61206672 
 4882      6F6D2063 
 4883              		.section	.rodata.str1.1
 4884              	.LC103:
 4885 021d 3C63683A 		.string	"<ch:file.bin>"
 4885      66696C65 
 4885      2E62696E 
 4885      3E00
 4886              	.LC104:
 4887 022b 64756D70 		.string	"dumploop"
 4887      6C6F6F70 
 4887      00
 4888              	.LC105:
 4889 0234 6C00     		.string	"l"
 4890              		.section	.rodata.str1.8
 4891 0316 0000     		.align 8
 4892              	.LC106:
 4893 0318 20202020 		.string	"                     print this help and exit"
 4893      20202020 
 4893      20202020 
 4893      20202020 
 4893      20202020 
 4894              		.section	.rodata.str1.1
 4895              	.LC107:
 4896 0236 68656C70 		.string	"help"
 4896      00
 4897              	.LC108:
 4898 023b 6800     		.string	"h"
 4899              		.section	.rodata.str1.8
 4900 0346 0000     		.align 8
 4901              	.LC109:
 4902 0348 20202077 		.string	"   write firmware to FX2's EEPROM (!!)"
 4902      72697465 
 4902      20666972 
 4902      6D776172 
 4902      6520746F 
 4903              		.section	.rodata.str1.1
 4904              	.LC110:
 4905 023d 3C737464 		.string	"<std|fw.hex|fw.iic>"
 4905      7C66772E 
 4905      6865787C 
 4905      66772E69 
 4905      69633E00 
 4906              	.LC111:
 4907 0251 65657072 		.string	"eeprom"
 4907      6F6D00
 4908              		.section	.rodata.str1.8
 4909 036f 00       		.align 8
 4910              	.LC112:
 4911 0370 20202020 		.string	"     backup FX2's EEPROM (e.g 128:fw.iic)\n"
 4911      20626163 
 4911      6B757020 
 4911      46583227 
 4911      73204545 
 4912              		.section	.rodata.str1.1
 4913              	.LC113:
 4914 0258 3C6B6269 		.string	"<kbitSize:fw.iic>"
 4914      7453697A 
 4914      653A6677 
 4914      2E696963 
 4914      3E00
 4915              	.LC114:
 4916 026a 6261636B 		.string	"backup"
 4916      757000
 4917              	.LC115:
 4918 0271 666C636C 		.string	"flcli"
 4918      6900
 4919              	.LC116:
 4920 0277 25733A20 		.string	"%s: insufficient memory\n"
 4920      696E7375 
 4920      66666963 
 4920      69656E74 
 4920      206D656D 
 4921              		.section	.rodata.str1.8
 4922 039b 00000000 		.align 8
 4922      00
 4923              	.LC117:
 4924 03a0 46504741 		.string	"FPGALink Command-Line Interface Copyright (C) 2012-2014 Chris McClelland\n\nUsage: %s"
 4924      4C696E6B 
 4924      20436F6D 
 4924      6D616E64 
 4924      2D4C696E 
 4925              		.section	.rodata.str1.1
 4926              	.LC118:
 4927 0290 0A00     		.string	"\n"
 4928              		.section	.rodata.str1.8
 4929 03f4 00000000 		.align 8
 4930              	.LC119:
 4931 03f8 0A496E74 		.string	"\nInteract with an FPGALink device.\n\n"
 4931      65726163 
 4931      74207769 
 4931      74682061 
 4931      6E204650 
 4932              		.section	.rodata.str1.1
 4933              	.LC120:
 4934 0292 2020252D 		.string	"  %-10s %s\n"
 4934      31307320 
 4934      25730A00 
 4935              		.section	.rodata.str1.8
 4936 041d 000000   		.align 8
 4937              	.LC121:
 4938 0420 54727920 		.string	"Try '%s --help' for more information.\n"
 4938      27257320 
 4938      2D2D6865 
 4938      6C702720 
 4938      666F7220 
 4939 0447 00       		.align 8
 4940              	.LC122:
 4941 0448 41747465 		.string	"Attempting to open connection to FPGALink device %s...\n"
 4941      6D707469 
 4941      6E672074 
 4941      6F206F70 
 4941      656E2063 
 4942              		.section	.rodata.str1.1
 4943              	.LC123:
 4944 029e 4C6F6164 		.string	"Loading firmware into %s...\n"
 4944      696E6720 
 4944      6669726D 
 4944      77617265 
 4944      20696E74 
 4945              	.LC124:
 4946 02bb 41776169 		.string	"Awaiting renumeration"
 4946      74696E67 
 4946      2072656E 
 4946      756D6572 
 4946      6174696F 
 4947              	.LC125:
 4948 02d1 2E00     		.string	"."
 4949              		.section	.rodata.str1.8
 4950              		.align 8
 4951              	.LC126:
 4952 0480 46504741 		.string	"FPGALink device did not renumerate properly as %s\n"
 4952      4C696E6B 
 4952      20646576 
 4952      69636520 
 4952      64696420 
 4953 04b3 00000000 		.align 8
 4953      00
 4954              	.LC127:
 4955 04b8 41747465 		.string	"Attempting to open connection to FPGLink device %s again...\n"
 4955      6D707469 
 4955      6E672074 
 4955      6F206F70 
 4955      656E2063 
 4956 04f5 000000   		.align 8
 4957              	.LC128:
 4958 04f8 436F756C 		.string	"Could not open FPGALink device at %s and no initial VID:PID was supplied\n"
 4958      64206E6F 
 4958      74206F70 
 4958      656E2046 
 4958      5047414C 
 4959 0542 00000000 		.align 8
 4959      0000
 4960              	.LC129:
 4961 0548 436F6E6E 		.string	"Connected to FPGALink device %s (firmwareID: 0x%04X, firmwareVersion: 0x%08X)\n"
 4961      65637465 
 4961      6420746F 
 4961      20465047 
 4961      414C696E 
 4962 0597 00       		.align 8
 4963              	.LC130:
 4964 0598 57726974 		.string	"Writing the standard FPGALink firmware to the FX2's EEPROM...\n"
 4964      696E6720 
 4964      74686520 
 4964      7374616E 
 4964      64617264 
 4965 05d7 00       		.align 8
 4966              	.LC131:
 4967 05d8 57726974 		.string	"Writing custom FPGALink firmware from %s to the FX2's EEPROM...\n"
 4967      696E6720 
 4967      63757374 
 4967      6F6D2046 
 4967      5047414C 
 4968 0619 00000000 		.align 8
 4968      000000
 4969              	.LC132:
 4970 0620 25733A20 		.string	"%s: invalid argument to option --backup=<kbitSize:fw.iic>\n"
 4970      696E7661 
 4970      6C696420 
 4970      61726775 
 4970      6D656E74 
 4971 065b 00000000 		.align 8
 4971      00
 4972              	.LC133:
 4973 0660 53617669 		.string	"Saving a backup of %d kbit from the FX2's EEPROM to %s...\n"
 4973      6E672061 
 4973      20626163 
 4973      6B757020 
 4973      6F662025 
 4974              		.section	.rodata.str1.1
 4975              	.LC134:
 4976 02d3 436F6E66 		.string	"Configuring ports...\n"
 4976      69677572 
 4976      696E6720 
 4976      706F7274 
 4976      732E2E2E 
 4977              	.LC135:
 4978 02e9 25303858 		.string	"%08X"
 4978      00
 4979              		.section	.rodata.str1.8
 4980 069b 00000000 		.align 8
 4980      00
 4981              	.LC136:
 4982 06a0 52656164 		.string	"Readback:   28   24   20   16    12    8    4    0\n          %s"
 4982      6261636B 
 4982      3A202020 
 4982      32382020 
 4982      20323420 
 4983              		.section	.rodata.str1.1
 4984              	.LC137:
 4985 02ee 20257300 		.string	" %s"
 4986              	.LC138:
 4987 02f2 20202573 		.string	"  %s"
 4987      00
 4988              	.LC139:
 4989 02f7 2025730A 		.string	" %s\n"
 4989      00
 4990              		.section	.rodata.str1.8
 4991              		.align 8
 4992              	.LC140:
 4993 06e0 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain, yielding:\n"
 4993      46504741 
 4993      4C696E6B 
 4993      20646576 
 4993      69636520 
 4994              		.section	.rodata.str1.1
 4995              	.LC141:
 4996 02fc 20203078 		.string	"  0x%08X\n"
 4996      25303858 
 4996      0A00
 4997              		.section	.rodata.str1.8
 4998 071d 000000   		.align 8
 4999              	.LC142:
 5000 0720 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain but did not find any attached devices\n"
 5000      46504741 
 5000      4C696E6B 
 5000      20646576 
 5000      69636520 
 5001              		.align 8
 5002              	.LC143:
 5003 0778 4A544147 		.string	"JTAG chain scan requested but FPGALink device at %s does not support NeroProg\n"
 5003      20636861 
 5003      696E2073 
 5003      63616E20 
 5003      72657175 
 5004              		.section	.rodata.str1.1
 5005              	.LC144:
 5006 0306 50726F67 		.string	"Programming device...\n"
 5006      72616D6D 
 5006      696E6720 
 5006      64657669 
 5006      63652E2E 
 5007              		.section	.rodata.str1.8
 5008 07c7 00       		.align 8
 5009              	.LC145:
 5010 07c8 50726F67 		.string	"Program operation requested but device at %s does not support NeroProg\n"
 5010      72616D20 
 5010      6F706572 
 5010      6174696F 
 5010      6E207265 
 5011              		.align 8
 5012              	.LC146:
 5013 0810 45786563 		.string	"Executing CommFPGA actions on FPGALink device %s...\n"
 5013      7574696E 
 5013      6720436F 
 5013      6D6D4650 
 5013      47412061 
 5014 0845 000000   		.align 8
 5015              	.LC147:
 5016 0848 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --program?\n"
 5016      46504741 
 5016      4C696E6B 
 5016      20646576 
 5016      69636520 
 5017 0894 00000000 		.align 8
 5018              	.LC148:
 5019 0898 41637469 		.string	"Action requested but device at %s does not support CommFPGA\n"
 5019      6F6E2072 
 5019      65717565 
 5019      73746564 
 5019      20627574 
 5020 08d5 000000   		.align 8
 5021              	.LC149:
 5022 08d8 25733A20 		.string	"%s: invalid argument to option -l|--dumploop=<ch:file.bin>\n"
 5022      696E7661 
 5022      6C696420 
 5022      61726775 
 5022      6D656E74 
 5023 0914 00000000 		.align 8
 5024              	.LC150:
 5025 0918 436F7079 		.string	"Copying from channel %lu to %s"
 5025      696E6720 
 5025      66726F6D 
 5025      20636861 
 5025      6E6E656C 
 5026              		.section	.rodata.str1.1
 5027              	.LC151:
 5028 031d 0A436175 		.string	"\nCaught SIGINT, quitting...\n"
 5028      67687420 
 5028      53494749 
 5028      4E542C20 
 5028      71756974 
 5029              		.section	.rodata.str1.8
 5030 0937 00       		.align 8
 5031              	.LC152:
 5032 0938 1B5B3336 		.string	"\033[36m=================================================================================
 5032      6D3D3D3D 
 5032      3D3D3D3D 
 5032      3D3D3D3D 
 5032      3D3D3D3D 
 5033 09ad 000000   		.align 8
 5034              	.LC153:
 5035 09b0 1B5B3335 		.string	"\033[35m=============================== \033[31mDLD PROJECT BY THE XILINX MEN\033[35m ===
 5035      6D3D3D3D 
 5035      3D3D3D3D 
 5035      3D3D3D3D 
 5035      3D3D3D3D 
 5036 0a2f 00       		.align 8
 5037              	.LC154:
 5038 0a30 0A526561 		.string	"\nReading Track Data From the CSV File...\n"
 5038      64696E67 
 5038      20547261 
 5038      636B2044 
 5038      61746120 
 5039              		.section	.rodata.str1.1
 5040              	.LC155:
 5041 033a 1B5B3332 		.string	"\033[32mTrack Data Read\n\033[0m"
 5041      6D547261 
 5041      636B2044 
 5041      61746120 
 5041      52656164 
 5042              		.section	.rodata.str1.8
 5043 0a5a 00000000 		.align 8
 5043      0000
 5044              	.LC156:
 5045 0a60 1B5B3334 		.string	"\033[34m\nStarting Polling Process\n"
 5045      6D0A5374 
 5045      61727469 
 5045      6E672050 
 5045      6F6C6C69 
 5046              		.align 8
 5047              	.LC157:
 5048 0a80 0A3E3E20 		.string	"\n>> Attempting to read Co-ordinates from Channel \033[35m%d\n\033[0m"
 5048      41747465 
 5048      6D707469 
 5048      6E672074 
 5048      6F207265 
 5049 0abe 0000     		.align 8
 5050              	.LC158:
 5051 0ac0 1B5B3331 		.string	"\033[31m>>>> Failed to Read co-ordinates from channel\n\033[0m"
 5051      6D3E3E3E 
 5051      3E204661 
 5051      696C6564 
 5051      20746F20 
 5052              		.align 8
 5053              	.LC159:
 5054 0af8 1B5B3332 		.string	"\033[32m>>>> Successfully Read co-ordinates from channel  %d\n\033[0m"
 5054      6D3E3E3E 
 5054      3E205375 
 5054      63636573 
 5054      7366756C 
 5055 0b37 00       		.align 8
 5056              	.LC160:
 5057 0b38 3E3E3E3E 		.string	">>>>>>>> Read data is \033[34m %s\n\033[0m"
 5057      3E3E3E3E 
 5057      20526561 
 5057      64206461 
 5057      74612069 
 5058 0b5c 00000000 		.align 8
 5059              	.LC161:
 5060 0b60 3E3E2041 		.string	">> Attempting to Write coordinates at channel \033[35m%d\n\033[0m"
 5060      7474656D 
 5060      7074696E 
 5060      6720746F 
 5060      20577269 
 5061 0b9b 00000000 		.align 8
 5061      00
 5062              	.LC162:
 5063 0ba0 1B5B3331 		.string	"\033[31mWrite failed, Moving on to the next channel\n\033[0m"
 5063      6D577269 
 5063      74652066 
 5063      61696C65 
 5063      642C204D 
 5064 0bd6 0000     		.align 8
 5065              	.LC163:
 5066 0bd8 1B5B3332 		.string	"\033[32m>>>> Successfully Written Co-ordinates to the channel\n\033[0m"
 5066      6D3E3E3E 
 5066      3E205375 
 5066      63636573 
 5066      7366756C 
 5067              		.align 8
 5068              	.LC164:
 5069 0c18 3E3E2041 		.string	">> Attempting to receive ACK1\n"
 5069      7474656D 
 5069      7074696E 
 5069      6720746F 
 5069      20726563 
 5070 0c37 00       		.align 8
 5071              	.LC165:
 5072 0c38 1B5B3331 		.string	"\033[31m>>>> First ack was incorrect, re-attempt after 5 seconds\n\033[0m"
 5072      6D3E3E3E 
 5072      3E204669 
 5072      72737420 
 5072      61636B20 
 5073 0c7b 00000000 		.align 8
 5073      00
 5074              	.LC166:
 5075 0c80 3E3E2041 		.string	">> Attempting to receive ACK1 for the second time\n"
 5075      7474656D 
 5075      7074696E 
 5075      6720746F 
 5075      20726563 
 5076 0cb3 00000000 		.align 8
 5076      00
 5077              	.LC167:
 5078 0cb8 1B5B3331 		.string	"\033[31m>>>> Second ACK was also incorrect, Moving on to the next channel\n\033[0m"
 5078      6D3E3E3E 
 5078      3E205365 
 5078      636F6E64 
 5078      2041434B 
 5079 0d04 00000000 		.align 8
 5080              	.LC168:
 5081 0d08 1B5B3332 		.string	"\033[32m>>>> Successfully received ACK1 and co-ordinates\n\033[0m"
 5081      6D3E3E3E 
 5081      3E205375 
 5081      63636573 
 5081      7366756C 
 5082 0d43 00000000 		.align 8
 5082      00
 5083              	.LC169:
 5084 0d48 3E3E2043 		.string	">> Co-ordinates are \033[34m(%d,%d)\n\033[0m"
 5084      6F2D6F72 
 5084      64696E61 
 5084      74657320 
 5084      61726520 
 5085              		.section	.rodata.str1.1
 5086              	.LC170:
 5087 0354 3E3E2053 		.string	">> Sending ACK2 to the board\n"
 5087      656E6469 
 5087      6E672041 
 5087      434B3220 
 5087      746F2074 
 5088              	.LC171:
 5089 0372 3E3E2057 		.string	">> Writing 64 bits to board\n"
 5089      72697469 
 5089      6E672036 
 5089      34206269 
 5089      74732074 
 5090              		.section	.rodata.str1.8
 5091 0d6e 0000     		.align 8
 5092              	.LC172:
 5093 0d70 3E3E3E3E 		.string	">>>> Data to write to the board is \033[35m%s\n\033[0m"
 5093      20446174 
 5093      6120746F 
 5093      20777269 
 5093      74652074 
 5094              		.align 8
 5095              	.LC173:
 5096 0da0 1B5B3332 		.string	"\033[32m>>>> Written first four bytes to board\n\033[0m"
 5096      6D3E3E3E 
 5096      3E205772 
 5096      69747465 
 5096      6E206669 
 5097              		.section	.rodata.str1.1
 5098              	.LC174:
 5099 038f 3E3E3E3E 		.string	">>>> Waiting to receive ACK\n"
 5099      20576169 
 5099      74696E67 
 5099      20746F20 
 5099      72656365 
 5100              		.section	.rodata.str1.8
 5101 0dd1 00000000 		.align 8
 5101      000000
 5102              	.LC175:
 5103 0dd8 1B5B3331 		.string	"\033[31m>>>> Receiving Ack failed, going to host_label_2\n"
 5103      6D3E3E3E 
 5103      3E205265 
 5103      63656976 
 5103      696E6720 
 5104 0e0f 00       		.align 8
 5105              	.LC176:
 5106 0e10 1B5B3332 		.string	"\033[32m>>>> Written next four bytes to board\n\033[0m"
 5106      6D3E3E3E 
 5106      3E205772 
 5106      69747465 
 5106      6E206E65 
 5107              		.section	.rodata.str1.1
 5108              	.LC177:
 5109 03ac 1B5B3332 		.string	"\033[32m>>>> Sent ACK\n\033[0m"
 5109      6D3E3E3E 
 5109      3E205365 
 5109      6E742041 
 5109      434B0A1B 
 5110              		.section	.rodata.str1.8
 5111              		.align 8
 5112              	.LC178:
 5113 0e40 536C6565 		.string	"Sleeping until the display of the board is over\n"
 5113      70696E67 
 5113      20756E74 
 5113      696C2074 
 5113      68652064 
 5114 0e71 00000000 		.align 8
 5114      000000
 5115              	.LC179:
 5116 0e78 57616974 		.string	"Waiting to receive data from the board via FPGA and/or UART\n"
 5116      696E6720 
 5116      746F2072 
 5116      65636569 
 5116      76652064 
 5117 0eb5 000000   		.align 8
 5118              	.LC180:
 5119 0eb8 1B5B3332 		.string	"\033[32m>> Read track data from FPGA\n\033[0m"
 5119      6D3E3E20 
 5119      52656164 
 5119      20747261 
 5119      636B2064 
 5120 0edf 00       		.align 8
 5121              	.LC181:
 5122 0ee0 3E3E3E3E 		.string	">>>> Read data is \033[35m%s\n\033[0m"
 5122      20526561 
 5122      64206461 
 5122      74612069 
 5122      73201B5B 
 5123 0eff 00       		.align 8
 5124              	.LC182:
 5125 0f00 3E3E3E3E 		.string	">>>> Changed the entry to the table\n"
 5125      20436861 
 5125      6E676564 
 5125      20746865 
 5125      20656E74 
 5126 0f25 000000   		.align 8
 5127              	.LC183:
 5128 0f28 3E3E3E3E 		.string	">>>> Saved the table to the file\n"
 5128      20536176 
 5128      65642074 
 5128      68652074 
 5128      61626C65 
 5129 0f4a 00000000 		.align 8
 5129      0000
 5130              	.LC186:
 5131 0f50 0A456E74 		.string	"\nEntering CommFPGA command-line mode:\n"
 5131      6572696E 
 5131      6720436F 
 5131      6D6D4650 
 5131      47412063 
 5132              		.section	.rodata.str1.1
 5133              	.LC187:
 5134 03c4 3E2000   		.string	"> "
 5135              		.section	.rodata.str1.8
 5136 0f77 00       		.align 8
 5137              	.LC188:
 5138 0f78 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --xsvf?\n"
 5138      46504741 
 5138      4C696E6B 
 5138      20646576 
 5138      69636520 
 5139 0fc1 00000000 		.align 8
 5139      000000
 5140              	.LC189:
 5141 0fc8 5368656C 		.string	"Shell requested but device at %s does not support CommFPGA\n"
 5141      6C207265 
 5141      71756573 
 5141      74656420 
 5141      62757420 
 5142              		.section	.rodata.str1.1
 5143              	.LC190:
 5144 03c7 25730A00 		.string	"%s\n"
 5145              		.section	.rodata.str1.8
 5146 1004 00000000 		.align 8
 5147              	.LC191:
 5148 1008 3E3E204E 		.string	">> No data received from controller via FPGA\n"
 5148      6F206461 
 5148      74612072 
 5148      65636569 
 5148      76656420 
 5149              		.section	.text.unlikely
 5150              	.LCOLDB192:
 5151              		.section	.text.startup,"ax",@progbits
 5152              	.LHOTB192:
 5153              		.p2align 4,,15
 5154              		.globl	main
 5156              	main:
 5157              	.LFB83:
 5158              		.cfi_startproc
 5159 0000 4157     		pushq	%r15
 5160              		.cfi_def_cfa_offset 16
 5161              		.cfi_offset 15, -16
 5162 0002 4156     		pushq	%r14
 5163              		.cfi_def_cfa_offset 24
 5164              		.cfi_offset 14, -24
 5165 0004 4155     		pushq	%r13
 5166              		.cfi_def_cfa_offset 32
 5167              		.cfi_offset 13, -32
 5168 0006 4154     		pushq	%r12
 5169              		.cfi_def_cfa_offset 40
 5170              		.cfi_offset 12, -40
 5171 0008 55       		pushq	%rbp
 5172              		.cfi_def_cfa_offset 48
 5173              		.cfi_offset 6, -48
 5174 0009 53       		pushq	%rbx
 5175              		.cfi_def_cfa_offset 56
 5176              		.cfi_offset 3, -56
 5177 000a 4881ECB8 		subq	$13752, %rsp
 5177      350000
 5178              		.cfi_def_cfa_offset 13808
 5179 0011 897C245C 		movl	%edi, 92(%rsp)
 5180 0015 488B3D00 		movq	portname(%rip), %rdi
 5180      000000
 5181 001c 64488B04 		movq	%fs:40, %rax
 5181      25280000 
 5181      00
 5182 0025 48898424 		movq	%rax, 13736(%rsp)
 5182      A8350000 
 5183 002d 31C0     		xorl	%eax, %eax
 5184 002f 48897424 		movq	%rsi, 96(%rsp)
 5184      60
 5185 0034 BE021110 		movl	$1052930, %esi
 5185      00
 5186 0039 E8000000 		call	open
 5186      00
 5187 003e B9000000 		movl	$.LC59, %ecx
 5187      00
 5188 0043 BA000000 		movl	$.LC60, %edx
 5188      00
 5189 0048 BE000000 		movl	$.LC61, %esi
 5189      00
 5190 004d BF000000 		movl	$.LC62, %edi
 5190      00
 5191 0052 89050000 		movl	%eax, fd(%rip)
 5191      0000
 5192 0058 E8000000 		call	arg_str0
 5192      00
 5193 005d B9000000 		movl	$.LC63, %ecx
 5193      00
 5194 0062 BA000000 		movl	$.LC64, %edx
 5194      00
 5195 0067 BE000000 		movl	$.LC65, %esi
 5195      00
 5196 006c BF000000 		movl	$.LC66, %edi
 5196      00
 5197 0071 4989C4   		movq	%rax, %r12
 5198 0074 E8000000 		call	arg_str1
 5198      00
 5199 0079 B9000000 		movl	$.LC67, %ecx
 5199      00
 5200 007e BA000000 		movl	$.LC68, %edx
 5200      00
 5201 0083 BE000000 		movl	$.LC69, %esi
 5201      00
 5202 0088 BF000000 		movl	$.LC36, %edi
 5202      00
 5203 008d 4989C5   		movq	%rax, %r13
 5204 0090 E8000000 		call	arg_str0
 5204      00
 5205 0095 B9000000 		movl	$.LC70, %ecx
 5205      00
 5206 009a BA000000 		movl	$.LC71, %edx
 5206      00
 5207 009f BE000000 		movl	$.LC72, %esi
 5207      00
 5208 00a4 BF000000 		movl	$.LC73, %edi
 5208      00
 5209 00a9 48894424 		movq	%rax, 48(%rsp)
 5209      30
 5210 00ae E8000000 		call	arg_str0
 5210      00
 5211 00b3 B9000000 		movl	$.LC74, %ecx
 5211      00
 5212 00b8 BA000000 		movl	$.LC75, %edx
 5212      00
 5213 00bd BE000000 		movl	$.LC76, %esi
 5213      00
 5214 00c2 BF000000 		movl	$.LC77, %edi
 5214      00
 5215 00c7 4989C6   		movq	%rax, %r14
 5216 00ca E8000000 		call	arg_str0
 5216      00
 5217 00cf B9000000 		movl	$.LC78, %ecx
 5217      00
 5218 00d4 BA000000 		movl	$.LC79, %edx
 5218      00
 5219 00d9 BE000000 		movl	$.LC80, %esi
 5219      00
 5220 00de BF000000 		movl	$.LC81, %edi
 5220      00
 5221 00e3 48894424 		movq	%rax, 8(%rsp)
 5221      08
 5222 00e8 E8000000 		call	arg_str0
 5222      00
 5223 00ed B9000000 		movl	$.LC82, %ecx
 5223      00
 5224 00f2 BA000000 		movl	$.LC83, %edx
 5224      00
 5225 00f7 BE000000 		movl	$.LC84, %esi
 5225      00
 5226 00fc BF000000 		movl	$.LC85, %edi
 5226      00
 5227 0101 48894424 		movq	%rax, 16(%rsp)
 5227      10
 5228 0106 E8000000 		call	arg_str0
 5228      00
 5229 010b B9000000 		movl	$.LC86, %ecx
 5229      00
 5230 0110 BA000000 		movl	$.LC87, %edx
 5230      00
 5231 0115 BE000000 		movl	$.LC88, %esi
 5231      00
 5232 011a BF000000 		movl	$.LC89, %edi
 5232      00
 5233 011f 48894424 		movq	%rax, 24(%rsp)
 5233      18
 5234 0124 E8000000 		call	arg_uint0
 5234      00
 5235 0129 B9000000 		movl	$.LC90, %ecx
 5235      00
 5236 012e BA000000 		movl	$.LC91, %edx
 5236      00
 5237 0133 BE000000 		movl	$.LC92, %esi
 5237      00
 5238 0138 BF000000 		movl	$.LC93, %edi
 5238      00
 5239 013d 48894424 		movq	%rax, 32(%rsp)
 5239      20
 5240 0142 E8000000 		call	arg_str0
 5240      00
 5241 0147 BA000000 		movl	$.LC94, %edx
 5241      00
 5242 014c BE000000 		movl	$.LC95, %esi
 5242      00
 5243 0151 BF000000 		movl	$.LC96, %edi
 5243      00
 5244 0156 48894424 		movq	%rax, 56(%rsp)
 5244      38
 5245 015b E8000000 		call	arg_lit0
 5245      00
 5246 0160 BA000000 		movl	$.LC97, %edx
 5246      00
 5247 0165 BE000000 		movl	$.LC98, %esi
 5247      00
 5248 016a BF000000 		movl	$.LC99, %edi
 5248      00
 5249 016f 48894424 		movq	%rax, 72(%rsp)
 5249      48
 5250 0174 E8000000 		call	arg_lit0
 5250      00
 5251 0179 BA000000 		movl	$.LC100, %edx
 5251      00
 5252 017e BE000000 		movl	$.LC101, %esi
 5252      00
 5253 0183 BF000000 		movl	$.LC36, %edi
 5253      00
 5254 0188 48894424 		movq	%rax, 80(%rsp)
 5254      50
 5255 018d E8000000 		call	arg_lit0
 5255      00
 5256 0192 B9000000 		movl	$.LC102, %ecx
 5256      00
 5257 0197 BA000000 		movl	$.LC103, %edx
 5257      00
 5258 019c BE000000 		movl	$.LC104, %esi
 5258      00
 5259 01a1 BF000000 		movl	$.LC105, %edi
 5259      00
 5260 01a6 48894424 		movq	%rax, 40(%rsp)
 5260      28
 5261 01ab E8000000 		call	arg_str0
 5261      00
 5262 01b0 BA000000 		movl	$.LC106, %edx
 5262      00
 5263 01b5 BE000000 		movl	$.LC107, %esi
 5263      00
 5264 01ba BF000000 		movl	$.LC108, %edi
 5264      00
 5265 01bf 48894424 		movq	%rax, 64(%rsp)
 5265      40
 5266 01c4 E8000000 		call	arg_lit0
 5266      00
 5267 01c9 31FF     		xorl	%edi, %edi
 5268 01cb B9000000 		movl	$.LC109, %ecx
 5268      00
 5269 01d0 BA000000 		movl	$.LC110, %edx
 5269      00
 5270 01d5 BE000000 		movl	$.LC111, %esi
 5270      00
 5271 01da 4889C3   		movq	%rax, %rbx
 5272 01dd E8000000 		call	arg_str0
 5272      00
 5273 01e2 B9000000 		movl	$.LC112, %ecx
 5273      00
 5274 01e7 BA000000 		movl	$.LC113, %edx
 5274      00
 5275 01ec BE000000 		movl	$.LC114, %esi
 5275      00
 5276 01f1 31FF     		xorl	%edi, %edi
 5277 01f3 4989C7   		movq	%rax, %r15
 5278 01f6 E8000000 		call	arg_str0
 5278      00
 5279 01fb BF140000 		movl	$20, %edi
 5279      00
 5280 0200 48890424 		movq	%rax, (%rsp)
 5281 0204 E8000000 		call	arg_end
 5281      00
 5282 0209 488B4C24 		movq	48(%rsp), %rcx
 5282      30
 5283 020e 488B5424 		movq	16(%rsp), %rdx
 5283      10
 5284 0213 4889C5   		movq	%rax, %rbp
 5285 0216 488B7424 		movq	56(%rsp), %rsi
 5285      38
 5286 021b 488B0424 		movq	(%rsp), %rax
 5287 021f 488DBC24 		leaq	224(%rsp), %rdi
 5287      E0000000 
 5288 0227 4C89A424 		movq	%r12, 224(%rsp)
 5288      E0000000 
 5289 022f 4C89AC24 		movq	%r13, 232(%rsp)
 5289      E8000000 
 5290 0237 48898C24 		movq	%rcx, 240(%rsp)
 5290      F0000000 
 5291 023f 488B4C24 		movq	8(%rsp), %rcx
 5291      08
 5292 0244 48899424 		movq	%rdx, 264(%rsp)
 5292      08010000 
 5293 024c 488B5424 		movq	32(%rsp), %rdx
 5293      20
 5294 0251 4889B424 		movq	%rsi, 288(%rsp)
 5294      20010000 
 5295 0259 488B7424 		movq	40(%rsp), %rsi
 5295      28
 5296 025e 48898C24 		movq	%rcx, 256(%rsp)
 5296      00010000 
 5297 0266 488B4C24 		movq	24(%rsp), %rcx
 5297      18
 5298 026b 48899424 		movq	%rdx, 280(%rsp)
 5298      18010000 
 5299 0273 488B5424 		movq	80(%rsp), %rdx
 5299      50
 5300 0278 4C89B424 		movq	%r14, 248(%rsp)
 5300      F8000000 
 5301 0280 4889B424 		movq	%rsi, 312(%rsp)
 5301      38010000 
 5302 0288 48898C24 		movq	%rcx, 272(%rsp)
 5302      10010000 
 5303 0290 488B4C24 		movq	72(%rsp), %rcx
 5303      48
 5304 0295 48899424 		movq	%rdx, 304(%rsp)
 5304      30010000 
 5305 029d 48899C24 		movq	%rbx, 328(%rsp)
 5305      48010000 
 5306 02a5 4C89BC24 		movq	%r15, 336(%rsp)
 5306      50010000 
 5307 02ad 48898424 		movq	%rax, 344(%rsp)
 5307      58010000 
 5308 02b5 48898C24 		movq	%rcx, 296(%rsp)
 5308      28010000 
 5309 02bd 488B4C24 		movq	64(%rsp), %rcx
 5309      40
 5310 02c2 4889AC24 		movq	%rbp, 352(%rsp)
 5310      60010000 
 5311 02ca 48C78424 		movq	$0, 128(%rsp)
 5311      80000000 
 5311      00000000 
 5312 02d6 48C78424 		movq	$0, 136(%rsp)
 5312      88000000 
 5312      00000000 
 5313 02e2 48898C24 		movq	%rcx, 320(%rsp)
 5313      40010000 
 5314 02ea E8000000 		call	arg_nullcheck
 5314      00
 5315 02ef 85C0     		testl	%eax, %eax
 5316 02f1 0F849600 		je	.L950
 5316      0000
 5317 02f7 488B3D00 		movq	stderr(%rip), %rdi
 5317      000000
 5318 02fe B9000000 		movl	$.LC115, %ecx
 5318      00
 5319 0303 BA000000 		movl	$.LC116, %edx
 5319      00
 5320 0308 BE010000 		movl	$1, %esi
 5320      00
 5321 030d 31C0     		xorl	%eax, %eax
 5322 030f 31DB     		xorl	%ebx, %ebx
 5323 0311 BD010000 		movl	$1, %ebp
 5323      00
 5324 0316 E8000000 		call	__fprintf_chk
 5324      00
 5325              	.L951:
 5326 031b 4889DF   		movq	%rbx, %rdi
 5327 031e E8000000 		call	free
 5327      00
 5328 0323 488BBC24 		movq	128(%rsp), %rdi
 5328      80000000 
 5329 032b E8000000 		call	flClose
 5329      00
 5330 0330 488B8C24 		movq	136(%rsp), %rcx
 5330      88000000 
 5331 0338 4885C9   		testq	%rcx, %rcx
 5332 033b 7425     		je	.L1033
 5333 033d 488B3D00 		movq	stderr(%rip), %rdi
 5333      000000
 5334 0344 BA000000 		movl	$.LC190, %edx
 5334      00
 5335 0349 BE010000 		movl	$1, %esi
 5335      00
 5336 034e 31C0     		xorl	%eax, %eax
 5337 0350 E8000000 		call	__fprintf_chk
 5337      00
 5338 0355 488BBC24 		movq	136(%rsp), %rdi
 5338      88000000 
 5339 035d E8000000 		call	flFreeError
 5339      00
 5340              	.L1033:
 5341 0362 488B9C24 		movq	13736(%rsp), %rbx
 5341      A8350000 
 5342 036a 6448331C 		xorq	%fs:40, %rbx
 5342      25280000 
 5342      00
 5343 0373 89E8     		movl	%ebp, %eax
 5344 0375 0F854307 		jne	.L1086
 5344      0000
 5345 037b 4881C4B8 		addq	$13752, %rsp
 5345      350000
 5346              		.cfi_remember_state
 5347              		.cfi_def_cfa_offset 56
 5348 0382 5B       		popq	%rbx
 5349              		.cfi_def_cfa_offset 48
 5350 0383 5D       		popq	%rbp
 5351              		.cfi_def_cfa_offset 40
 5352 0384 415C     		popq	%r12
 5353              		.cfi_def_cfa_offset 32
 5354 0386 415D     		popq	%r13
 5355              		.cfi_def_cfa_offset 24
 5356 0388 415E     		popq	%r14
 5357              		.cfi_def_cfa_offset 16
 5358 038a 415F     		popq	%r15
 5359              		.cfi_def_cfa_offset 8
 5360 038c C3       		ret
 5361              	.L950:
 5362              		.cfi_restore_state
 5363 038d 488B7424 		movq	96(%rsp), %rsi
 5363      60
 5364 0392 8B7C245C 		movl	92(%rsp), %edi
 5365 0396 488D9424 		leaq	224(%rsp), %rdx
 5365      E0000000 
 5366 039e E8000000 		call	arg_parse
 5366      00
 5367 03a3 837B6000 		cmpl	$0, 96(%rbx)
 5368 03a7 7E62     		jle	.L952
 5369 03a9 BA000000 		movl	$.LC115, %edx
 5369      00
 5370 03ae BE000000 		movl	$.LC117, %esi
 5370      00
 5371 03b3 BF010000 		movl	$1, %edi
 5371      00
 5372 03b8 31C0     		xorl	%eax, %eax
 5373 03ba 31DB     		xorl	%ebx, %ebx
 5374 03bc 31ED     		xorl	%ebp, %ebp
 5375 03be E8000000 		call	__printf_chk
 5375      00
 5376 03c3 488B3D00 		movq	stdout(%rip), %rdi
 5376      000000
 5377 03ca 488DB424 		leaq	224(%rsp), %rsi
 5377      E0000000 
 5378 03d2 BA000000 		movl	$.LC118, %edx
 5378      00
 5379 03d7 E8000000 		call	arg_print_syntax
 5379      00
 5380 03dc BE000000 		movl	$.LC119, %esi
 5380      00
 5381 03e1 BF010000 		movl	$1, %edi
 5381      00
 5382 03e6 31C0     		xorl	%eax, %eax
 5383 03e8 E8000000 		call	__printf_chk
 5383      00
 5384 03ed 488B3D00 		movq	stdout(%rip), %rdi
 5384      000000
 5385 03f4 488DB424 		leaq	224(%rsp), %rsi
 5385      E0000000 
 5386 03fc BA000000 		movl	$.LC120, %edx
 5386      00
 5387 0401 E8000000 		call	arg_print_glossary
 5387      00
 5388 0406 E910FFFF 		jmp	.L951
 5388      FF
 5389              	.L952:
 5390 040b 85C0     		testl	%eax, %eax
 5391 040d 7E3D     		jle	.L953
 5392 040f 488B3D00 		movq	stdout(%rip), %rdi
 5392      000000
 5393 0416 BA000000 		movl	$.LC115, %edx
 5393      00
 5394 041b 4889EE   		movq	%rbp, %rsi
 5395 041e E8000000 		call	arg_print_errors
 5395      00
 5396 0423 B9000000 		movl	$.LC115, %ecx
 5396      00
 5397 0428 BA000000 		movl	$.LC121, %edx
 5397      00
 5398              	.L1077:
 5399 042d 488B3D00 		movq	stderr(%rip), %rdi
 5399      000000
 5400 0434 BE010000 		movl	$1, %esi
 5400      00
 5401 0439 31C0     		xorl	%eax, %eax
 5402 043b 31DB     		xorl	%ebx, %ebx
 5403 043d BD0C0000 		movl	$12, %ebp
 5403      00
 5404 0442 E8000000 		call	__fprintf_chk
 5404      00
 5405 0447 E9CFFEFF 		jmp	.L951
 5405      FF
 5406              	.L953:
 5407 044c 488DB424 		leaq	136(%rsp), %rsi
 5407      88000000 
 5408 0454 31FF     		xorl	%edi, %edi
 5409 0456 E8000000 		call	flInitialise
 5409      00
 5410 045b 85C0     		testl	%eax, %eax
 5411 045d 740C     		je	.L1087
 5412              	.L1027:
 5413 045f 31DB     		xorl	%ebx, %ebx
 5414 0461 BD010000 		movl	$1, %ebp
 5414      00
 5415 0466 E9B0FEFF 		jmp	.L951
 5415      FF
 5416              	.L1087:
 5417 046b 498B4568 		movq	104(%r13), %rax
 5418 046f BE000000 		movl	$.LC122, %esi
 5418      00
 5419 0474 BF010000 		movl	$1, %edi
 5419      00
 5420 0479 4C8B28   		movq	(%rax), %r13
 5421 047c 31C0     		xorl	%eax, %eax
 5422 047e 4C89EA   		movq	%r13, %rdx
 5423 0481 E8000000 		call	__printf_chk
 5423      00
 5424 0486 488DB424 		leaq	128(%rsp), %rsi
 5424      80000000 
 5425 048e 31D2     		xorl	%edx, %edx
 5426 0490 4C89EF   		movq	%r13, %rdi
 5427 0493 E8000000 		call	flOpen
 5427      00
 5428 0498 85C0     		testl	%eax, %eax
 5429 049a 0F841701 		je	.L955
 5429      0000
 5430 04a0 41837C24 		cmpl	$0, 96(%r12)
 5430      6000
 5431 04a6 0F84CA00 		je	.L956
 5431      0000
 5432 04ac 498B4424 		movq	104(%r12), %rax
 5432      68
 5433 04b1 BE000000 		movl	$.LC123, %esi
 5433      00
 5434 04b6 BF010000 		movl	$1, %edi
 5434      00
 5435 04bb 488B18   		movq	(%rax), %rbx
 5436 04be 31C0     		xorl	%eax, %eax
 5437 04c0 4889DA   		movq	%rbx, %rdx
 5438 04c3 E8000000 		call	__printf_chk
 5438      00
 5439 04c8 41837E60 		cmpl	$0, 96(%r14)
 5439      00
 5440 04cd 0F84C902 		je	.L957
 5440      0000
 5441 04d3 498B4668 		movq	104(%r14), %rax
 5442 04d7 488D9424 		leaq	136(%rsp), %rdx
 5442      88000000 
 5443 04df 4889DF   		movq	%rbx, %rdi
 5444 04e2 488B30   		movq	(%rax), %rsi
 5445 04e5 E8000000 		call	flLoadCustomFirmware
 5445      00
 5446              	.L958:
 5447 04ea 85C0     		testl	%eax, %eax
 5448 04ec 0F856DFF 		jne	.L1027
 5448      FFFF
 5449 04f2 BE000000 		movl	$.LC124, %esi
 5449      00
 5450 04f7 BF010000 		movl	$1, %edi
 5450      00
 5451 04fc BB3C0000 		movl	$60, %ebx
 5451      00
 5452 0501 E8000000 		call	__printf_chk
 5452      00
 5453 0506 BFE80300 		movl	$1000, %edi
 5453      00
 5454 050b 488DAC24 		leaq	152(%rsp), %rbp
 5454      98000000 
 5455 0513 E8000000 		call	flSleep
 5455      00
 5456 0518 EB23     		jmp	.L960
 5457              	.L1088:
 5458 051a BFFA0000 		movl	$250, %edi
 5458      00
 5459 051f 83EB01   		subl	$1, %ebx
 5460 0522 E8000000 		call	flSleep
 5460      00
 5461 0527 80BC2498 		cmpb	$0, 152(%rsp)
 5461      00000000 
 5462 052f 0F857103 		jne	.L1040
 5462      0000
 5463 0535 85DB     		testl	%ebx, %ebx
 5464 0537 0F846903 		je	.L1040
 5464      0000
 5465              	.L960:
 5466 053d BE000000 		movl	$.LC125, %esi
 5466      00
 5467 0542 BF010000 		movl	$1, %edi
 5467      00
 5468 0547 31C0     		xorl	%eax, %eax
 5469 0549 E8000000 		call	__printf_chk
 5469      00
 5470 054e 488B3D00 		movq	stdout(%rip), %rdi
 5470      000000
 5471 0555 E8000000 		call	fflush
 5471      00
 5472 055a 488D9424 		leaq	136(%rsp), %rdx
 5472      88000000 
 5473 0562 4889EE   		movq	%rbp, %rsi
 5474 0565 4C89EF   		movq	%r13, %rdi
 5475 0568 E8000000 		call	flIsDeviceAvailable
 5475      00
 5476 056d 85C0     		testl	%eax, %eax
 5477 056f 74A9     		je	.L1088
 5478 0571 E9E9FEFF 		jmp	.L1027
 5478      FF
 5479              	.L956:
 5480 0576 4C89E9   		movq	%r13, %rcx
 5481 0579 BA000000 		movl	$.LC128, %edx
 5481      00
 5482 057e E9AAFEFF 		jmp	.L1077
 5482      FF
 5483              	.L962:
 5484 0583 4C89EA   		movq	%r13, %rdx
 5485 0586 BE000000 		movl	$.LC127, %esi
 5485      00
 5486 058b BF010000 		movl	$1, %edi
 5486      00
 5487 0590 31C0     		xorl	%eax, %eax
 5488 0592 E8000000 		call	__printf_chk
 5488      00
 5489 0597 488D9424 		leaq	136(%rsp), %rdx
 5489      88000000 
 5490 059f 488DB424 		leaq	128(%rsp), %rsi
 5490      80000000 
 5491 05a7 4C89EF   		movq	%r13, %rdi
 5492 05aa E8000000 		call	flOpen
 5492      00
 5493 05af 85C0     		testl	%eax, %eax
 5494 05b1 0F85A8FE 		jne	.L1027
 5494      FFFF
 5495              	.L955:
 5496 05b7 488BBC24 		movq	128(%rsp), %rdi
 5496      80000000 
 5497 05bf E8000000 		call	flGetFirmwareVersion
 5497      00
 5498 05c4 488BBC24 		movq	128(%rsp), %rdi
 5498      80000000 
 5499 05cc 89C3     		movl	%eax, %ebx
 5500 05ce E8000000 		call	flGetFirmwareID
 5500      00
 5501 05d3 4189D8   		movl	%ebx, %r8d
 5502 05d6 0FB7C8   		movzwl	%ax, %ecx
 5503 05d9 4C89EA   		movq	%r13, %rdx
 5504 05dc 31C0     		xorl	%eax, %eax
 5505 05de BE000000 		movl	$.LC129, %esi
 5505      00
 5506 05e3 BF010000 		movl	$1, %edi
 5506      00
 5507 05e8 E8000000 		call	__printf_chk
 5507      00
 5508 05ed 41837F60 		cmpl	$0, 96(%r15)
 5508      00
 5509 05f2 745F     		je	.L970
 5510 05f4 498B4768 		movq	104(%r15), %rax
 5511 05f8 488B10   		movq	(%rax), %rdx
 5512 05fb 803A73   		cmpb	$115, (%rdx)
 5513 05fe 0F85B001 		jne	.L967
 5513      0000
 5514 0604 807A0174 		cmpb	$116, 1(%rdx)
 5515 0608 0F85A601 		jne	.L967
 5515      0000
 5516 060e 807A0264 		cmpb	$100, 2(%rdx)
 5517 0612 0F859C01 		jne	.L967
 5517      0000
 5518 0618 807A0300 		cmpb	$0, 3(%rdx)
 5519 061c 0F859201 		jne	.L967
 5519      0000
 5520 0622 BE000000 		movl	$.LC130, %esi
 5520      00
 5521 0627 BF010000 		movl	$1, %edi
 5521      00
 5522 062c 31C0     		xorl	%eax, %eax
 5523 062e E8000000 		call	__printf_chk
 5523      00
 5524 0633 488BBC24 		movq	128(%rsp), %rdi
 5524      80000000 
 5525 063b 488D9424 		leaq	136(%rsp), %rdx
 5525      88000000 
 5526 0643 4C89EE   		movq	%r13, %rsi
 5527 0646 E8000000 		call	flFlashStandardFirmware
 5527      00
 5528              	.L968:
 5529 064b 85C0     		testl	%eax, %eax
 5530 064d 0F850CFE 		jne	.L1027
 5530      FFFF
 5531              	.L970:
 5532 0653 488B0424 		movq	(%rsp), %rax
 5533 0657 83786000 		cmpl	$0, 96(%rax)
 5534 065b 0F858501 		jne	.L1089
 5534      0000
 5535              	.L966:
 5536 0661 488B4424 		movq	40(%rsp), %rax
 5536      28
 5537 0666 83786000 		cmpl	$0, 96(%rax)
 5538 066a 0F857502 		jne	.L973
 5538      0000
 5539              	.L976:
 5540 0670 488B4424 		movq	32(%rsp), %rax
 5540      20
 5541 0675 BB010000 		movl	$1, %ebx
 5541      00
 5542 067a 83786000 		cmpl	$0, 96(%rax)
 5543 067e 740C     		je	.L975
 5544 0680 488B4424 		movq	32(%rsp), %rax
 5544      20
 5545 0685 488B4068 		movq	104(%rax), %rax
 5546 0689 0FB618   		movzbl	(%rax), %ebx
 5547              	.L975:
 5548 068c 488BBC24 		movq	128(%rsp), %rdi
 5548      80000000 
 5549 0694 440FB6F3 		movzbl	%bl, %r14d
 5550 0698 E8000000 		call	flIsNeroCapable
 5550      00
 5551 069d 488BBC24 		movq	128(%rsp), %rdi
 5551      80000000 
 5552 06a5 4489F6   		movl	%r14d, %esi
 5553 06a8 4189C4   		movl	%eax, %r12d
 5554 06ab E8000000 		call	flIsCommCapable
 5554      00
 5555 06b0 89C3     		movl	%eax, %ebx
 5556 06b2 488B4424 		movq	8(%rsp), %rax
 5556      08
 5557 06b7 83786000 		cmpl	$0, 96(%rax)
 5558 06bb 0F854602 		jne	.L1090
 5558      0000
 5559              	.L977:
 5560 06c1 488B4424 		movq	16(%rsp), %rax
 5560      10
 5561 06c6 83786000 		cmpl	$0, 96(%rax)
 5562 06ca 0F847001 		je	.L979
 5562      0000
 5563 06d0 4584E4   		testb	%r12b, %r12b
 5564 06d3 0F84D803 		je	.L980
 5564      0000
 5565 06d9 488BBC24 		movq	128(%rsp), %rdi
 5565      80000000 
 5566 06e1 488D9424 		leaq	136(%rsp), %rdx
 5566      88000000 
 5567 06e9 31F6     		xorl	%esi, %esi
 5568 06eb E8000000 		call	flSelectConduit
 5568      00
 5569 06f0 85C0     		testl	%eax, %eax
 5570 06f2 0F8567FD 		jne	.L1027
 5570      FFFF
 5571 06f8 488B4424 		movq	16(%rsp), %rax
 5571      10
 5572 06fd 488BBC24 		movq	128(%rsp), %rdi
 5572      80000000 
 5573 0705 4C8D8C24 		leaq	136(%rsp), %r9
 5573      88000000 
 5574 070d 488D8C24 		leaq	160(%rsp), %rcx
 5574      A0000000 
 5575 0715 488D5424 		leaq	120(%rsp), %rdx
 5575      78
 5576 071a 41B81000 		movl	$16, %r8d
 5576      0000
 5577 0720 488B4068 		movq	104(%rax), %rax
 5578 0724 488B30   		movq	(%rax), %rsi
 5579 0727 E8000000 		call	jtagScanChain
 5579      00
 5580 072c 85C0     		testl	%eax, %eax
 5581 072e 0F852BFD 		jne	.L1027
 5581      FFFF
 5582 0734 837C2478 		cmpl	$0, 120(%rsp)
 5582      00
 5583 0739 4C89EA   		movq	%r13, %rdx
 5584 073c 0F84450C 		je	.L981
 5584      0000
 5585 0742 BE000000 		movl	$.LC140, %esi
 5585      00
 5586 0747 BF010000 		movl	$1, %edi
 5586      00
 5587 074c 31ED     		xorl	%ebp, %ebp
 5588 074e E8000000 		call	__printf_chk
 5588      00
 5589 0753 EB1C     		jmp	.L982
 5590              	.L983:
 5591 0755 8B94ACA0 		movl	160(%rsp,%rbp,4), %edx
 5591      000000
 5592 075c BE000000 		movl	$.LC141, %esi
 5592      00
 5593 0761 BF010000 		movl	$1, %edi
 5593      00
 5594 0766 31C0     		xorl	%eax, %eax
 5595 0768 4883C501 		addq	$1, %rbp
 5596 076c E8000000 		call	__printf_chk
 5596      00
 5597              	.L982:
 5598 0771 396C2478 		cmpl	%ebp, 120(%rsp)
 5599 0775 77DE     		ja	.L983
 5600              	.L984:
 5601 0777 488B4424 		movq	24(%rsp), %rax
 5601      18
 5602 077c 83786000 		cmpl	$0, 96(%rax)
 5603 0780 0F84C900 		je	.L985
 5603      0000
 5604 0786 BE000000 		movl	$.LC144, %esi
 5604      00
 5605 078b BF010000 		movl	$1, %edi
 5605      00
 5606 0790 31C0     		xorl	%eax, %eax
 5607 0792 E8000000 		call	__printf_chk
 5607      00
 5608 0797 E9930300 		jmp	.L1034
 5608      00
 5609              	.L957:
 5610 079c 488D9424 		leaq	136(%rsp), %rdx
 5610      88000000 
 5611 07a4 4C89EE   		movq	%r13, %rsi
 5612 07a7 4889DF   		movq	%rbx, %rdi
 5613 07aa E8000000 		call	flLoadStandardFirmware
 5613      00
 5614 07af E936FDFF 		jmp	.L958
 5614      FF
 5615              	.L967:
 5616 07b4 BE000000 		movl	$.LC131, %esi
 5616      00
 5617 07b9 BF010000 		movl	$1, %edi
 5617      00
 5618 07be 31C0     		xorl	%eax, %eax
 5619 07c0 E8000000 		call	__printf_chk
 5619      00
 5620 07c5 498B4768 		movq	104(%r15), %rax
 5621 07c9 488BBC24 		movq	128(%rsp), %rdi
 5621      80000000 
 5622 07d1 488D9424 		leaq	136(%rsp), %rdx
 5622      88000000 
 5623 07d9 488B30   		movq	(%rax), %rsi
 5624 07dc E8000000 		call	flFlashCustomFirmware
 5624      00
 5625 07e1 E965FEFF 		jmp	.L968
 5625      FF
 5626              	.L1089:
 5627 07e6 488B0424 		movq	(%rsp), %rax
 5628 07ea 488DAC24 		leaq	152(%rsp), %rbp
 5628      98000000 
 5629 07f2 31D2     		xorl	%edx, %edx
 5630 07f4 4889EE   		movq	%rbp, %rsi
 5631 07f7 488B4068 		movq	104(%rax), %rax
 5632 07fb 488B38   		movq	(%rax), %rdi
 5633 07fe E8000000 		call	strtoul
 5633      00
 5634 0803 488B8C24 		movq	152(%rsp), %rcx
 5634      98000000 
 5635 080b 4889C3   		movq	%rax, %rbx
 5636 080e 80393A   		cmpb	$58, (%rcx)
 5637 0811 0F84AC02 		je	.L971
 5637      0000
 5638 0817 B9000000 		movl	$.LC115, %ecx
 5638      00
 5639 081c BA000000 		movl	$.LC132, %edx
 5639      00
 5640              	.L1079:
 5641 0821 488B3D00 		movq	stderr(%rip), %rdi
 5641      000000
 5642 0828 BE010000 		movl	$1, %esi
 5642      00
 5643 082d 31C0     		xorl	%eax, %eax
 5644 082f BD0C0000 		movl	$12, %ebp
 5644      00
 5645 0834 31DB     		xorl	%ebx, %ebx
 5646 0836 E8000000 		call	__fprintf_chk
 5646      00
 5647 083b E9DBFAFF 		jmp	.L951
 5647      FF
 5648              	.L979:
 5649 0840 488B4424 		movq	24(%rsp), %rax
 5649      18
 5650 0845 83786000 		cmpl	$0, 96(%rax)
 5651 0849 0F85C602 		jne	.L1091
 5651      0000
 5652              	.L985:
 5653 084f 488B4424 		movq	80(%rsp), %rax
 5653      50
 5654 0854 83786000 		cmpl	$0, 96(%rax)
 5655 0858 7407     		je	.L987
 5656 085a C6050000 		movb	$1, enableBenchmarking(%rip)
 5656      000001
 5657              	.L987:
 5658 0861 488B4424 		movq	56(%rsp), %rax
 5658      38
 5659 0866 83786000 		cmpl	$0, 96(%rax)
 5660 086a 0F850E03 		jne	.L1092
 5660      0000
 5661              	.L988:
 5662 0870 488B4424 		movq	64(%rsp), %rax
 5662      40
 5663 0875 83786000 		cmpl	$0, 96(%rax)
 5664 0879 0F85A303 		jne	.L1093
 5664      0000
 5665              	.L994:
 5666 087f 488B4424 		movq	48(%rsp), %rax
 5666      30
 5667 0884 83786000 		cmpl	$0, 96(%rax)
 5668 0888 0F85DD03 		jne	.L1094
 5668      0000
 5669 088e 488B4424 		movq	72(%rsp), %rax
 5669      48
 5670 0893 83786000 		cmpl	$0, 96(%rax)
 5671 0897 0F850F0A 		jne	.L1095
 5671      0000
 5672 089d 31DB     		xorl	%ebx, %ebx
 5673              	.L1078:
 5674 089f 31ED     		xorl	%ebp, %ebp
 5675 08a1 E975FAFF 		jmp	.L951
 5675      FF
 5676              	.L1040:
 5677 08a6 31C0     		xorl	%eax, %eax
 5678 08a8 BE000000 		movl	$.LC118, %esi
 5678      00
 5679 08ad BF010000 		movl	$1, %edi
 5679      00
 5680 08b2 E8000000 		call	__printf_chk
 5680      00
 5681 08b7 80BC2498 		cmpb	$0, 152(%rsp)
 5681      00000000 
 5682 08bf 0F85BEFC 		jne	.L962
 5682      FFFF
 5683 08c5 488B3D00 		movq	stderr(%rip), %rdi
 5683      000000
 5684 08cc 4C89E9   		movq	%r13, %rcx
 5685 08cf BA000000 		movl	$.LC126, %edx
 5685      00
 5686 08d4 BE010000 		movl	$1, %esi
 5686      00
 5687 08d9 31C0     		xorl	%eax, %eax
 5688 08db E8000000 		call	__fprintf_chk
 5688      00
 5689 08e0 E97AFBFF 		jmp	.L1027
 5689      FF
 5690              	.L973:
 5691 08e5 488BBC24 		movq	128(%rsp), %rdi
 5691      80000000 
 5692 08ed 488DB424 		leaq	136(%rsp), %rsi
 5692      88000000 
 5693 08f5 E8000000 		call	flResetToggle
 5693      00
 5694 08fa 85C0     		testl	%eax, %eax
 5695 08fc 0F855DFB 		jne	.L1027
 5695      FFFF
 5696 0902 E969FDFF 		jmp	.L976
 5696      FF
 5697              	.L1090:
 5698 0907 BE000000 		movl	$.LC134, %esi
 5698      00
 5699 090c BF010000 		movl	$1, %edi
 5699      00
 5700 0911 31C0     		xorl	%eax, %eax
 5701 0913 E8000000 		call	__printf_chk
 5701      00
 5702 0918 488B4424 		movq	8(%rsp), %rax
 5702      08
 5703 091d 488DAC24 		leaq	152(%rsp), %rbp
 5703      98000000 
 5704 0925 488BBC24 		movq	128(%rsp), %rdi
 5704      80000000 
 5705 092d 488D8C24 		leaq	136(%rsp), %rcx
 5705      88000000 
 5706 0935 4889EA   		movq	%rbp, %rdx
 5707 0938 488B4068 		movq	104(%rax), %rax
 5708 093c 488B30   		movq	(%rax), %rsi
 5709 093f E8000000 		call	flMultiBitPortAccess
 5709      00
 5710 0944 85C0     		testl	%eax, %eax
 5711 0946 0F8513FB 		jne	.L1027
 5711      FFFF
 5712 094c 448B8424 		movl	152(%rsp), %r8d
 5712      98000000 
 5713 0954 488DBC24 		leaq	13712(%rsp), %rdi
 5713      90350000 
 5714 095c B9000000 		movl	$.LC135, %ecx
 5714      00
 5715 0961 BA090000 		movl	$9, %edx
 5715      00
 5716 0966 BE010000 		movl	$1, %esi
 5716      00
 5717 096b 31C0     		xorl	%eax, %eax
 5718 096d E8000000 		call	__sprintf_chk
 5718      00
 5719 0972 0FB68424 		movzbl	13712(%rsp), %eax
 5719      90350000 
 5720 097a BE000000 		movl	$.LC136, %esi
 5720      00
 5721 097f BF010000 		movl	$1, %edi
 5721      00
 5722 0984 83E830   		subl	$48, %eax
 5723 0987 4898     		cltq
 5724 0989 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5724      00000000 
 5725 0991 31C0     		xorl	%eax, %eax
 5726 0993 E8000000 		call	__printf_chk
 5726      00
 5727 0998 0FB68424 		movzbl	13713(%rsp), %eax
 5727      91350000 
 5728 09a0 BE000000 		movl	$.LC137, %esi
 5728      00
 5729 09a5 BF010000 		movl	$1, %edi
 5729      00
 5730 09aa 83E830   		subl	$48, %eax
 5731 09ad 4898     		cltq
 5732 09af 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5732      00000000 
 5733 09b7 31C0     		xorl	%eax, %eax
 5734 09b9 E8000000 		call	__printf_chk
 5734      00
 5735 09be 0FB68424 		movzbl	13714(%rsp), %eax
 5735      92350000 
 5736 09c6 BE000000 		movl	$.LC137, %esi
 5736      00
 5737 09cb BF010000 		movl	$1, %edi
 5737      00
 5738 09d0 83E830   		subl	$48, %eax
 5739 09d3 4898     		cltq
 5740 09d5 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5740      00000000 
 5741 09dd 31C0     		xorl	%eax, %eax
 5742 09df E8000000 		call	__printf_chk
 5742      00
 5743 09e4 0FB68424 		movzbl	13715(%rsp), %eax
 5743      93350000 
 5744 09ec BE000000 		movl	$.LC137, %esi
 5744      00
 5745 09f1 BF010000 		movl	$1, %edi
 5745      00
 5746 09f6 83E830   		subl	$48, %eax
 5747 09f9 4898     		cltq
 5748 09fb 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5748      00000000 
 5749 0a03 31C0     		xorl	%eax, %eax
 5750 0a05 E8000000 		call	__printf_chk
 5750      00
 5751 0a0a 0FB68424 		movzbl	13716(%rsp), %eax
 5751      94350000 
 5752 0a12 BE000000 		movl	$.LC138, %esi
 5752      00
 5753 0a17 BF010000 		movl	$1, %edi
 5753      00
 5754 0a1c 83E830   		subl	$48, %eax
 5755 0a1f 4898     		cltq
 5756 0a21 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5756      00000000 
 5757 0a29 31C0     		xorl	%eax, %eax
 5758 0a2b E8000000 		call	__printf_chk
 5758      00
 5759 0a30 0FB68424 		movzbl	13717(%rsp), %eax
 5759      95350000 
 5760 0a38 BE000000 		movl	$.LC137, %esi
 5760      00
 5761 0a3d BF010000 		movl	$1, %edi
 5761      00
 5762 0a42 83E830   		subl	$48, %eax
 5763 0a45 4898     		cltq
 5764 0a47 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5764      00000000 
 5765 0a4f 31C0     		xorl	%eax, %eax
 5766 0a51 E8000000 		call	__printf_chk
 5766      00
 5767 0a56 0FB68424 		movzbl	13718(%rsp), %eax
 5767      96350000 
 5768 0a5e BE000000 		movl	$.LC137, %esi
 5768      00
 5769 0a63 BF010000 		movl	$1, %edi
 5769      00
 5770 0a68 83E830   		subl	$48, %eax
 5771 0a6b 4898     		cltq
 5772 0a6d 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5772      00000000 
 5773 0a75 31C0     		xorl	%eax, %eax
 5774 0a77 E8000000 		call	__printf_chk
 5774      00
 5775 0a7c 0FB68424 		movzbl	13719(%rsp), %eax
 5775      97350000 
 5776 0a84 BE000000 		movl	$.LC139, %esi
 5776      00
 5777 0a89 BF010000 		movl	$1, %edi
 5777      00
 5778 0a8e 83E830   		subl	$48, %eax
 5779 0a91 4898     		cltq
 5780 0a93 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5780      00000000 
 5781 0a9b 31C0     		xorl	%eax, %eax
 5782 0a9d E8000000 		call	__printf_chk
 5782      00
 5783 0aa2 BF640000 		movl	$100, %edi
 5783      00
 5784 0aa7 E8000000 		call	flSleep
 5784      00
 5785 0aac E910FCFF 		jmp	.L977
 5785      FF
 5786              	.L980:
 5787 0ab1 4C89E9   		movq	%r13, %rcx
 5788 0ab4 BA000000 		movl	$.LC143, %edx
 5788      00
 5789 0ab9 E96FF9FF 		jmp	.L1077
 5789      FF
 5790              	.L1086:
 5791 0abe E8000000 		call	__stack_chk_fail
 5791      00
 5792              	.L971:
 5793 0ac3 4883C101 		addq	$1, %rcx
 5794 0ac7 89C2     		movl	%eax, %edx
 5795 0ac9 BE000000 		movl	$.LC133, %esi
 5795      00
 5796 0ace BF010000 		movl	$1, %edi
 5796      00
 5797 0ad3 31C0     		xorl	%eax, %eax
 5798 0ad5 48898C24 		movq	%rcx, 152(%rsp)
 5798      98000000 
 5799 0add E8000000 		call	__printf_chk
 5799      00
 5800 0ae2 488B9424 		movq	152(%rsp), %rdx
 5800      98000000 
 5801 0aea 488BBC24 		movq	128(%rsp), %rdi
 5801      80000000 
 5802 0af2 488D8C24 		leaq	136(%rsp), %rcx
 5802      88000000 
 5803 0afa 89DE     		movl	%ebx, %esi
 5804 0afc E8000000 		call	flSaveFirmware
 5804      00
 5805 0b01 85C0     		testl	%eax, %eax
 5806 0b03 0F8458FB 		je	.L966
 5806      FFFF
 5807              	.L998:
 5808 0b09 BD010000 		movl	$1, %ebp
 5808      00
 5809 0b0e 31DB     		xorl	%ebx, %ebx
 5810 0b10 E906F8FF 		jmp	.L951
 5810      FF
 5811              	.L1091:
 5812 0b15 31C0     		xorl	%eax, %eax
 5813 0b17 BE000000 		movl	$.LC144, %esi
 5813      00
 5814 0b1c BF010000 		movl	$1, %edi
 5814      00
 5815 0b21 E8000000 		call	__printf_chk
 5815      00
 5816 0b26 4584E4   		testb	%r12b, %r12b
 5817 0b29 0F842F01 		je	.L986
 5817      0000
 5818              	.L1034:
 5819 0b2f 488BBC24 		movq	128(%rsp), %rdi
 5819      80000000 
 5820 0b37 488D9424 		leaq	136(%rsp), %rdx
 5820      88000000 
 5821 0b3f 31F6     		xorl	%esi, %esi
 5822 0b41 E8000000 		call	flSelectConduit
 5822      00
 5823 0b46 85C0     		testl	%eax, %eax
 5824 0b48 0F8511F9 		jne	.L1027
 5824      FFFF
 5825 0b4e 488B4424 		movq	24(%rsp), %rax
 5825      18
 5826 0b53 488BBC24 		movq	128(%rsp), %rdi
 5826      80000000 
 5827 0b5b 488D8C24 		leaq	136(%rsp), %rcx
 5827      88000000 
 5828 0b63 31D2     		xorl	%edx, %edx
 5829 0b65 488B4068 		movq	104(%rax), %rax
 5830 0b69 488B30   		movq	(%rax), %rsi
 5831 0b6c E8000000 		call	flProgram
 5831      00
 5832 0b71 85C0     		testl	%eax, %eax
 5833 0b73 0F85E6F8 		jne	.L1027
 5833      FFFF
 5834 0b79 E9D1FCFF 		jmp	.L985
 5834      FF
 5835              	.L1092:
 5836 0b7e 31C0     		xorl	%eax, %eax
 5837 0b80 4C89EA   		movq	%r13, %rdx
 5838 0b83 BE000000 		movl	$.LC146, %esi
 5838      00
 5839 0b88 BF010000 		movl	$1, %edi
 5839      00
 5840 0b8d E8000000 		call	__printf_chk
 5840      00
 5841 0b92 84DB     		testb	%bl, %bl
 5842 0b94 0F84E007 		je	.L989
 5842      0000
 5843 0b9a 488BBC24 		movq	128(%rsp), %rdi
 5843      80000000 
 5844 0ba2 488D9424 		leaq	136(%rsp), %rdx
 5844      88000000 
 5845 0baa 4489F6   		movl	%r14d, %esi
 5846 0bad E8000000 		call	flSelectConduit
 5846      00
 5847 0bb2 85C0     		testl	%eax, %eax
 5848 0bb4 0F854FFF 		jne	.L998
 5848      FFFF
 5849 0bba 488DAC24 		leaq	152(%rsp), %rbp
 5849      98000000 
 5850 0bc2 488BBC24 		movq	128(%rsp), %rdi
 5850      80000000 
 5851 0bca 488D9424 		leaq	136(%rsp), %rdx
 5851      88000000 
 5852 0bd2 4889EE   		movq	%rbp, %rsi
 5853 0bd5 E8000000 		call	flIsFPGARunning
 5853      00
 5854 0bda 85C0     		testl	%eax, %eax
 5855 0bdc 0F8527FF 		jne	.L998
 5855      FFFF
 5856 0be2 80BC2498 		cmpb	$0, 152(%rsp)
 5856      00000000 
 5857 0bea 0F842809 		je	.L991
 5857      0000
 5858 0bf0 488B4424 		movq	56(%rsp), %rax
 5858      38
 5859 0bf5 488BBC24 		movq	128(%rsp), %rdi
 5859      80000000 
 5860 0bfd 488D9424 		leaq	136(%rsp), %rdx
 5860      88000000 
 5861 0c05 488B4068 		movq	104(%rax), %rax
 5862 0c09 488B30   		movq	(%rax), %rsi
 5863 0c0c E8000000 		call	parseLine
 5863      00
 5864 0c11 85C0     		testl	%eax, %eax
 5865 0c13 89C5     		movl	%eax, %ebp
 5866 0c15 0F8455FC 		je	.L988
 5866      FFFF
 5867 0c1b 31DB     		xorl	%ebx, %ebx
 5868 0c1d E9F9F6FF 		jmp	.L951
 5868      FF
 5869              	.L1093:
 5870 0c22 488B4068 		movq	104(%rax), %rax
 5871 0c26 488DB424 		leaq	144(%rsp), %rsi
 5871      90000000 
 5872 0c2e BA0A0000 		movl	$10, %edx
 5872      00
 5873 0c33 488B38   		movq	(%rax), %rdi
 5874 0c36 E8000000 		call	strtoul
 5874      00
 5875 0c3b 488B8C24 		movq	144(%rsp), %rcx
 5875      90000000 
 5876 0c43 4889C5   		movq	%rax, %rbp
 5877 0c46 80393A   		cmpb	$58, (%rcx)
 5878 0c49 0F844E07 		je	.L995
 5878      0000
 5879 0c4f B9000000 		movl	$.LC115, %ecx
 5879      00
 5880 0c54 BA000000 		movl	$.LC149, %edx
 5880      00
 5881 0c59 E9C3FBFF 		jmp	.L1079
 5881      FF
 5882              	.L986:
 5883 0c5e 4C89E9   		movq	%r13, %rcx
 5884 0c61 BA000000 		movl	$.LC145, %edx
 5884      00
 5885 0c66 E9C2F7FF 		jmp	.L1077
 5885      FF
 5886              	.L1094:
 5887 0c6b BE000000 		movl	$.LC152, %esi
 5887      00
 5888 0c70 BF010000 		movl	$1, %edi
 5888      00
 5889 0c75 31C0     		xorl	%eax, %eax
 5890 0c77 E8000000 		call	__printf_chk
 5890      00
 5891 0c7c BE000000 		movl	$.LC153, %esi
 5891      00
 5892 0c81 BF010000 		movl	$1, %edi
 5892      00
 5893 0c86 31C0     		xorl	%eax, %eax
 5894 0c88 E8000000 		call	__printf_chk
 5894      00
 5895 0c8d BE000000 		movl	$.LC152, %esi
 5895      00
 5896 0c92 BF010000 		movl	$1, %edi
 5896      00
 5897 0c97 31C0     		xorl	%eax, %eax
 5898 0c99 E8000000 		call	__printf_chk
 5898      00
 5899 0c9e BE000000 		movl	$.LC154, %esi
 5899      00
 5900 0ca3 BF010000 		movl	$1, %edi
 5900      00
 5901 0ca8 31C0     		xorl	%eax, %eax
 5902 0caa E8000000 		call	__printf_chk
 5902      00
 5903 0caf 488B4424 		movq	48(%rsp), %rax
 5903      30
 5904 0cb4 488DB424 		leaq	912(%rsp), %rsi
 5904      90030000 
 5905 0cbc 488DAC24 		leaq	152(%rsp), %rbp
 5905      98000000 
 5906 0cc4 488B4068 		movq	104(%rax), %rax
 5907 0cc8 488B38   		movq	(%rax), %rdi
 5908 0ccb E8000000 		call	read_table
 5908      00
 5909 0cd0 BE000000 		movl	$.LC155, %esi
 5909      00
 5910 0cd5 BF010000 		movl	$1, %edi
 5910      00
 5911 0cda 4189C5   		movl	%eax, %r13d
 5912 0cdd 31C0     		xorl	%eax, %eax
 5913 0cdf E8000000 		call	__printf_chk
 5913      00
 5914 0ce4 BF010000 		movl	$1, %edi
 5914      00
 5915 0ce9 E8000000 		call	sleep
 5915      00
 5916              	.L1001:
 5917 0cee 31C0     		xorl	%eax, %eax
 5918              	.L1002:
 5919 0cf0 C7840470 		movl	$-1, 368(%rsp,%rax)
 5919      010000FF 
 5919      FFFFFF
 5920 0cfb C7840480 		movl	$-1, 640(%rsp,%rax)
 5920      020000FF 
 5920      FFFFFF
 5921 0d06 4883C004 		addq	$4, %rax
 5922 0d0a 483D0401 		cmpq	$260, %rax
 5922      0000
 5923 0d10 75DE     		jne	.L1002
 5924 0d12 BE000000 		movl	$.LC156, %esi
 5924      00
 5925 0d17 BF010000 		movl	$1, %edi
 5925      00
 5926 0d1c 31C0     		xorl	%eax, %eax
 5927 0d1e E8000000 		call	__printf_chk
 5927      00
 5928 0d23 4531E4   		xorl	%r12d, %r12d
 5929 0d26 EB0E     		jmp	.L1011
 5930              	.L1003:
 5931 0d28 4183C401 		addl	$1, %r12d
 5932 0d2c 4183FC40 		cmpl	$64, %r12d
 5933 0d30 0F845F01 		je	.L1010
 5933      0000
 5934              	.L1011:
 5935 0d36 84DB     		testb	%bl, %bl
 5936 0d38 74EE     		je	.L1003
 5937 0d3a 488BBC24 		movq	128(%rsp), %rdi
 5937      80000000 
 5938 0d42 488D9424 		leaq	136(%rsp), %rdx
 5938      88000000 
 5939 0d4a 4889EE   		movq	%rbp, %rsi
 5940 0d4d E8000000 		call	flIsFPGARunning
 5940      00
 5941 0d52 85C0     		testl	%eax, %eax
 5942 0d54 0F8505F7 		jne	.L1027
 5942      FFFF
 5943 0d5a 80BC2498 		cmpb	$0, 152(%rsp)
 5943      00000000 
 5944 0d62 74C4     		je	.L1003
 5945 0d64 478D3424 		leal	(%r12,%r12), %r14d
 5946 0d68 BE000000 		movl	$.LC157, %esi
 5946      00
 5947 0d6d BF010000 		movl	$1, %edi
 5947      00
 5948 0d72 31C0     		xorl	%eax, %eax
 5949 0d74 4489F2   		movl	%r14d, %edx
 5950 0d77 E8000000 		call	__printf_chk
 5950      00
 5951 0d7c 488B9424 		movq	136(%rsp), %rdx
 5951      88000000 
 5952 0d84 488BB424 		movq	128(%rsp), %rsi
 5952      80000000 
 5953 0d8c B9200000 		movl	$32, %ecx
 5953      00
 5954 0d91 4489F7   		movl	%r14d, %edi
 5955 0d94 E8000000 		call	read_4byte_from_fpga
 5955      00
 5956 0d99 803866   		cmpb	$102, (%rax)
 5957 0d9c 4989C7   		movq	%rax, %r15
 5958 0d9f 0F846604 		je	.L1096
 5958      0000
 5959 0da5 4489F2   		movl	%r14d, %edx
 5960 0da8 BE000000 		movl	$.LC159, %esi
 5960      00
 5961 0dad BF010000 		movl	$1, %edi
 5961      00
 5962 0db2 31C0     		xorl	%eax, %eax
 5963 0db4 E8000000 		call	__printf_chk
 5963      00
 5964 0db9 4C89FA   		movq	%r15, %rdx
 5965 0dbc BE000000 		movl	$.LC160, %esi
 5965      00
 5966 0dc1 BF010000 		movl	$1, %edi
 5966      00
 5967 0dc6 31C0     		xorl	%eax, %eax
 5968 0dc8 E8000000 		call	__printf_chk
 5968      00
 5969 0dcd 458D4E01 		leal	1(%r14), %r9d
 5970 0dd1 BE000000 		movl	$.LC161, %esi
 5970      00
 5971 0dd6 BF010000 		movl	$1, %edi
 5971      00
 5972 0ddb 31C0     		xorl	%eax, %eax
 5973 0ddd 4489CA   		movl	%r9d, %edx
 5974 0de0 44890C24 		movl	%r9d, (%rsp)
 5975 0de4 E8000000 		call	__printf_chk
 5975      00
 5976 0de9 448B0C24 		movl	(%rsp), %r9d
 5977 0ded 488B8C24 		movq	136(%rsp), %rcx
 5977      88000000 
 5978 0df5 41B82000 		movl	$32, %r8d
 5978      0000
 5979 0dfb 488B9424 		movq	128(%rsp), %rdx
 5979      80000000 
 5980 0e03 4C89FE   		movq	%r15, %rsi
 5981 0e06 4489CF   		movl	%r9d, %edi
 5982 0e09 E8000000 		call	write_4byte_to_board
 5982      00
 5983 0e0e 3C66     		cmpb	$102, %al
 5984 0e10 0F840B04 		je	.L1097
 5984      0000
 5985 0e16 BE000000 		movl	$.LC163, %esi
 5985      00
 5986 0e1b BF010000 		movl	$1, %edi
 5986      00
 5987 0e20 31C0     		xorl	%eax, %eax
 5988 0e22 E8000000 		call	__printf_chk
 5988      00
 5989 0e27 BE000000 		movl	$.LC164, %esi
 5989      00
 5990 0e2c BF010000 		movl	$1, %edi
 5990      00
 5991 0e31 31C0     		xorl	%eax, %eax
 5992 0e33 E8000000 		call	__printf_chk
 5992      00
 5993 0e38 488B9424 		movq	136(%rsp), %rdx
 5993      88000000 
 5994 0e40 488BB424 		movq	128(%rsp), %rsi
 5994      80000000 
 5995 0e48 B9010000 		movl	$1, %ecx
 5995      00
 5996 0e4d 4489F7   		movl	%r14d, %edi
 5997 0e50 E8000000 		call	receive_ack
 5997      00
 5998 0e55 803866   		cmpb	$102, (%rax)
 5999 0e58 0F84EC03 		je	.L1098
 5999      0000
 6000 0e5e BE000000 		movl	$.LC168, %esi
 6000      00
 6001 0e63 BF010000 		movl	$1, %edi
 6001      00
 6002 0e68 31C0     		xorl	%eax, %eax
 6003 0e6a E8000000 		call	__printf_chk
 6003      00
 6004 0e6f 4963C4   		movslq	%r12d, %rax
 6005 0e72 488D8C24 		leaq	368(%rsp), %rcx
 6005      70010000 
 6006 0e7a 488D9424 		leaq	640(%rsp), %rdx
 6006      80020000 
 6007 0e82 48C1E002 		salq	$2, %rax
 6008 0e86 4C89FF   		movq	%r15, %rdi
 6009 0e89 488D3401 		leaq	(%rcx,%rax), %rsi
 6010 0e8d 4801C2   		addq	%rax, %rdx
 6011 0e90 E8000000 		call	get_coordinate
 6011      00
 6012              	.L1010:
 6013 0e95 31C0     		xorl	%eax, %eax
 6014 0e97 EB0A     		jmp	.L1014
 6015              	.L1012:
 6016 0e99 4883C001 		addq	$1, %rax
 6017 0e9d 4883F840 		cmpq	$64, %rax
 6018 0ea1 7418     		je	.L1013
 6019              	.L1014:
 6020 0ea3 83BC8470 		cmpl	$-1, 368(%rsp,%rax,4)
 6020      010000FF 
 6021 0eab 74EC     		je	.L1012
 6022 0ead 8D0400   		leal	(%rax,%rax), %eax
 6023 0eb0 89442468 		movl	%eax, 104(%rsp)
 6024 0eb4 83C001   		addl	$1, %eax
 6025 0eb7 8944246C 		movl	%eax, 108(%rsp)
 6026              	.L1013:
 6027 0ebb 448B7C24 		movl	104(%rsp), %r15d
 6027      68
 6028 0ec0 BE000000 		movl	$.LC169, %esi
 6028      00
 6029 0ec5 BF010000 		movl	$1, %edi
 6029      00
 6030 0eca 31C0     		xorl	%eax, %eax
 6031 0ecc 4589FC   		movl	%r15d, %r12d
 6032 0ecf 41D1FC   		sarl	%r12d
 6033 0ed2 4D63E4   		movslq	%r12d, %r12
 6034 0ed5 428B8CA4 		movl	640(%rsp,%r12,4), %ecx
 6034      80020000 
 6035 0edd 428B94A4 		movl	368(%rsp,%r12,4), %edx
 6035      70010000 
 6036 0ee5 E8000000 		call	__printf_chk
 6036      00
 6037 0eea BE000000 		movl	$.LC170, %esi
 6037      00
 6038 0eef BF010000 		movl	$1, %edi
 6038      00
 6039 0ef4 31C0     		xorl	%eax, %eax
 6040 0ef6 E8000000 		call	__printf_chk
 6040      00
 6041 0efb 488B9424 		movq	136(%rsp), %rdx
 6041      88000000 
 6042 0f03 488BB424 		movq	128(%rsp), %rsi
 6042      80000000 
 6043 0f0b B9200000 		movl	$32, %ecx
 6043      00
 6044 0f10 8B7C246C 		movl	108(%rsp), %edi
 6045 0f14 E8000000 		call	send_ack
 6045      00
 6046 0f19 428BB4A4 		movl	640(%rsp,%r12,4), %esi
 6046      80020000 
 6047 0f21 428BBCA4 		movl	368(%rsp,%r12,4), %edi
 6047      70010000 
 6048 0f29 488D9424 		leaq	912(%rsp), %rdx
 6048      90030000 
 6049 0f31 4489E9   		movl	%r13d, %ecx
 6050 0f34 E8000000 		call	func
 6050      00
 6051 0f39 BE000000 		movl	$.LC171, %esi
 6051      00
 6052 0f3e 4989C6   		movq	%rax, %r14
 6053 0f41 BF010000 		movl	$1, %edi
 6053      00
 6054 0f46 31C0     		xorl	%eax, %eax
 6055 0f48 E8000000 		call	__printf_chk
 6055      00
 6056 0f4d 4C89F2   		movq	%r14, %rdx
 6057 0f50 BE000000 		movl	$.LC172, %esi
 6057      00
 6058 0f55 BF010000 		movl	$1, %edi
 6058      00
 6059 0f5a 31C0     		xorl	%eax, %eax
 6060 0f5c E8000000 		call	__printf_chk
 6060      00
 6061 0f61 488B8C24 		movq	136(%rsp), %rcx
 6061      88000000 
 6062 0f69 488B9424 		movq	128(%rsp), %rdx
 6062      80000000 
 6063 0f71 41B82000 		movl	$32, %r8d
 6063      0000
 6064 0f77 8B7C246C 		movl	108(%rsp), %edi
 6065 0f7b 4C89F6   		movq	%r14, %rsi
 6066 0f7e E8000000 		call	write_4byte_to_board
 6066      00
 6067 0f83 BE000000 		movl	$.LC173, %esi
 6067      00
 6068 0f88 BF010000 		movl	$1, %edi
 6068      00
 6069 0f8d 31C0     		xorl	%eax, %eax
 6070 0f8f E8000000 		call	__printf_chk
 6070      00
 6071 0f94 BE000000 		movl	$.LC174, %esi
 6071      00
 6072 0f99 BF010000 		movl	$1, %edi
 6072      00
 6073 0f9e 31C0     		xorl	%eax, %eax
 6074 0fa0 E8000000 		call	__printf_chk
 6074      00
 6075 0fa5 488B9424 		movq	136(%rsp), %rdx
 6075      88000000 
 6076 0fad 488BB424 		movq	128(%rsp), %rsi
 6076      80000000 
 6077 0fb5 B9000100 		movl	$256, %ecx
 6077      00
 6078 0fba 4489FF   		movl	%r15d, %edi
 6079 0fbd E8000000 		call	receive_ack
 6079      00
 6080 0fc2 803866   		cmpb	$102, (%rax)
 6081 0fc5 0F842A02 		je	.L1017
 6081      0000
 6082 0fcb 448B7C24 		movl	108(%rsp), %r15d
 6082      6C
 6083 0fd0 488B8C24 		movq	136(%rsp), %rcx
 6083      88000000 
 6084 0fd8 498D7620 		leaq	32(%r14), %rsi
 6085 0fdc 488B9424 		movq	128(%rsp), %rdx
 6085      80000000 
 6086 0fe4 41B82000 		movl	$32, %r8d
 6086      0000
 6087 0fea 4489FF   		movl	%r15d, %edi
 6088 0fed E8000000 		call	write_4byte_to_board
 6088      00
 6089 0ff2 BE000000 		movl	$.LC176, %esi
 6089      00
 6090 0ff7 BF010000 		movl	$1, %edi
 6090      00
 6091 0ffc 31C0     		xorl	%eax, %eax
 6092 0ffe E8000000 		call	__printf_chk
 6092      00
 6093 1003 BE000000 		movl	$.LC174, %esi
 6093      00
 6094 1008 BF010000 		movl	$1, %edi
 6094      00
 6095 100d 31C0     		xorl	%eax, %eax
 6096 100f E8000000 		call	__printf_chk
 6096      00
 6097 1014 488B9424 		movq	136(%rsp), %rdx
 6097      88000000 
 6098 101c 488BB424 		movq	128(%rsp), %rsi
 6098      80000000 
 6099 1024 B9000100 		movl	$256, %ecx
 6099      00
 6100 1029 8B7C2468 		movl	104(%rsp), %edi
 6101 102d E8000000 		call	receive_ack
 6101      00
 6102 1032 803866   		cmpb	$102, (%rax)
 6103 1035 0F84BA01 		je	.L1017
 6103      0000
 6104 103b 488B9424 		movq	136(%rsp), %rdx
 6104      88000000 
 6105 1043 488BB424 		movq	128(%rsp), %rsi
 6105      80000000 
 6106 104b B9200000 		movl	$32, %ecx
 6106      00
 6107 1050 4489FF   		movl	%r15d, %edi
 6108 1053 E8000000 		call	send_ack
 6108      00
 6109 1058 BE000000 		movl	$.LC177, %esi
 6109      00
 6110 105d BF010000 		movl	$1, %edi
 6110      00
 6111 1062 31C0     		xorl	%eax, %eax
 6112 1064 E8000000 		call	__printf_chk
 6112      00
 6113 1069 BE000000 		movl	$.LC178, %esi
 6113      00
 6114 106e BF010000 		movl	$1, %edi
 6114      00
 6115 1073 31C0     		xorl	%eax, %eax
 6116 1075 E8000000 		call	__printf_chk
 6116      00
 6117 107a BF160000 		movl	$22, %edi
 6117      00
 6118 107f E8000000 		call	sleep
 6118      00
 6119 1084 E8000000 		call	clock
 6119      00
 6120 1089 BE000000 		movl	$.LC179, %esi
 6120      00
 6121 108e 4989C6   		movq	%rax, %r14
 6122 1091 BF010000 		movl	$1, %edi
 6122      00
 6123 1096 31C0     		xorl	%eax, %eax
 6124 1098 E8000000 		call	__printf_chk
 6124      00
 6125 109d 660FEFDB 		pxor	%xmm3, %xmm3
 6126 10a1 F2490F2A 		cvtsi2sdq	%r14, %xmm3
 6126      DE
 6127 10a6 F20F111C 		movsd	%xmm3, (%rsp)
 6127      24
 6128              	.L1018:
 6129 10ab E8000000 		call	clock
 6129      00
 6130 10b0 660FEFC0 		pxor	%xmm0, %xmm0
 6131 10b4 F20F1015 		movsd	.LC185(%rip), %xmm2
 6131      00000000 
 6132 10bc F2480F2A 		cvtsi2sdq	%rax, %xmm0
 6132      C0
 6133 10c1 F20F5C04 		subsd	(%rsp), %xmm0
 6133      24
 6134 10c6 F20F5905 		mulsd	.LC184(%rip), %xmm0
 6134      00000000 
 6135 10ce F20F5E05 		divsd	.LC4(%rip), %xmm0
 6135      00000000 
 6136 10d6 660F2ED0 		ucomisd	%xmm0, %xmm2
 6137 10da 0F865701 		jbe	.L1099
 6137      0000
 6138 10e0 488B9424 		movq	136(%rsp), %rdx
 6138      88000000 
 6139 10e8 488BB424 		movq	128(%rsp), %rsi
 6139      80000000 
 6140 10f0 B9200000 		movl	$32, %ecx
 6140      00
 6141 10f5 8B7C2468 		movl	104(%rsp), %edi
 6142 10f9 E8000000 		call	read_1byte_from_fpgalink
 6142      00
 6143 10fe 803866   		cmpb	$102, (%rax)
 6144 1101 4989C6   		movq	%rax, %r14
 6145 1104 74A5     		je	.L1018
 6146 1106 BE000000 		movl	$.LC180, %esi
 6146      00
 6147 110b BF010000 		movl	$1, %edi
 6147      00
 6148 1110 31C0     		xorl	%eax, %eax
 6149 1112 E8000000 		call	__printf_chk
 6149      00
 6150 1117 4C89F2   		movq	%r14, %rdx
 6151 111a BE000000 		movl	$.LC181, %esi
 6151      00
 6152 111f BF010000 		movl	$1, %edi
 6152      00
 6153 1124 31C0     		xorl	%eax, %eax
 6154 1126 E8000000 		call	__printf_chk
 6154      00
 6155 112b 31D2     		xorl	%edx, %edx
 6156 112d 41807E07 		cmpb	$49, 7(%r14)
 6156      31
 6157 1132 428B8CA4 		movl	368(%rsp,%r12,4), %ecx
 6157      70010000 
 6158 113a 428BB4A4 		movl	640(%rsp,%r12,4), %esi
 6158      80020000 
 6159 1142 0F94C2   		sete	%dl
 6160 1145 31C0     		xorl	%eax, %eax
 6161 1147 41807E06 		cmpb	$49, 6(%r14)
 6161      31
 6162 114c 0F94C0   		sete	%al
 6163 114f 8D1450   		leal	(%rax,%rdx,2), %edx
 6164 1152 31C0     		xorl	%eax, %eax
 6165 1154 41807E05 		cmpb	$49, 5(%r14)
 6165      31
 6166 1159 0F94C0   		sete	%al
 6167 115c 8D3C50   		leal	(%rax,%rdx,2), %edi
 6168 115f 488D9424 		leaq	912(%rsp), %rdx
 6168      90030000 
 6169 1167 31C0     		xorl	%eax, %eax
 6170 1169 EB07     		jmp	.L1019
 6171              	.L1020:
 6172 116b 83C001   		addl	$1, %eax
 6173 116e 4883C214 		addq	$20, %rdx
 6174              	.L1019:
 6175 1172 4439E8   		cmpl	%r13d, %eax
 6176 1175 7D4D     		jge	.L1021
 6177 1177 3B0A     		cmpl	(%rdx), %ecx
 6178 1179 75F0     		jne	.L1020
 6179 117b 3B7204   		cmpl	4(%rdx), %esi
 6180 117e 75EB     		jne	.L1020
 6181 1180 3B7A08   		cmpl	8(%rdx), %edi
 6182 1183 75E6     		jne	.L1020
 6183 1185 410FBE56 		movsbl	3(%r14), %edx
 6183      03
 6184 118a 4898     		cltq
 6185 118c 31C9     		xorl	%ecx, %ecx
 6186 118e 486BC014 		imulq	$20, %rax, %rax
 6187 1192 83EA30   		subl	$48, %edx
 6188 1195 8994049C 		movl	%edx, 924(%rsp,%rax)
 6188      030000
 6189 119c 41807E02 		cmpb	$49, 2(%r14)
 6189      31
 6190 11a1 0F94C1   		sete	%cl
 6191 11a4 31D2     		xorl	%edx, %edx
 6192 11a6 41807E01 		cmpb	$49, 1(%r14)
 6192      31
 6193 11ab 0F94C2   		sete	%dl
 6194 11ae 8D0C4A   		leal	(%rdx,%rcx,2), %ecx
 6195 11b1 31D2     		xorl	%edx, %edx
 6196 11b3 41803E31 		cmpb	$49, (%r14)
 6197 11b7 0F94C2   		sete	%dl
 6198 11ba 8D144A   		leal	(%rdx,%rcx,2), %edx
 6199 11bd 899404A0 		movl	%edx, 928(%rsp,%rax)
 6199      030000
 6200              	.L1021:
 6201 11c4 BE000000 		movl	$.LC182, %esi
 6201      00
 6202 11c9 BF010000 		movl	$1, %edi
 6202      00
 6203 11ce 31C0     		xorl	%eax, %eax
 6204 11d0 E8000000 		call	__printf_chk
 6204      00
 6205 11d5 BE000000 		movl	$.LC183, %esi
 6205      00
 6206 11da BF010000 		movl	$1, %edi
 6206      00
 6207 11df 31C0     		xorl	%eax, %eax
 6208 11e1 E8000000 		call	__printf_chk
 6208      00
 6209              	.L1023:
 6210 11e6 BF1E0000 		movl	$30, %edi
 6210      00
 6211 11eb E8000000 		call	sleep
 6211      00
 6212 11f0 E9F9FAFF 		jmp	.L1001
 6212      FF
 6213              	.L1017:
 6214 11f5 BE000000 		movl	$.LC175, %esi
 6214      00
 6215 11fa BF010000 		movl	$1, %edi
 6215      00
 6216 11ff 31C0     		xorl	%eax, %eax
 6217 1201 E8000000 		call	__printf_chk
 6217      00
 6218 1206 E9E3FAFF 		jmp	.L1001
 6218      FF
 6219              	.L1096:
 6220 120b BE000000 		movl	$.LC158, %esi
 6220      00
 6221 1210 BF010000 		movl	$1, %edi
 6221      00
 6222 1215 31C0     		xorl	%eax, %eax
 6223 1217 E8000000 		call	__printf_chk
 6223      00
 6224 121c E907FBFF 		jmp	.L1003
 6224      FF
 6225              	.L1097:
 6226 1221 BE000000 		movl	$.LC162, %esi
 6226      00
 6227 1226 BF010000 		movl	$1, %edi
 6227      00
 6228 122b 31C0     		xorl	%eax, %eax
 6229 122d E8000000 		call	__printf_chk
 6229      00
 6230 1232 E9F1FAFF 		jmp	.L1003
 6230      FF
 6231              	.L1099:
 6232 1237 BE000000 		movl	$.LC191, %esi
 6232      00
 6233 123c BF010000 		movl	$1, %edi
 6233      00
 6234 1241 31C0     		xorl	%eax, %eax
 6235 1243 E8000000 		call	__printf_chk
 6235      00
 6236 1248 EB9C     		jmp	.L1023
 6237              	.L1098:
 6238 124a BE000000 		movl	$.LC165, %esi
 6238      00
 6239 124f BF010000 		movl	$1, %edi
 6239      00
 6240 1254 31C0     		xorl	%eax, %eax
 6241 1256 E8000000 		call	__printf_chk
 6241      00
 6242 125b BF050000 		movl	$5, %edi
 6242      00
 6243 1260 E8000000 		call	sleep
 6243      00
 6244 1265 BE000000 		movl	$.LC166, %esi
 6244      00
 6245 126a BF010000 		movl	$1, %edi
 6245      00
 6246 126f 31C0     		xorl	%eax, %eax
 6247 1271 E8000000 		call	__printf_chk
 6247      00
 6248 1276 488BB424 		movq	128(%rsp), %rsi
 6248      80000000 
 6249 127e 488B9424 		movq	136(%rsp), %rdx
 6249      88000000 
 6250 1286 4489F7   		movl	%r14d, %edi
 6251 1289 B9010000 		movl	$1, %ecx
 6251      00
 6252 128e E8000000 		call	receive_ack
 6252      00
 6253 1293 BE000000 		movl	$.LC167, %esi
 6253      00
 6254 1298 C60066   		movb	$102, (%rax)
 6255 129b BF010000 		movl	$1, %edi
 6255      00
 6256 12a0 31C0     		xorl	%eax, %eax
 6257 12a2 E8000000 		call	__printf_chk
 6257      00
 6258 12a7 E97CFAFF 		jmp	.L1003
 6258      FF
 6259              	.L1095:
 6260 12ac 31C0     		xorl	%eax, %eax
 6261 12ae BE000000 		movl	$.LC186, %esi
 6261      00
 6262 12b3 BF010000 		movl	$1, %edi
 6262      00
 6263 12b8 E8000000 		call	__printf_chk
 6263      00
 6264 12bd 84DB     		testb	%bl, %bl
 6265 12bf 0F847402 		je	.L1026
 6265      0000
 6266 12c5 488BBC24 		movq	128(%rsp), %rdi
 6266      80000000 
 6267 12cd 488D9424 		leaq	136(%rsp), %rdx
 6267      88000000 
 6268 12d5 4489F6   		movl	%r14d, %esi
 6269 12d8 E8000000 		call	flSelectConduit
 6269      00
 6270 12dd 85C0     		testl	%eax, %eax
 6271 12df 0F857AF1 		jne	.L1027
 6271      FFFF
 6272 12e5 488BBC24 		movq	128(%rsp), %rdi
 6272      80000000 
 6273 12ed 488D9424 		leaq	136(%rsp), %rdx
 6273      88000000 
 6274 12f5 488DB424 		leaq	152(%rsp), %rsi
 6274      98000000 
 6275 12fd E8000000 		call	flIsFPGARunning
 6275      00
 6276 1302 85C0     		testl	%eax, %eax
 6277 1304 0F8555F1 		jne	.L1027
 6277      FFFF
 6278 130a 80BC2498 		cmpb	$0, 152(%rsp)
 6278      00000000 
 6279 1312 754D     		jne	.L1061
 6280 1314 E9130200 		jmp	.L1071
 6280      00
 6281              	.L1100:
 6282 1319 0FB600   		movzbl	(%rax), %eax
 6283 131c 84C0     		testb	%al, %al
 6284 131e 7441     		je	.L1061
 6285 1320 3C71     		cmpb	$113, %al
 6286 1322 0F8477F5 		je	.L1078
 6286      FFFF
 6287 1328 4889DF   		movq	%rbx, %rdi
 6288 132b E8000000 		call	add_history
 6288      00
 6289 1330 488BBC24 		movq	128(%rsp), %rdi
 6289      80000000 
 6290 1338 488D9424 		leaq	136(%rsp), %rdx
 6290      88000000 
 6291 1340 4889DE   		movq	%rbx, %rsi
 6292 1343 E8000000 		call	parseLine
 6292      00
 6293 1348 85C0     		testl	%eax, %eax
 6294 134a 0F85D501 		jne	.L1075
 6294      0000
 6295 1350 4889DF   		movq	%rbx, %rdi
 6296 1353 E8000000 		call	free
 6296      00
 6297 1358 803B71   		cmpb	$113, (%rbx)
 6298 135b 0F843EF5 		je	.L1078
 6298      FFFF
 6299              	.L1061:
 6300 1361 BF000000 		movl	$.LC187, %edi
 6300      00
 6301 1366 E8000000 		call	readline
 6301      00
 6302 136b 4885C0   		testq	%rax, %rax
 6303 136e 4889C3   		movq	%rax, %rbx
 6304 1371 75A6     		jne	.L1100
 6305 1373 31ED     		xorl	%ebp, %ebp
 6306 1375 E9A1EFFF 		jmp	.L951
 6306      FF
 6307              	.L989:
 6308 137a 4C89E9   		movq	%r13, %rcx
 6309 137d BA000000 		movl	$.LC148, %edx
 6309      00
 6310 1382 E9A6F0FF 		jmp	.L1077
 6310      FF
 6311              	.L981:
 6312 1387 BE000000 		movl	$.LC142, %esi
 6312      00
 6313 138c BF010000 		movl	$1, %edi
 6313      00
 6314 1391 31C0     		xorl	%eax, %eax
 6315 1393 E8000000 		call	__printf_chk
 6315      00
 6316 1398 E9DAF3FF 		jmp	.L984
 6316      FF
 6317              	.L995:
 6318 139d 4883C101 		addq	$1, %rcx
 6319 13a1 4889C2   		movq	%rax, %rdx
 6320 13a4 BE000000 		movl	$.LC150, %esi
 6320      00
 6321 13a9 BF010000 		movl	$1, %edi
 6321      00
 6322 13ae 31C0     		xorl	%eax, %eax
 6323 13b0 48898C24 		movq	%rcx, 144(%rsp)
 6323      90000000 
 6324 13b8 E8000000 		call	__printf_chk
 6324      00
 6325 13bd 488BBC24 		movq	144(%rsp), %rdi
 6325      90000000 
 6326 13c5 BE000000 		movl	$.LC2, %esi
 6326      00
 6327 13ca E8000000 		call	fopen
 6327      00
 6328 13cf 4885C0   		testq	%rax, %rax
 6329 13d2 4989C4   		movq	%rax, %r12
 6330 13d5 0F846B01 		je	.L1038
 6330      0000
 6331 13db E8000000 		call	sigRegisterHandler
 6331      00
 6332 13e0 488BBC24 		movq	128(%rsp), %rdi
 6332      80000000 
 6333 13e8 488D9424 		leaq	136(%rsp), %rdx
 6333      88000000 
 6334 13f0 4489F6   		movl	%r14d, %esi
 6335 13f3 E8000000 		call	flSelectConduit
 6335      00
 6336 13f8 85C0     		testl	%eax, %eax
 6337 13fa 0F8509F7 		jne	.L998
 6337      FFFF
 6338 1400 488BBC24 		movq	128(%rsp), %rdi
 6338      80000000 
 6339 1408 400FB6ED 		movzbl	%bpl, %ebp
 6340 140c 4C8D8424 		leaq	136(%rsp), %r8
 6340      88000000 
 6341 1414 31C9     		xorl	%ecx, %ecx
 6342 1416 BA005800 		movl	$22528, %edx
 6342      00
 6343 141b 89EE     		movl	%ebp, %esi
 6344 141d E8000000 		call	flReadChannelAsyncSubmit
 6344      00
 6345 1422 85C0     		testl	%eax, %eax
 6346 1424 0F85DFF6 		jne	.L998
 6346      FFFF
 6347              	.L999:
 6348 142a 488BBC24 		movq	128(%rsp), %rdi
 6348      80000000 
 6349 1432 4C8D8424 		leaq	136(%rsp), %r8
 6349      88000000 
 6350 143a 31C9     		xorl	%ecx, %ecx
 6351 143c BA005800 		movl	$22528, %edx
 6351      00
 6352 1441 89EE     		movl	%ebp, %esi
 6353 1443 E8000000 		call	flReadChannelAsyncSubmit
 6353      00
 6354 1448 85C0     		testl	%eax, %eax
 6355 144a 0F85B9F6 		jne	.L998
 6355      FFFF
 6356 1450 488D4C24 		leaq	124(%rsp), %rcx
 6356      7C
 6357 1455 488BBC24 		movq	128(%rsp), %rdi
 6357      80000000 
 6358 145d 4C8D8424 		leaq	136(%rsp), %r8
 6358      88000000 
 6359 1465 488DB424 		leaq	152(%rsp), %rsi
 6359      98000000 
 6360 146d 4889CA   		movq	%rcx, %rdx
 6361 1470 E8000000 		call	flReadChannelAsyncAwait
 6361      00
 6362 1475 85C0     		testl	%eax, %eax
 6363 1477 0F858CF6 		jne	.L998
 6363      FFFF
 6364 147d 8B54247C 		movl	124(%rsp), %edx
 6365 1481 488BBC24 		movq	152(%rsp), %rdi
 6365      98000000 
 6366 1489 4C89E1   		movq	%r12, %rcx
 6367 148c BE010000 		movl	$1, %esi
 6367      00
 6368 1491 E8000000 		call	fwrite
 6368      00
 6369 1496 BE000000 		movl	$.LC125, %esi
 6369      00
 6370 149b BF010000 		movl	$1, %edi
 6370      00
 6371 14a0 31C0     		xorl	%eax, %eax
 6372 14a2 E8000000 		call	__printf_chk
 6372      00
 6373 14a7 E8000000 		call	sigIsRaised
 6373      00
 6374 14ac 84C0     		testb	%al, %al
 6375 14ae 0F8476FF 		je	.L999
 6375      FFFF
 6376 14b4 BE000000 		movl	$.LC151, %esi
 6376      00
 6377 14b9 BF010000 		movl	$1, %edi
 6377      00
 6378 14be 31C0     		xorl	%eax, %eax
 6379 14c0 E8000000 		call	__printf_chk
 6379      00
 6380 14c5 488D4C24 		leaq	124(%rsp), %rcx
 6380      7C
 6381 14ca 488BBC24 		movq	128(%rsp), %rdi
 6381      80000000 
 6382 14d2 4C8D8424 		leaq	136(%rsp), %r8
 6382      88000000 
 6383 14da 488DB424 		leaq	152(%rsp), %rsi
 6383      98000000 
 6384 14e2 4889CA   		movq	%rcx, %rdx
 6385 14e5 E8000000 		call	flReadChannelAsyncAwait
 6385      00
 6386 14ea 85C0     		testl	%eax, %eax
 6387 14ec 0F8517F6 		jne	.L998
 6387      FFFF
 6388 14f2 8B54247C 		movl	124(%rsp), %edx
 6389 14f6 488BBC24 		movq	152(%rsp), %rdi
 6389      98000000 
 6390 14fe 4C89E1   		movq	%r12, %rcx
 6391 1501 BE010000 		movl	$1, %esi
 6391      00
 6392 1506 E8000000 		call	fwrite
 6392      00
 6393 150b 4C89E7   		movq	%r12, %rdi
 6394 150e E8000000 		call	fclose
 6394      00
 6395 1513 E967F3FF 		jmp	.L994
 6395      FF
 6396              	.L991:
 6397 1518 4C89E9   		movq	%r13, %rcx
 6398 151b BA000000 		movl	$.LC147, %edx
 6398      00
 6399 1520 E9FCF2FF 		jmp	.L1079
 6399      FF
 6400              	.L1075:
 6401 1525 89C5     		movl	%eax, %ebp
 6402 1527 E9EFEDFF 		jmp	.L951
 6402      FF
 6403              	.L1071:
 6404 152c 4C89E9   		movq	%r13, %rcx
 6405 152f BA000000 		movl	$.LC188, %edx
 6405      00
 6406 1534 E9F4EEFF 		jmp	.L1077
 6406      FF
 6407              	.L1026:
 6408 1539 4C89E9   		movq	%r13, %rcx
 6409 153c BA000000 		movl	$.LC189, %edx
 6409      00
 6410 1541 E9E7EEFF 		jmp	.L1077
 6410      FF
 6411              	.L1038:
 6412 1546 BD0B0000 		movl	$11, %ebp
 6412      00
 6413 154b 31DB     		xorl	%ebx, %ebx
 6414 154d E9C9EDFF 		jmp	.L951
 6414      FF
 6415              		.cfi_endproc
 6416              	.LFE83:
 6418              		.section	.text.unlikely
 6419              	.LCOLDE192:
 6420              		.section	.text.startup
 6421              	.LHOTE192:
 6422              		.globl	mm
 6423              		.section	.rodata.str1.1
 6424              	.LC193:
 6425 03cb 30313233 		.string	"0123456789abcdef"
 6425      34353637 
 6425      38396162 
 6425      63646566 
 6425      00
 6426              		.data
 6427              		.align 8
 6430              	mm:
 6431 0000 00000000 		.quad	.LC193
 6431      00000000 
 6432              		.section	.rodata.str1.1
 6433              	.LC194:
 6434 03dc 30303031 		.string	"0001"
 6434      00
 6435              	.LC195:
 6436 03e1 30303130 		.string	"0010"
 6436      00
 6437              	.LC196:
 6438 03e6 30303131 		.string	"0011"
 6438      00
 6439              	.LC197:
 6440 03eb 30313030 		.string	"0100"
 6440      00
 6441              	.LC198:
 6442 03f0 30313031 		.string	"0101"
 6442      00
 6443              	.LC199:
 6444 03f5 30313130 		.string	"0110"
 6444      00
 6445              	.LC200:
 6446 03fa 30313131 		.string	"0111"
 6446      00
 6447              	.LC201:
 6448 03ff 31303030 		.string	"1000"
 6448      00
 6449              	.LC202:
 6450 0404 31303031 		.string	"1001"
 6450      00
 6451              	.LC203:
 6452 0409 58585858 		.string	"XXXX"
 6452      00
 6453              	.LC204:
 6454 040e 31303130 		.string	"1010"
 6454      00
 6455              	.LC205:
 6456 0413 31303131 		.string	"1011"
 6456      00
 6457              	.LC206:
 6458 0418 31313030 		.string	"1100"
 6458      00
 6459              	.LC207:
 6460 041d 31313031 		.string	"1101"
 6460      00
 6461              	.LC208:
 6462 0422 31313130 		.string	"1110"
 6462      00
 6463              		.section	.rodata
 6464              		.align 32
 6467              	nibbles:
 6468 0000 00000000 		.quad	.LC47
 6468      00000000 
 6469 0008 00000000 		.quad	.LC194
 6469      00000000 
 6470 0010 00000000 		.quad	.LC195
 6470      00000000 
 6471 0018 00000000 		.quad	.LC196
 6471      00000000 
 6472 0020 00000000 		.quad	.LC197
 6472      00000000 
 6473 0028 00000000 		.quad	.LC198
 6473      00000000 
 6474 0030 00000000 		.quad	.LC199
 6474      00000000 
 6475 0038 00000000 		.quad	.LC200
 6475      00000000 
 6476 0040 00000000 		.quad	.LC201
 6476      00000000 
 6477 0048 00000000 		.quad	.LC202
 6477      00000000 
 6478 0050 00000000 		.quad	.LC203
 6478      00000000 
 6479 0058 00000000 		.quad	.LC203
 6479      00000000 
 6480 0060 00000000 		.quad	.LC203
 6480      00000000 
 6481 0068 00000000 		.quad	.LC203
 6481      00000000 
 6482 0070 00000000 		.quad	.LC203
 6482      00000000 
 6483 0078 00000000 		.quad	.LC203
 6483      00000000 
 6484 0080 00000000 		.quad	.LC203
 6484      00000000 
 6485 0088 00000000 		.quad	.LC204
 6485      00000000 
 6486 0090 00000000 		.quad	.LC205
 6486      00000000 
 6487 0098 00000000 		.quad	.LC206
 6487      00000000 
 6488 00a0 00000000 		.quad	.LC207
 6488      00000000 
 6489 00a8 00000000 		.quad	.LC208
 6489      00000000 
 6490 00b0 00000000 		.quad	.LC49
 6490      00000000 
 6491              		.comm	out,1,1
 6492              		.section	.rodata.str1.1
 6493              	.LC209:
 6494 0427 556E7061 		.string	"Unparseable hex number"
 6494      72736561 
 6494      626C6520 
 6494      68657820 
 6494      6E756D62 
 6495              	.LC210:
 6496 043e 4368616E 		.string	"Channel out of range"
 6496      6E656C20 
 6496      6F757420 
 6496      6F662072 
 6496      616E6765 
 6497              	.LC211:
 6498 0453 436F6E64 		.string	"Conduit out of range"
 6498      75697420 
 6498      6F757420 
 6498      6F662072 
 6498      616E6765 
 6499              	.LC212:
 6500 0468 496C6C65 		.string	"Illegal character"
 6500      67616C20 
 6500      63686172 
 6500      61637465 
 6500      7200
 6501              	.LC213:
 6502 047a 556E7465 		.string	"Unterminated string"
 6502      726D696E 
 6502      61746564 
 6502      20737472 
 6502      696E6700 
 6503              	.LC214:
 6504 048e 4E6F206D 		.string	"No memory"
 6504      656D6F72 
 6504      7900
 6505              	.LC215:
 6506 0498 456D7074 		.string	"Empty string"
 6506      79207374 
 6506      72696E67 
 6506      00
 6507              	.LC216:
 6508 04a5 4F646420 		.string	"Odd number of digits"
 6508      6E756D62 
 6508      6572206F 
 6508      66206469 
 6508      67697473 
 6509              	.LC217:
 6510 04ba 43616E6E 		.string	"Cannot load file"
 6510      6F74206C 
 6510      6F616420 
 6510      66696C65 
 6510      00
 6511              	.LC218:
 6512 04cb 43616E6E 		.string	"Cannot save file"
 6512      6F742073 
 6512      61766520 
 6512      66696C65 
 6512      00
 6513              	.LC219:
 6514 04dc 42616420 		.string	"Bad arguments"
 6514      61726775 
 6514      6D656E74 
 6514      7300
 6515              		.section	.rodata
 6516 00b8 00000000 		.align 32
 6516      00000000 
 6519              	errMessages:
 6520 00c0 00000000 		.quad	0
 6520      00000000 
 6521 00c8 00000000 		.quad	0
 6521      00000000 
 6522 00d0 00000000 		.quad	.LC209
 6522      00000000 
 6523 00d8 00000000 		.quad	.LC210
 6523      00000000 
 6524 00e0 00000000 		.quad	.LC211
 6524      00000000 
 6525 00e8 00000000 		.quad	.LC212
 6525      00000000 
 6526 00f0 00000000 		.quad	.LC213
 6526      00000000 
 6527 00f8 00000000 		.quad	.LC214
 6527      00000000 
 6528 0100 00000000 		.quad	.LC215
 6528      00000000 
 6529 0108 00000000 		.quad	.LC216
 6529      00000000 
 6530 0110 00000000 		.quad	.LC217
 6530      00000000 
 6531 0118 00000000 		.quad	.LC218
 6531      00000000 
 6532 0120 00000000 		.quad	.LC219
 6532      00000000 
 6533              		.local	enableBenchmarking
 6534              		.comm	enableBenchmarking,1,1
 6535              		.local	ptr
 6536              		.comm	ptr,8,8
 6537              		.comm	fd,4,4
 6538              		.globl	portname
 6539              		.section	.rodata.str1.1
 6540              	.LC220:
 6541 04ea 2F646576 		.string	"/dev/ttyXRUSB0"
 6541      2F747479 
 6541      58525553 
 6541      423000
 6542              		.data
 6543              		.align 8
 6546              	portname:
 6547 0008 00000000 		.quad	.LC220
 6547      00000000 
 6548              		.globl	ack2
 6549              		.section	.rodata.str1.8
 6550 1036 0000     		.align 8
 6551              	.LC221:
 6552 1038 30303030 		.string	"00001111000011110000111100001111"
 6552      31313131 
 6552      30303030 
 6552      31313131 
 6552      30303030 
 6553              		.data
 6554              		.align 8
 6557              	ack2:
 6558 0010 00000000 		.quad	.LC221
 6558      00000000 
 6559              		.globl	ack1
 6560              		.section	.rodata.str1.8
 6561 1059 00000000 		.align 8
 6561      000000
 6562              	.LC222:
 6563 1060 31313131 		.string	"11110000111100001111000011110000"
 6563      30303030 
 6563      31313131 
 6563      30303030 
 6563      31313131 
 6564              		.data
 6565              		.align 8
 6568              	ack1:
 6569 0018 00000000 		.quad	.LC222
 6569      00000000 
 6570              		.comm	line1,100,32
 6571              		.globl	key
 6572              		.section	.rodata.str1.8
 6573 1081 00000000 		.align 8
 6573      000000
 6574              	.LC223:
 6575 1088 31313030 		.string	"11001100110011001100110011000001"
 6575      31313030 
 6575      31313030 
 6575      31313030 
 6575      31313030 
 6576              		.data
 6577              		.align 8
 6580              	key:
 6581 0020 00000000 		.quad	.LC223
 6581      00000000 
 6582              		.section	.rodata.cst8,"aM",@progbits,8
 6583              		.align 8
 6584              	.LC4:
 6585 0000 00000000 		.long	0
 6586 0004 80842E41 		.long	1093567616
 6587              		.align 8
 6588              	.LC5:
 6589 0008 00000000 		.long	0
 6590 000c 00003041 		.long	1093664768
 6591              		.align 8
 6592              	.LC14:
 6593 0010 00000000 		.long	0
 6594 0014 00408F40 		.long	1083129856
 6595              		.section	.rodata.cst16,"aM",@progbits,16
 6596              		.align 16
 6597              	.LC44:
 6598 0000 30       		.byte	48
 6599 0001 30       		.byte	48
 6600 0002 30       		.byte	48
 6601 0003 30       		.byte	48
 6602 0004 30       		.byte	48
 6603 0005 30       		.byte	48
 6604 0006 30       		.byte	48
 6605 0007 30       		.byte	48
 6606 0008 30       		.byte	48
 6607 0009 30       		.byte	48
 6608 000a 30       		.byte	48
 6609 000b 30       		.byte	48
 6610 000c 30       		.byte	48
 6611 000d 30       		.byte	48
 6612 000e 30       		.byte	48
 6613 000f 30       		.byte	48
 6614              		.align 16
 6615              	.LC45:
 6616 0010 01       		.byte	1
 6617 0011 01       		.byte	1
 6618 0012 01       		.byte	1
 6619 0013 01       		.byte	1
 6620 0014 01       		.byte	1
 6621 0015 01       		.byte	1
 6622 0016 01       		.byte	1
 6623 0017 01       		.byte	1
 6624 0018 01       		.byte	1
 6625 0019 01       		.byte	1
 6626 001a 01       		.byte	1
 6627 001b 01       		.byte	1
 6628 001c 01       		.byte	1
 6629 001d 01       		.byte	1
 6630 001e 01       		.byte	1
 6631 001f 01       		.byte	1
 6632              		.align 16
 6633              	.LC48:
 6634 0020 31       		.byte	49
 6635 0021 31       		.byte	49
 6636 0022 31       		.byte	49
 6637 0023 31       		.byte	49
 6638 0024 31       		.byte	49
 6639 0025 31       		.byte	49
 6640 0026 31       		.byte	49
 6641 0027 31       		.byte	49
 6642 0028 31       		.byte	49
 6643 0029 31       		.byte	49
 6644 002a 31       		.byte	49
 6645 002b 31       		.byte	49
 6646 002c 31       		.byte	49
 6647 002d 31       		.byte	49
 6648 002e 31       		.byte	49
 6649 002f 31       		.byte	49
 6650              		.section	.rodata.cst8
 6651              		.align 8
 6652              	.LC184:
 6653 0018 00000000 		.long	0
 6654 001c 00005940 		.long	1079574528
 6655              		.align 8
 6656              	.LC185:
 6657 0020 00000000 		.long	0
 6658 0024 00003440 		.long	1077149696
 6659              		.ident	"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609"
 6660              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccRvi0th.s:9      .text.unlikely:0000000000000000 doWrite
     /tmp/ccRvi0th.s:145    .text.unlikely:00000000000000ff parseLine
     /tmp/ccRvi0th.s:6536   .bss:0000000000000008 ptr
                             .bss:0000000000000000 enableBenchmarking
     /tmp/ccRvi0th.s:6519   .rodata:00000000000000c0 errMessages
                            *COM*:0000000000000001 out
     /tmp/ccRvi0th.s:960    .text:0000000000000000 timediff
     /tmp/ccRvi0th.s:997    .text:0000000000000030 save_to_file
     /tmp/ccRvi0th.s:1083   .text:00000000000000d0 set_interface_attribs
     /tmp/ccRvi0th.s:1202   .text:00000000000001e0 set_blocking
     /tmp/ccRvi0th.s:1297   .text:00000000000002a0 read_one_byte_from_uart
                            *COM*:0000000000000004 fd
     /tmp/ccRvi0th.s:6546   .data:0000000000000008 portname
     /tmp/ccRvi0th.s:1448   .text:0000000000000420 write_one_byte_to_uart
     /tmp/ccRvi0th.s:1499   .text:0000000000000490 read_table
     /tmp/ccRvi0th.s:1600   .text:0000000000000540 boolToHex
     /tmp/ccRvi0th.s:6430   .data:0000000000000000 mm
     /tmp/ccRvi0th.s:1686   .text:0000000000000600 get_coordinate
     /tmp/ccRvi0th.s:1772   .text:00000000000006a0 func
     /tmp/ccRvi0th.s:2019   .text:0000000000000980 xor
     /tmp/ccRvi0th.s:2040   .text:0000000000000990 and
     /tmp/ccRvi0th.s:2068   .text:00000000000009b0 decrypt
     /tmp/ccRvi0th.s:2836   .text:00000000000013d0 encrypt
     /tmp/ccRvi0th.s:3474   .text:0000000000001c50 read_byte
     /tmp/ccRvi0th.s:3554   .text:0000000000001d00 write_4byte_to_board
     /tmp/ccRvi0th.s:6580   .data:0000000000000020 key
     /tmp/ccRvi0th.s:3786   .text:0000000000001fb0 read_4byte_from_fpga
     /tmp/ccRvi0th.s:4053   .text:0000000000002250 read_1byte_from_fpgalink
     /tmp/ccRvi0th.s:4341   .text:0000000000002510 receive_ack
     /tmp/ccRvi0th.s:6568   .data:0000000000000018 ack1
     /tmp/ccRvi0th.s:4631   .text:00000000000027f0 send_ack
     /tmp/ccRvi0th.s:6557   .data:0000000000000010 ack2
     /tmp/ccRvi0th.s:4750   .text:0000000000002920 wtt
     /tmp/ccRvi0th.s:5156   .text.startup:0000000000000000 main
     /tmp/ccRvi0th.s:6467   .rodata:0000000000000000 nibbles
                            *COM*:0000000000000064 line1
     /tmp/ccRvi0th.s:6584   .rodata.cst8:0000000000000000 .LC4
     /tmp/ccRvi0th.s:6592   .rodata.cst8:0000000000000010 .LC14
     /tmp/ccRvi0th.s:6597   .rodata.cst16:0000000000000000 .LC44
     /tmp/ccRvi0th.s:6615   .rodata.cst16:0000000000000010 .LC45
     /tmp/ccRvi0th.s:6633   .rodata.cst16:0000000000000020 .LC48
     /tmp/ccRvi0th.s:6588   .rodata.cst8:0000000000000008 .LC5
     /tmp/ccRvi0th.s:6656   .rodata.cst8:0000000000000020 .LC185
     /tmp/ccRvi0th.s:6652   .rodata.cst8:0000000000000018 .LC184

UNDEFINED SYMBOLS
fread
flWriteChannelAsync
errPrefix
flAwaitAsyncWrites
__stack_chk_fail
bufInitialise
__errno_location
strtoul
malloc
strncpy
fopen
free
gettimeofday
flReadChannelAsyncSubmit
flReadChannelAsyncAwait
fwrite
__printf_chk
fclose
flWriteChannel
flSelectConduit
dump
bufDestroy
stderr
__fprintf_chk
bufAppendConst
flReadChannel
__strcat_chk
tcgetattr
cfsetospeed
cfsetispeed
tcsetattr
read
strerror
__isoc99_scanf
write
_IO_getc
calloc
sleep
usleep
open
arg_str0
arg_str1
arg_uint0
arg_lit0
arg_end
arg_nullcheck
flClose
flFreeError
arg_parse
stdout
arg_print_syntax
arg_print_glossary
arg_print_errors
flInitialise
flOpen
flLoadCustomFirmware
flSleep
fflush
flIsDeviceAvailable
flGetFirmwareVersion
flGetFirmwareID
flFlashStandardFirmware
flIsNeroCapable
flIsCommCapable
jtagScanChain
flLoadStandardFirmware
flFlashCustomFirmware
flResetToggle
flMultiBitPortAccess
__sprintf_chk
flSaveFirmware
flProgram
flIsFPGARunning
clock
add_history
readline
sigRegisterHandler
sigIsRaised
