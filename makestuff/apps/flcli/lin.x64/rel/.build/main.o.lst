   1              		.file	"main.c"
   2              		.section	.rodata.str1.1,"aMS",@progbits,1
   3              	.LC0:
   4 0000 646F5772 		.string	"doWrite()"
   4      69746528 
   4      2900
   5              		.section	.text.unlikely,"ax",@progbits
   6              	.LCOLDB1:
   7              	.LHOTB1:
   9              	doWrite:
  10              	.LFB54:
  11              		.cfi_startproc
  12 0000 4157     		pushq	%r15
  13              		.cfi_def_cfa_offset 16
  14              		.cfi_offset 15, -16
  15 0002 4156     		pushq	%r14
  16              		.cfi_def_cfa_offset 24
  17              		.cfi_offset 14, -24
  18 0004 4D89C7   		movq	%r8, %r15
  19 0007 4155     		pushq	%r13
  20              		.cfi_def_cfa_offset 32
  21              		.cfi_offset 13, -32
  22 0009 4154     		pushq	%r12
  23              		.cfi_def_cfa_offset 40
  24              		.cfi_offset 12, -40
  25 000b 4989FD   		movq	%rdi, %r13
  26 000e 55       		pushq	%rbp
  27              		.cfi_def_cfa_offset 48
  28              		.cfi_offset 6, -48
  29 000f 53       		pushq	%rbx
  30              		.cfi_def_cfa_offset 56
  31              		.cfi_offset 3, -56
  32 0010 4989CE   		movq	%rcx, %r14
  33 0013 4D89CC   		movq	%r9, %r12
  34 0016 31DB     		xorl	%ebx, %ebx
  35 0018 31ED     		xorl	%ebp, %ebp
  36 001a 4881EC38 		subq	$65592, %rsp
  36      000100
  37              		.cfi_def_cfa_offset 65648
  38 0021 64488B04 		movq	%fs:40, %rax
  38      25280000 
  38      00
  39 002a 48898424 		movq	%rax, 65576(%rsp)
  39      28000100 
  40 0032 31C0     		xorl	%eax, %eax
  41 0034 400FB6C6 		movzbl	%sil, %eax
  42 0038 48895424 		movq	%rdx, 8(%rsp)
  42      08
  43 003d 89442414 		movl	%eax, 20(%rsp)
  44              	.L7:
  45 0041 488B4C24 		movq	8(%rsp), %rcx
  45      08
  46 0046 488D7C24 		leaq	32(%rsp), %rdi
  46      20
  47 004b BAFBFF00 		movl	$65531, %edx
  47      00
  48 0050 BE010000 		movl	$1, %esi
  48      00
  49 0055 E8000000 		call	fread
  49      00
  50 005a 4885C0   		testq	%rax, %rax
  51 005d 7460     		je	.L2
  52 005f 8B742414 		movl	20(%rsp), %esi
  53 0063 488D4C24 		leaq	32(%rsp), %rcx
  53      20
  54 0068 4D89E0   		movq	%r12, %r8
  55 006b 4889C2   		movq	%rax, %rdx
  56 006e 4C89EF   		movq	%r13, %rdi
  57 0071 4801C3   		addq	%rax, %rbx
  58 0074 48894424 		movq	%rax, 24(%rsp)
  58      18
  59 0079 E8000000 		call	flWriteChannelAsync
  59      00
  60 007e 85C0     		testl	%eax, %eax
  61 0080 7510     		jne	.L3
  62 0082 4C8B4C24 		movq	24(%rsp), %r9
  62      18
  63 0087 488D4424 		leaq	32(%rsp), %rax
  63      20
  64 008c 4A8D1408 		leaq	(%rax,%r9), %rdx
  65 0090 EB14     		jmp	.L4
  66              	.L3:
  67 0092 BE000000 		movl	$.LC0, %esi
  67      00
  68 0097 4C89E7   		movq	%r12, %rdi
  69 009a E8000000 		call	errPrefix
  69      00
  70 009f B8010000 		movl	$1, %eax
  70      00
  71 00a4 EB2F     		jmp	.L5
  72              	.L4:
  73 00a6 4839D0   		cmpq	%rdx, %rax
  74 00a9 740B     		je	.L16
  75 00ab 48FFC0   		incq	%rax
  76 00ae 0FB648FF 		movzbl	-1(%rax), %ecx
  77 00b2 01CD     		addl	%ecx, %ebp
  78 00b4 EBF0     		jmp	.L4
  79              	.L16:
  80 00b6 4981F9FB 		cmpq	$65531, %r9
  80      FF0000
  81 00bd 7482     		je	.L7
  82              	.L2:
  83 00bf 4C89E6   		movq	%r12, %rsi
  84 00c2 4C89EF   		movq	%r13, %rdi
  85 00c5 E8000000 		call	flAwaitAsyncWrites
  85      00
  86 00ca 85C0     		testl	%eax, %eax
  87 00cc 75C4     		jne	.L3
  88 00ce 6641892F 		movw	%bp, (%r15)
  89 00d2 49891E   		movq	%rbx, (%r14)
  90              	.L5:
  91 00d5 488B9C24 		movq	65576(%rsp), %rbx
  91      28000100 
  92 00dd 6448331C 		xorq	%fs:40, %rbx
  92      25280000 
  92      00
  93 00e6 7405     		je	.L8
  94 00e8 E8000000 		call	__stack_chk_fail
  94      00
  95              	.L8:
  96 00ed 4881C438 		addq	$65592, %rsp
  96      000100
  97              		.cfi_def_cfa_offset 56
  98 00f4 5B       		popq	%rbx
  99              		.cfi_def_cfa_offset 48
 100 00f5 5D       		popq	%rbp
 101              		.cfi_def_cfa_offset 40
 102 00f6 415C     		popq	%r12
 103              		.cfi_def_cfa_offset 32
 104 00f8 415D     		popq	%r13
 105              		.cfi_def_cfa_offset 24
 106 00fa 415E     		popq	%r14
 107              		.cfi_def_cfa_offset 16
 108 00fc 415F     		popq	%r15
 109              		.cfi_def_cfa_offset 8
 110 00fe C3       		ret
 111              		.cfi_endproc
 112              	.LFE54:
 114              	.LCOLDE1:
 115              	.LHOTE1:
 116              		.section	.rodata.str1.1
 117              	.LC2:
 118 000a 776200   		.string	"wb"
 119              	.LC3:
 120 000d 646F5265 		.string	"doRead()"
 120      61642829 
 120      00
 121              		.section	.rodata.str1.8,"aMS",@progbits,1
 122              		.align 8
 123              	.LC6:
 124 0000 52656164 		.string	"Read %d bytes (checksum 0x%04X) from channel %d at %f MiB/s\n"
 124      20256420 
 124      62797465 
 124      73202863 
 124      6865636B 
 125              		.section	.rodata.str1.1
 126              	.LC7:
 127 0016 726200   		.string	"rb"
 128              		.section	.rodata.str1.8
 129 003d 000000   		.align 8
 130              	.LC8:
 131 0040 57726F74 		.string	"Wrote %zu bytes (checksum 0x%04X) to channel %lu at %f MiB/s\n"
 131      6520257A 
 131      75206279 
 131      74657320 
 131      28636865 
 132              		.section	.rodata.str1.1
 133              	.LC9:
 134 0019 20616674 		.string	" after dump \n "
 134      65722064 
 134      756D7020 
 134      0A2000
 135              	.LC10:
 136 0028 25732061 		.string	"%s at column %d\n  %s\n  "
 136      7420636F 
 136      6C756D6E 
 136      2025640A 
 136      20202573 
 137              	.LC11:
 138 0040 2000     		.string	" "
 139              	.LC12:
 140 0042 5E0A00   		.string	"^\n"
 141              		.section	.text.unlikely
 142              	.LCOLDB13:
 143              	.LHOTB13:
 145              	parseLine:
 146              	.LFB55:
 147              		.cfi_startproc
 148 00ff 4157     		pushq	%r15
 149              		.cfi_def_cfa_offset 16
 150              		.cfi_offset 15, -16
 151 0101 4156     		pushq	%r14
 152              		.cfi_def_cfa_offset 24
 153              		.cfi_offset 14, -24
 154 0103 B9080000 		movl	$8, %ecx
 154      00
 155 0108 4155     		pushq	%r13
 156              		.cfi_def_cfa_offset 32
 157              		.cfi_offset 13, -32
 158 010a 4154     		pushq	%r12
 159              		.cfi_def_cfa_offset 40
 160              		.cfi_offset 12, -40
 161 010c 55       		pushq	%rbp
 162              		.cfi_def_cfa_offset 48
 163              		.cfi_offset 6, -48
 164 010d 53       		pushq	%rbx
 165              		.cfi_def_cfa_offset 56
 166              		.cfi_offset 3, -56
 167 010e 4889D3   		movq	%rdx, %rbx
 168 0111 4881EC98 		subq	$152, %rsp
 168      000000
 169              		.cfi_def_cfa_offset 208
 170 0118 64488B04 		movq	%fs:40, %rax
 170      25280000 
 170      00
 171 0121 48898424 		movq	%rax, 136(%rsp)
 171      88000000 
 172 0129 31C0     		xorl	%eax, %eax
 173 012b 48893C24 		movq	%rdi, (%rsp)
 174 012f 488D7C24 		leaq	96(%rsp), %rdi
 174      60
 175 0134 48897424 		movq	%rsi, 16(%rsp)
 175      10
 176 0139 BE000400 		movl	$1024, %esi
 176      00
 177 013e F3AB     		rep stosl
 178 0140 488D7C24 		leaq	96(%rsp), %rdi
 178      60
 179 0145 4889D1   		movq	%rdx, %rcx
 180 0148 31D2     		xorl	%edx, %edx
 181 014a E8000000 		call	bufInitialise
 181      00
 182 014f 85C0     		testl	%eax, %eax
 183 0151 0F85C708 		jne	.L97
 183      0000
 184 0157 488B4424 		movq	16(%rsp), %rax
 184      10
 185 015c 48890500 		movq	%rax, ptr(%rip)
 185      000000
 186              	.L19:
 187 0163 488B3D00 		movq	ptr(%rip), %rdi
 187      000000
 188 016a 8A07     		movb	(%rdi), %al
 189 016c 3C3B     		cmpb	$59, %al
 190 016e 750C     		jne	.L158
 191 0170 48FFC7   		incq	%rdi
 192 0173 48893D00 		movq	%rdi, ptr(%rip)
 192      000000
 193 017a EBE7     		jmp	.L19
 194              	.L158:
 195 017c 3C72     		cmpb	$114, %al
 196 017e 7415     		je	.L21
 197 0180 3C77     		cmpb	$119, %al
 198 0182 0F847D03 		je	.L22
 198      0000
 199 0188 3C2B     		cmpb	$43, %al
 200 018a 0F859F08 		jne	.L118
 200      0000
 201 0190 E9620700 		jmp	.L159
 201      00
 202              	.L21:
 203 0195 488D6F01 		leaq	1(%rdi), %rbp
 204 0199 48892D00 		movq	%rbp, ptr(%rip)
 204      000000
 205 01a0 E8000000 		call	__errno_location
 205      00
 206 01a5 488D7424 		leaq	48(%rsp), %rsi
 206      30
 207 01aa 4989C7   		movq	%rax, %r15
 208 01ad C7000000 		movl	$0, (%rax)
 208      0000
 209 01b3 BA100000 		movl	$16, %edx
 209      00
 210 01b8 4889EF   		movq	%rbp, %rdi
 211 01bb E8000000 		call	strtoul
 211      00
 212 01c0 41833F00 		cmpl	$0, (%r15)
 213 01c4 4989C6   		movq	%rax, %r14
 214 01c7 7411     		je	.L24
 215              	.L28:
 216 01c9 4531ED   		xorl	%r13d, %r13d
 217 01cc 4531FF   		xorl	%r15d, %r15d
 218 01cf 41BE0200 		movl	$2, %r14d
 218      0000
 219 01d5 E9370500 		jmp	.L63
 219      00
 220              	.L24:
 221 01da 83F87F   		cmpl	$127, %eax
 222 01dd 0F870603 		ja	.L99
 222      0000
 223 01e3 488B7C24 		movq	48(%rsp), %rdi
 223      30
 224 01e8 8A07     		movb	(%rdi), %al
 225 01ea 48893D00 		movq	%rdi, ptr(%rip)
 225      000000
 226 01f1 A8DF     		testb	$-33, %al
 227 01f3 7415     		je	.L26
 228 01f5 3C3B     		cmpb	$59, %al
 229 01f7 7411     		je	.L26
 230              	.L29:
 231 01f9 4531ED   		xorl	%r13d, %r13d
 232 01fc 4531FF   		xorl	%r15d, %r15d
 233 01ff 41BE0500 		movl	$5, %r14d
 233      0000
 234 0205 E9070500 		jmp	.L63
 234      00
 235              	.L26:
 236 020a 3C20     		cmpb	$32, %al
 237 020c 41BD0100 		movl	$1, %r13d
 237      0000
 238 0212 0F85E308 		jne	.L27
 238      0000
 239 0218 488D7424 		leaq	48(%rsp), %rsi
 239      30
 240 021d 48FFC7   		incq	%rdi
 241 0220 41C70700 		movl	$0, (%r15)
 241      000000
 242 0227 BA100000 		movl	$16, %edx
 242      00
 243 022c 48893D00 		movq	%rdi, ptr(%rip)
 243      000000
 244 0233 E8000000 		call	strtoul
 244      00
 245 0238 41833F00 		cmpl	$0, (%r15)
 246 023c 4989C4   		movq	%rax, %r12
 247 023f 4189C5   		movl	%eax, %r13d
 248 0242 7585     		jne	.L28
 249 0244 488B7424 		movq	48(%rsp), %rsi
 249      30
 250 0249 8A06     		movb	(%rsi), %al
 251 024b 48893500 		movq	%rsi, ptr(%rip)
 251      000000
 252 0252 A8DF     		testb	$-33, %al
 253 0254 7404     		je	.L119
 254 0256 3C3B     		cmpb	$59, %al
 255 0258 759F     		jne	.L29
 256              	.L119:
 257 025a 3C20     		cmpb	$32, %al
 258 025c 0F859908 		jne	.L27
 258      0000
 259 0262 488D4601 		leaq	1(%rsi), %rax
 260 0266 48890500 		movq	%rax, ptr(%rip)
 260      000000
 261 026d 8A4601   		movb	1(%rsi), %al
 262 0270 3C22     		cmpb	$34, %al
 263 0272 7404     		je	.L120
 264 0274 3C27     		cmpb	$39, %al
 265 0276 7581     		jne	.L29
 266              	.L120:
 267 0278 4C8D6E02 		leaq	2(%rsi), %r13
 268 027c 4C892D00 		movq	%r13, ptr(%rip)
 268      000000
 269 0283 4C89ED   		movq	%r13, %rbp
 270              	.L32:
 271 0286 8A5500   		movb	0(%rbp), %dl
 272 0289 38D0     		cmpb	%dl, %al
 273 028b 740D     		je	.L33
 274 028d 84D2     		testb	%dl, %dl
 275 028f 0F844A04 		je	.L108
 275      0000
 276 0295 48FFC5   		incq	%rbp
 277 0298 EBEC     		jmp	.L32
 278              	.L33:
 279 029a 84C0     		testb	%al, %al
 280 029c 0F843D04 		je	.L108
 280      0000
 281 02a2 4889E8   		movq	%rbp, %rax
 282 02a5 4C29E8   		subq	%r13, %rax
 283 02a8 488D7801 		leaq	1(%rax), %rdi
 284 02ac 48894424 		movq	%rax, 8(%rsp)
 284      08
 285 02b1 E8000000 		call	malloc
 285      00
 286 02b6 4885C0   		testq	%rax, %rax
 287 02b9 4989C7   		movq	%rax, %r15
 288 02bc 0F842B04 		je	.L109
 288      0000
 289 02c2 4C39ED   		cmpq	%r13, %rbp
 290 02c5 0F842D04 		je	.L110
 290      0000
 291 02cb 488B5424 		movq	8(%rsp), %rdx
 291      08
 292 02d0 4C89EE   		movq	%r13, %rsi
 293 02d3 4889C7   		movq	%rax, %rdi
 294 02d6 E8000000 		call	strncpy
 294      00
 295 02db 488B4424 		movq	8(%rsp), %rax
 295      08
 296 02e0 488D4D01 		leaq	1(%rbp), %rcx
 297 02e4 BE000000 		movl	$.LC2, %esi
 297      00
 298 02e9 4C89FF   		movq	%r15, %rdi
 299 02ec 48890D00 		movq	%rcx, ptr(%rip)
 299      000000
 300 02f3 41C60407 		movb	$0, (%r15,%rax)
 300      00
 301 02f8 E8000000 		call	fopen
 301      00
 302 02fd 4885C0   		testq	%rax, %rax
 303 0300 4989C5   		movq	%rax, %r13
 304 0303 0F84F101 		je	.L104
 304      0000
 305 0309 4C89FF   		movq	%r15, %rdi
 306 030c BD000001 		movl	$65536, %ebp
 306      00
 307 0311 E8000000 		call	free
 307      00
 308 0316 488D7C24 		leaq	64(%rsp), %rdi
 308      40
 309 031b 31F6     		xorl	%esi, %esi
 310 031d E8000000 		call	gettimeofday
 310      00
 311 0322 4181FC00 		cmpl	$65536, %r12d
 311      000100
 312 0329 488B3C24 		movq	(%rsp), %rdi
 313 032d 410FB6C6 		movzbl	%r14b, %eax
 314 0331 410F46EC 		cmovbe	%r12d, %ebp
 315 0335 4989D8   		movq	%rbx, %r8
 316 0338 31C9     		xorl	%ecx, %ecx
 317 033a 89EA     		movl	%ebp, %edx
 318 033c 89C6     		movl	%eax, %esi
 319 033e 89442408 		movl	%eax, 8(%rsp)
 320 0342 E8000000 		call	flReadChannelAsyncSubmit
 320      00
 321 0347 85C0     		testl	%eax, %eax
 322 0349 741A     		je	.L35
 323              	.L38:
 324 034b BE000000 		movl	$.LC3, %esi
 324      00
 325 0350 4889DF   		movq	%rbx, %rdi
 326 0353 31ED     		xorl	%ebp, %ebp
 327 0355 E8000000 		call	errPrefix
 327      00
 328 035a 41BF0100 		movl	$1, %r15d
 328      0000
 329 0360 E90C0100 		jmp	.L36
 329      00
 330              	.L35:
 331 0365 4589E7   		movl	%r12d, %r15d
 332 0368 4129EF   		subl	%ebp, %r15d
 333 036b 31ED     		xorl	%ebp, %ebp
 334              	.L37:
 335 036d 4585FF   		testl	%r15d, %r15d
 336 0370 0F84A300 		je	.L160
 336      0000
 337 0376 4181FF00 		cmpl	$65536, %r15d
 337      000100
 338 037d 41B90000 		movl	$65536, %r9d
 338      0100
 339 0383 8B742408 		movl	8(%rsp), %esi
 340 0387 488B3C24 		movq	(%rsp), %rdi
 341 038b 450F46CF 		cmovbe	%r15d, %r9d
 342 038f 4989D8   		movq	%rbx, %r8
 343 0392 31C9     		xorl	%ecx, %ecx
 344 0394 4489CA   		movl	%r9d, %edx
 345 0397 44894C24 		movl	%r9d, 28(%rsp)
 345      1C
 346 039c E8000000 		call	flReadChannelAsyncSubmit
 346      00
 347 03a1 85C0     		testl	%eax, %eax
 348 03a3 75A6     		jne	.L38
 349 03a5 448B4C24 		movl	28(%rsp), %r9d
 349      1C
 350 03aa 488D4C24 		leaq	44(%rsp), %rcx
 350      2C
 351 03af 488B3C24 		movq	(%rsp), %rdi
 352 03b3 488D7424 		leaq	56(%rsp), %rsi
 352      38
 353 03b8 4989D8   		movq	%rbx, %r8
 354 03bb 4889CA   		movq	%rcx, %rdx
 355 03be 4529CF   		subl	%r9d, %r15d
 356 03c1 E8000000 		call	flReadChannelAsyncAwait
 356      00
 357 03c6 85C0     		testl	%eax, %eax
 358 03c8 7581     		jne	.L38
 359 03ca 8B54242C 		movl	44(%rsp), %edx
 360 03ce 488B7C24 		movq	56(%rsp), %rdi
 360      38
 361 03d3 4C89E9   		movq	%r13, %rcx
 362 03d6 BE010000 		movl	$1, %esi
 362      00
 363 03db E8000000 		call	fwrite
 363      00
 364 03e0 3B44242C 		cmpl	44(%rsp), %eax
 365 03e4 89C2     		movl	%eax, %edx
 366 03e6 7417     		je	.L39
 367              	.L43:
 368 03e8 BE000000 		movl	$.LC3, %esi
 368      00
 369 03ed 4889DF   		movq	%rbx, %rdi
 370 03f0 31ED     		xorl	%ebp, %ebp
 371 03f2 E8000000 		call	errPrefix
 371      00
 372 03f7 41BF0B00 		movl	$11, %r15d
 372      0000
 373 03fd EB72     		jmp	.L36
 374              	.L39:
 375 03ff 488B4424 		movq	56(%rsp), %rax
 375      38
 376              	.L40:
 377 0404 FFCA     		decl	%edx
 378 0406 83FAFF   		cmpl	$-1, %edx
 379 0409 0F845EFF 		je	.L37
 379      FFFF
 380 040f 0FB608   		movzbl	(%rax), %ecx
 381 0412 48FFC0   		incq	%rax
 382 0415 01CD     		addl	%ecx, %ebp
 383 0417 EBEB     		jmp	.L40
 384              	.L160:
 385 0419 488D4C24 		leaq	44(%rsp), %rcx
 385      2C
 386 041e 488B3C24 		movq	(%rsp), %rdi
 387 0422 488D7424 		leaq	56(%rsp), %rsi
 387      38
 388 0427 4989D8   		movq	%rbx, %r8
 389 042a 4889CA   		movq	%rcx, %rdx
 390 042d E8000000 		call	flReadChannelAsyncAwait
 390      00
 391 0432 85C0     		testl	%eax, %eax
 392 0434 0F8511FF 		jne	.L38
 392      FFFF
 393 043a 8B54242C 		movl	44(%rsp), %edx
 394 043e 488B7C24 		movq	56(%rsp), %rdi
 394      38
 395 0443 4C89E9   		movq	%r13, %rcx
 396 0446 BE010000 		movl	$1, %esi
 396      00
 397 044b E8000000 		call	fwrite
 397      00
 398 0450 3B44242C 		cmpl	44(%rsp), %eax
 399 0454 89C2     		movl	%eax, %edx
 400 0456 7590     		jne	.L43
 401 0458 488B4424 		movq	56(%rsp), %rax
 401      38
 402              	.L44:
 403 045d FFCA     		decl	%edx
 404 045f 83FAFF   		cmpl	$-1, %edx
 405 0462 740A     		je	.L161
 406 0464 0FB608   		movzbl	(%rax), %ecx
 407 0467 48FFC0   		incq	%rax
 408 046a 01CD     		addl	%ecx, %ebp
 409 046c EBEF     		jmp	.L44
 410              	.L161:
 411 046e 4531FF   		xorl	%r15d, %r15d
 412              	.L36:
 413 0471 488D7C24 		leaq	80(%rsp), %rdi
 413      50
 414 0476 31F6     		xorl	%esi, %esi
 415 0478 E8000000 		call	gettimeofday
 415      00
 416 047d 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 416      000000
 417 0484 0F844302 		je	.L64
 417      0000
 418 048a 48694424 		imulq	$1000000, 80(%rsp), %rax
 418      5040420F 
 418      00
 419 0493 48695424 		imulq	$1000000, 64(%rsp), %rdx
 419      4040420F 
 419      00
 420 049c 0FB7CD   		movzwl	%bp, %ecx
 421 049f 4589F0   		movl	%r14d, %r8d
 422 04a2 BE000000 		movl	$.LC6, %esi
 422      00
 423 04a7 BF010000 		movl	$1, %edi
 423      00
 424 04ac 48034424 		addq	88(%rsp), %rax
 424      58
 425 04b1 48035424 		addq	72(%rsp), %rdx
 425      48
 426 04b6 4829D0   		subq	%rdx, %rax
 427 04b9 4489E2   		movl	%r12d, %edx
 428 04bc F2480F2A 		cvtsi2sdq	%rax, %xmm1
 428      C8
 429 04c1 4489E0   		movl	%r12d, %eax
 430 04c4 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 430      C0
 431 04c9 B001     		movb	$1, %al
 432 04cb F20F5E0D 		divsd	.LC4(%rip), %xmm1
 432      00000000 
 433 04d3 F20F590D 		mulsd	.LC5(%rip), %xmm1
 433      00000000 
 434 04db F20F5EC1 		divsd	%xmm1, %xmm0
 435 04df E8000000 		call	__printf_chk
 435      00
 436 04e4 E9E40100 		jmp	.L64
 436      00
 437              	.L99:
 438 04e9 4531ED   		xorl	%r13d, %r13d
 439 04ec 4531FF   		xorl	%r15d, %r15d
 440 04ef 41BE0300 		movl	$3, %r14d
 440      0000
 441 04f5 E9170200 		jmp	.L63
 441      00
 442              	.L104:
 443 04fa 41BE0B00 		movl	$11, %r14d
 443      0000
 444 0500 E90C0200 		jmp	.L63
 444      00
 445              	.L22:
 446 0505 488D6F01 		leaq	1(%rdi), %rbp
 447 0509 48C74424 		movq	$1, 48(%rsp)
 447      30010000 
 447      00
 448 0512 48892D00 		movq	%rbp, ptr(%rip)
 448      000000
 449 0519 E8000000 		call	__errno_location
 449      00
 450 051e 488D7424 		leaq	56(%rsp), %rsi
 450      38
 451 0523 4989C5   		movq	%rax, %r13
 452 0526 C7000000 		movl	$0, (%rax)
 452      0000
 453 052c BA100000 		movl	$16, %edx
 453      00
 454 0531 4889EF   		movq	%rbp, %rdi
 455 0534 E8000000 		call	strtoul
 455      00
 456 0539 41837D00 		cmpl	$0, 0(%r13)
 456      00
 457 053e 4989C4   		movq	%rax, %r12
 458 0541 0F856003 		jne	.L106
 458      0000
 459 0547 4883F87F 		cmpq	$127, %rax
 460 054b 0F876A03 		ja	.L107
 460      0000
 461 0551 488B7424 		movq	56(%rsp), %rsi
 461      38
 462 0556 803E20   		cmpb	$32, (%rsi)
 463 0559 48893500 		movq	%rsi, ptr(%rip)
 463      000000
 464 0560 0F85C904 		jne	.L118
 464      0000
 465 0566 8A4601   		movb	1(%rsi), %al
 466 0569 488D5601 		leaq	1(%rsi), %rdx
 467 056d 48891500 		movq	%rdx, ptr(%rip)
 467      000000
 468 0574 3C22     		cmpb	$34, %al
 469 0576 7408     		je	.L121
 470 0578 3C27     		cmpb	$39, %al
 471 057a 0F859901 		jne	.L58
 471      0000
 472              	.L121:
 473 0580 488D6E02 		leaq	2(%rsi), %rbp
 474 0584 66C74424 		movw	$0, 44(%rsp)
 474      2C0000
 475 058b 48892D00 		movq	%rbp, ptr(%rip)
 475      000000
 476 0592 4989EE   		movq	%rbp, %r14
 477              	.L60:
 478 0595 418A16   		movb	(%r14), %dl
 479 0598 38D0     		cmpb	%dl, %al
 480 059a 740D     		je	.L61
 481 059c 84D2     		testb	%dl, %dl
 482 059e 0F843B01 		je	.L108
 482      0000
 483 05a4 49FFC6   		incq	%r14
 484 05a7 EBEC     		jmp	.L60
 485              	.L61:
 486 05a9 84C0     		testb	%al, %al
 487 05ab 0F842E01 		je	.L108
 487      0000
 488 05b1 4D89F5   		movq	%r14, %r13
 489 05b4 4929ED   		subq	%rbp, %r13
 490 05b7 498D7D01 		leaq	1(%r13), %rdi
 491 05bb E8000000 		call	malloc
 491      00
 492 05c0 4885C0   		testq	%rax, %rax
 493 05c3 4989C7   		movq	%rax, %r15
 494 05c6 0F842101 		je	.L109
 494      0000
 495 05cc 4939EE   		cmpq	%rbp, %r14
 496 05cf 0F842301 		je	.L110
 496      0000
 497 05d5 4C89EA   		movq	%r13, %rdx
 498 05d8 4889EE   		movq	%rbp, %rsi
 499 05db 4889C7   		movq	%rax, %rdi
 500 05de E8000000 		call	strncpy
 500      00
 501 05e3 49FFC6   		incq	%r14
 502 05e6 43C6042F 		movb	$0, (%r15,%r13)
 502      00
 503 05eb BE000000 		movl	$.LC7, %esi
 503      00
 504 05f0 4C89FF   		movq	%r15, %rdi
 505 05f3 4C893500 		movq	%r14, ptr(%rip)
 505      000000
 506 05fa E8000000 		call	fopen
 506      00
 507 05ff 4885C0   		testq	%rax, %rax
 508 0602 4989C5   		movq	%rax, %r13
 509 0605 0F84F800 		je	.L111
 509      0000
 510 060b 4C89FF   		movq	%r15, %rdi
 511 060e E8000000 		call	free
 511      00
 512 0613 488D7C24 		leaq	64(%rsp), %rdi
 512      40
 513 0618 31F6     		xorl	%esi, %esi
 514 061a E8000000 		call	gettimeofday
 514      00
 515 061f 488B3C24 		movq	(%rsp), %rdi
 516 0623 4C8D4424 		leaq	44(%rsp), %r8
 516      2C
 517 0628 488D4C24 		leaq	48(%rsp), %rcx
 517      30
 518 062d 4989D9   		movq	%rbx, %r9
 519 0630 4C89EA   		movq	%r13, %rdx
 520 0633 4489E6   		movl	%r12d, %esi
 521 0636 E8C5F9FF 		call	doWrite
 521      FF
 522 063b 488D7C24 		leaq	80(%rsp), %rdi
 522      50
 523 0640 31F6     		xorl	%esi, %esi
 524 0642 4189C7   		movl	%eax, %r15d
 525 0645 E8000000 		call	gettimeofday
 525      00
 526 064a 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 526      000000
 527 0651 747A     		je	.L64
 528 0653 48694424 		imulq	$1000000, 80(%rsp), %rax
 528      5040420F 
 528      00
 529 065c 48694C24 		imulq	$1000000, 64(%rsp), %rcx
 529      4040420F 
 529      00
 530 0665 488B5424 		movq	48(%rsp), %rdx
 530      30
 531 066a 48034424 		addq	88(%rsp), %rax
 531      58
 532 066f 48034C24 		addq	72(%rsp), %rcx
 532      48
 533 0674 4829C8   		subq	%rcx, %rax
 534 0677 4885D2   		testq	%rdx, %rdx
 535 067a F2480F2A 		cvtsi2sdq	%rax, %xmm1
 535      C8
 536 067f 7807     		js	.L65
 537 0681 F2480F2A 		cvtsi2sdq	%rdx, %xmm0
 537      C2
 538 0686 EB18     		jmp	.L66
 539              	.L65:
 540 0688 4889D0   		movq	%rdx, %rax
 541 068b 4889D1   		movq	%rdx, %rcx
 542 068e 48D1E8   		shrq	%rax
 543 0691 83E101   		andl	$1, %ecx
 544 0694 4809C8   		orq	%rcx, %rax
 545 0697 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 545      C0
 546 069c F20F58C0 		addsd	%xmm0, %xmm0
 547              	.L66:
 548 06a0 F20F5E0D 		divsd	.LC4(%rip), %xmm1
 548      00000000 
 549 06a8 0FB74C24 		movzwl	44(%rsp), %ecx
 549      2C
 550 06ad 4D89E0   		movq	%r12, %r8
 551 06b0 BE000000 		movl	$.LC8, %esi
 551      00
 552 06b5 BF010000 		movl	$1, %edi
 552      00
 553 06ba B001     		movb	$1, %al
 554 06bc F20F590D 		mulsd	.LC5(%rip), %xmm1
 554      00000000 
 555 06c4 F20F5EC1 		divsd	%xmm1, %xmm0
 556 06c8 E8000000 		call	__printf_chk
 556      00
 557              	.L64:
 558 06cd 4585FF   		testl	%r15d, %r15d
 559 06d0 7539     		jne	.L112
 560 06d2 4C89EF   		movq	%r13, %rdi
 561 06d5 E8000000 		call	fclose
 561      00
 562 06da E90B0300 		jmp	.L55
 562      00
 563              	.L108:
 564 06df 4531ED   		xorl	%r13d, %r13d
 565 06e2 4531FF   		xorl	%r15d, %r15d
 566 06e5 41BE0600 		movl	$6, %r14d
 566      0000
 567 06eb EB24     		jmp	.L63
 568              	.L109:
 569 06ed 4531ED   		xorl	%r13d, %r13d
 570 06f0 41BE0700 		movl	$7, %r14d
 570      0000
 571 06f6 EB19     		jmp	.L63
 572              	.L110:
 573 06f8 4531ED   		xorl	%r13d, %r13d
 574 06fb 41BE0800 		movl	$8, %r14d
 574      0000
 575 0701 EB0E     		jmp	.L63
 576              	.L111:
 577 0703 41BE0A00 		movl	$10, %r14d
 577      0000
 578 0709 EB06     		jmp	.L63
 579              	.L112:
 580 070b 4589FE   		movl	%r15d, %r14d
 581 070e 4531FF   		xorl	%r15d, %r15d
 582              	.L63:
 583 0711 4531E4   		xorl	%r12d, %r12d
 584 0714 E9250300 		jmp	.L18
 584      00
 585              	.L58:
 586 0719 8D48D0   		leal	-48(%rax), %ecx
 587 071c 80F909   		cmpb	$9, %cl
 588 071f 760E     		jbe	.L68
 589 0721 83E0DF   		andl	$-33, %eax
 590 0724 83E841   		subl	$65, %eax
 591 0727 3C05     		cmpb	$5, %al
 592 0729 0F870003 		ja	.L118
 592      0000
 593              	.L68:
 594 072f 4883C602 		addq	$2, %rsi
 595              	.L70:
 596 0733 8A06     		movb	(%rsi), %al
 597 0735 8D48D0   		leal	-48(%rax), %ecx
 598 0738 80F909   		cmpb	$9, %cl
 599 073b 7705     		ja	.L162
 600              	.L71:
 601 073d 48FFC6   		incq	%rsi
 602 0740 EBF1     		jmp	.L70
 603              	.L162:
 604 0742 83E0DF   		andl	$-33, %eax
 605 0745 83E841   		subl	$65, %eax
 606 0748 3C05     		cmpb	$5, %al
 607 074a 76F1     		jbe	.L71
 608 074c 4829D6   		subq	%rdx, %rsi
 609 074f 40F6C601 		testb	$1, %sil
 610 0753 0F857601 		jne	.L113
 610      0000
 611 0759 4889F7   		movq	%rsi, %rdi
 612 075c 4531ED   		xorl	%r13d, %r13d
 613 075f 48D1EF   		shrq	%rdi
 614 0762 48897C24 		movq	%rdi, 48(%rsp)
 614      30
 615 0767 E8000000 		call	malloc
 615      00
 616 076c 4889C5   		movq	%rax, %rbp
 617              	.L72:
 618 076f 4C3B6C24 		cmpq	48(%rsp), %r13
 618      30
 619 0774 7353     		jnb	.L163
 620 0776 488B0D00 		movq	ptr(%rip), %rcx
 620      000000
 621 077d 8A01     		movb	(%rcx), %al
 622 077f 8D50D0   		leal	-48(%rax), %edx
 623 0782 80FA09   		cmpb	$9, %dl
 624 0785 0F860D04 		jbe	.L73
 624      0000
 625 078b 8D509F   		leal	-97(%rax), %edx
 626 078e 80FA05   		cmpb	$5, %dl
 627 0791 7708     		ja	.L74
 628 0793 8D50A9   		leal	-87(%rax), %edx
 629 0796 E9FD0300 		jmp	.L73
 629      00
 630              	.L74:
 631 079b 8D50BF   		leal	-65(%rax), %edx
 632 079e 80FA05   		cmpb	$5, %dl
 633 07a1 7708     		ja	.L75
 634 07a3 8D50C9   		leal	-55(%rax), %edx
 635 07a6 E9ED0300 		jmp	.L73
 635      00
 636              	.L75:
 637 07ab BE000000 		movl	$.LC9, %esi
 637      00
 638 07b0 BF010000 		movl	$1, %edi
 638      00
 639 07b5 31C0     		xorl	%eax, %eax
 640 07b7 E8000000 		call	__printf_chk
 640      00
 641              	.L95:
 642 07bc 48830500 		addq	$2, ptr(%rip)
 642      00000002 
 643 07c4 49FFC5   		incq	%r13
 644 07c7 EBA6     		jmp	.L72
 645              	.L163:
 646 07c9 488D7C24 		leaq	64(%rsp), %rdi
 646      40
 647 07ce 31F6     		xorl	%esi, %esi
 648 07d0 E8000000 		call	gettimeofday
 648      00
 649 07d5 488B5424 		movq	48(%rsp), %rdx
 649      30
 650 07da 488B3C24 		movq	(%rsp), %rdi
 651 07de 4989D8   		movq	%rbx, %r8
 652 07e1 4889E9   		movq	%rbp, %rcx
 653 07e4 4489E6   		movl	%r12d, %esi
 654 07e7 E8000000 		call	flWriteChannel
 654      00
 655 07ec 488D7C24 		leaq	80(%rsp), %rdi
 655      50
 656 07f1 31F6     		xorl	%esi, %esi
 657 07f3 4189C5   		movl	%eax, %r13d
 658 07f6 E8000000 		call	gettimeofday
 658      00
 659 07fb 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 659      000000
 660 0802 0F848D00 		je	.L79
 660      0000
 661 0808 488B5424 		movq	48(%rsp), %rdx
 661      30
 662 080d 31C0     		xorl	%eax, %eax
 663 080f 31C9     		xorl	%ecx, %ecx
 664              	.L80:
 665 0811 4839C2   		cmpq	%rax, %rdx
 666 0814 740C     		je	.L164
 667 0816 0FB67405 		movzbl	0(%rbp,%rax), %esi
 667      00
 668 081b 48FFC0   		incq	%rax
 669 081e 01F1     		addl	%esi, %ecx
 670 0820 EBEF     		jmp	.L80
 671              	.L164:
 672 0822 48694424 		imulq	$1000000, 80(%rsp), %rax
 672      5040420F 
 672      00
 673 082b 48697424 		imulq	$1000000, 64(%rsp), %rsi
 673      4040420F 
 673      00
 674 0834 48034424 		addq	88(%rsp), %rax
 674      58
 675 0839 48037424 		addq	72(%rsp), %rsi
 675      48
 676 083e 4829F0   		subq	%rsi, %rax
 677 0841 4885D2   		testq	%rdx, %rdx
 678 0844 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 678      C8
 679 0849 7807     		js	.L82
 680 084b F2480F2A 		cvtsi2sdq	%rdx, %xmm0
 680      C2
 681 0850 EB18     		jmp	.L83
 682              	.L82:
 683 0852 4889D0   		movq	%rdx, %rax
 684 0855 4889D6   		movq	%rdx, %rsi
 685 0858 48D1E8   		shrq	%rax
 686 085b 83E601   		andl	$1, %esi
 687 085e 4809F0   		orq	%rsi, %rax
 688 0861 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 688      C0
 689 0866 F20F58C0 		addsd	%xmm0, %xmm0
 690              	.L83:
 691 086a F20F5E0D 		divsd	.LC4(%rip), %xmm1
 691      00000000 
 692 0872 0FB7C9   		movzwl	%cx, %ecx
 693 0875 4D89E0   		movq	%r12, %r8
 694 0878 BE000000 		movl	$.LC8, %esi
 694      00
 695 087d BF010000 		movl	$1, %edi
 695      00
 696 0882 B001     		movb	$1, %al
 697 0884 F20F590D 		mulsd	.LC5(%rip), %xmm1
 697      00000000 
 698 088c F20F5EC1 		divsd	%xmm1, %xmm0
 699 0890 E8000000 		call	__printf_chk
 699      00
 700              	.L79:
 701 0895 4585ED   		testl	%r13d, %r13d
 702 0898 7549     		jne	.L114
 703 089a 4889EF   		movq	%rbp, %rdi
 704 089d E8000000 		call	free
 704      00
 705 08a2 E9430100 		jmp	.L55
 705      00
 706              	.L106:
 707 08a7 4531ED   		xorl	%r13d, %r13d
 708 08aa 4531FF   		xorl	%r15d, %r15d
 709 08ad 4531E4   		xorl	%r12d, %r12d
 710 08b0 41BE0200 		movl	$2, %r14d
 710      0000
 711 08b6 E9830100 		jmp	.L18
 711      00
 712              	.L107:
 713 08bb 4531ED   		xorl	%r13d, %r13d
 714 08be 4531FF   		xorl	%r15d, %r15d
 715 08c1 4531E4   		xorl	%r12d, %r12d
 716 08c4 41BE0300 		movl	$3, %r14d
 716      0000
 717 08ca E96F0100 		jmp	.L18
 717      00
 718              	.L113:
 719 08cf 4531ED   		xorl	%r13d, %r13d
 720 08d2 4531FF   		xorl	%r15d, %r15d
 721 08d5 4531E4   		xorl	%r12d, %r12d
 722 08d8 41BE0900 		movl	$9, %r14d
 722      0000
 723 08de E95B0100 		jmp	.L18
 723      00
 724              	.L114:
 725 08e3 4989EC   		movq	%rbp, %r12
 726 08e6 4531ED   		xorl	%r13d, %r13d
 727 08e9 4531FF   		xorl	%r15d, %r15d
 728 08ec 41BE0100 		movl	$1, %r14d
 728      0000
 729 08f2 E9470100 		jmp	.L18
 729      00
 730              	.L159:
 731 08f7 488D6F01 		leaq	1(%rdi), %rbp
 732 08fb 48892D00 		movq	%rbp, ptr(%rip)
 732      000000
 733 0902 E8000000 		call	__errno_location
 733      00
 734 0907 488D7424 		leaq	56(%rsp), %rsi
 734      38
 735 090c 4989C4   		movq	%rax, %r12
 736 090f C7000000 		movl	$0, (%rax)
 736      0000
 737 0915 BA100000 		movl	$16, %edx
 737      00
 738 091a 4889EF   		movq	%rbp, %rdi
 739 091d E8000000 		call	strtoul
 739      00
 740 0922 41833C24 		cmpl	$0, (%r12)
 740      00
 741 0927 753D     		jne	.L115
 742 0929 3DFF0000 		cmpl	$255, %eax
 742      00
 743 092e 773E     		ja	.L116
 744 0930 488B5424 		movq	56(%rsp), %rdx
 744      38
 745 0935 48891500 		movq	%rdx, ptr(%rip)
 745      000000
 746 093c 8A12     		movb	(%rdx), %dl
 747 093e 84D2     		testb	%dl, %dl
 748 0940 7405     		je	.L122
 749 0942 80FA3B   		cmpb	$59, %dl
 750 0945 752F     		jne	.L117
 751              	.L122:
 752 0947 488B3C24 		movq	(%rsp), %rdi
 753 094b 0FB6F0   		movzbl	%al, %esi
 754 094e 4889DA   		movq	%rbx, %rdx
 755 0951 E8000000 		call	flSelectConduit
 755      00
 756 0956 85C0     		testl	%eax, %eax
 757 0958 0F848C00 		je	.L55
 757      0000
 758 095e 41BE0100 		movl	$1, %r14d
 758      0000
 759 0964 EB16     		jmp	.L84
 760              	.L115:
 761 0966 41BE0200 		movl	$2, %r14d
 761      0000
 762 096c EB0E     		jmp	.L84
 763              	.L116:
 764 096e 41BE0400 		movl	$4, %r14d
 764      0000
 765 0974 EB06     		jmp	.L84
 766              	.L117:
 767 0976 41BE0500 		movl	$5, %r14d
 767      0000
 768              	.L84:
 769 097c 4531ED   		xorl	%r13d, %r13d
 770 097f 4531FF   		xorl	%r15d, %r15d
 771 0982 4531E4   		xorl	%r12d, %r12d
 772 0985 E9B40000 		jmp	.L18
 772      00
 773              	.L166:
 774 098a 48694424 		imulq	$1000000, 80(%rsp), %rax
 774      5040420F 
 774      00
 775 0993 48695424 		imulq	$1000000, 64(%rsp), %rdx
 775      4040420F 
 775      00
 776 099c F2480F2A 		cvtsi2sdq	%rbp, %xmm0
 776      C5
 777 09a1 0FB7C9   		movzwl	%cx, %ecx
 778 09a4 4589F0   		movl	%r14d, %r8d
 779 09a7 BE000000 		movl	$.LC6, %esi
 779      00
 780 09ac BF010000 		movl	$1, %edi
 780      00
 781 09b1 48034424 		addq	88(%rsp), %rax
 781      58
 782 09b6 48035424 		addq	72(%rsp), %rdx
 782      48
 783 09bb 4829D0   		subq	%rdx, %rax
 784 09be 4489EA   		movl	%r13d, %edx
 785 09c1 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 785      C8
 786 09c6 B001     		movb	$1, %al
 787 09c8 F20F5E0D 		divsd	.LC4(%rip), %xmm1
 787      00000000 
 788 09d0 F20F590D 		mulsd	.LC5(%rip), %xmm1
 788      00000000 
 789 09d8 F20F5EC1 		divsd	%xmm1, %xmm0
 790 09dc E8000000 		call	__printf_chk
 790      00
 791              	.L50:
 792 09e1 4585FF   		testl	%r15d, %r15d
 793 09e4 0F859D01 		jne	.L92
 793      0000
 794              	.L55:
 795 09ea 488B0500 		movq	ptr(%rip), %rax
 795      000000
 796 09f1 8A00     		movb	(%rax), %al
 797 09f3 3C3B     		cmpb	$59, %al
 798 09f5 0F8468F7 		je	.L19
 798      FFFF
 799 09fb 84C0     		testb	%al, %al
 800 09fd 7530     		jne	.L118
 801 09ff 488B5424 		movq	104(%rsp), %rdx
 801      68
 802 0a04 488B7424 		movq	96(%rsp), %rsi
 802      60
 803 0a09 31FF     		xorl	%edi, %edi
 804 0a0b 4531ED   		xorl	%r13d, %r13d
 805 0a0e 4531FF   		xorl	%r15d, %r15d
 806 0a11 4531E4   		xorl	%r12d, %r12d
 807 0a14 4531F6   		xorl	%r14d, %r14d
 808 0a17 E8000000 		call	dump
 808      00
 809 0a1c EB20     		jmp	.L18
 810              	.L97:
 811 0a1e 4531ED   		xorl	%r13d, %r13d
 812 0a21 4531FF   		xorl	%r15d, %r15d
 813 0a24 4531E4   		xorl	%r12d, %r12d
 814 0a27 41BE0100 		movl	$1, %r14d
 814      0000
 815 0a2d EB0F     		jmp	.L18
 816              	.L118:
 817 0a2f 4531ED   		xorl	%r13d, %r13d
 818 0a32 4531FF   		xorl	%r15d, %r15d
 819 0a35 4531E4   		xorl	%r12d, %r12d
 820 0a38 41BE0500 		movl	$5, %r14d
 820      0000
 821              	.L18:
 822 0a3e 488D7C24 		leaq	96(%rsp), %rdi
 822      60
 823 0a43 E8000000 		call	bufDestroy
 823      00
 824 0a48 4D85ED   		testq	%r13, %r13
 825 0a4b 7408     		je	.L88
 826 0a4d 4C89EF   		movq	%r13, %rdi
 827 0a50 E8000000 		call	fclose
 827      00
 828              	.L88:
 829 0a55 4C89FF   		movq	%r15, %rdi
 830 0a58 E8000000 		call	free
 830      00
 831 0a5d 4C89E7   		movq	%r12, %rdi
 832 0a60 E8000000 		call	free
 832      00
 833 0a65 4183FE01 		cmpl	$1, %r14d
 834 0a69 7671     		jbe	.L89
 835 0a6b 4C8B0500 		movq	ptr(%rip), %r8
 835      000000
 836 0a72 4489F0   		movl	%r14d, %eax
 837 0a75 4C2B4424 		subq	16(%rsp), %r8
 837      10
 838 0a7a 488B0CC5 		movq	errMessages(,%rax,8), %rcx
 838      00000000 
 839 0a82 4C8B4C24 		movq	16(%rsp), %r9
 839      10
 840 0a87 BA000000 		movl	$.LC10, %edx
 840      00
 841 0a8c 488B3D00 		movq	stderr(%rip), %rdi
 841      000000
 842 0a93 BE010000 		movl	$1, %esi
 842      00
 843 0a98 31C0     		xorl	%eax, %eax
 844 0a9a 31DB     		xorl	%ebx, %ebx
 845 0a9c 4489C5   		movl	%r8d, %ebp
 846 0a9f E8000000 		call	__fprintf_chk
 846      00
 847              	.L90:
 848 0aa4 39EB     		cmpl	%ebp, %ebx
 849 0aa6 7D1C     		jge	.L165
 850 0aa8 488B3D00 		movq	stderr(%rip), %rdi
 850      000000
 851 0aaf BA000000 		movl	$.LC11, %edx
 851      00
 852 0ab4 BE010000 		movl	$1, %esi
 852      00
 853 0ab9 31C0     		xorl	%eax, %eax
 854 0abb FFC3     		incl	%ebx
 855 0abd E8000000 		call	__fprintf_chk
 855      00
 856 0ac2 EBE0     		jmp	.L90
 857              	.L165:
 858 0ac4 488B3D00 		movq	stderr(%rip), %rdi
 858      000000
 859 0acb BA000000 		movl	$.LC12, %edx
 859      00
 860 0ad0 BE010000 		movl	$1, %esi
 860      00
 861 0ad5 31C0     		xorl	%eax, %eax
 862 0ad7 E8000000 		call	__fprintf_chk
 862      00
 863              	.L89:
 864 0adc 488B9C24 		movq	136(%rsp), %rbx
 864      88000000 
 865 0ae4 6448331C 		xorq	%fs:40, %rbx
 865      25280000 
 865      00
 866 0aed 4489F0   		movl	%r14d, %eax
 867 0af0 0F84D500 		je	.L96
 867      0000
 868 0af6 E8000000 		call	__stack_chk_fail
 868      00
 869              	.L27:
 870 0afb 4489ED   		movl	%r13d, %ebp
 871 0afe 488D7C24 		leaq	96(%rsp), %rdi
 871      60
 872 0b03 31F6     		xorl	%esi, %esi
 873 0b05 4889D9   		movq	%rbx, %rcx
 874 0b08 4889EA   		movq	%rbp, %rdx
 875 0b0b 4C8B6424 		movq	104(%rsp), %r12
 875      68
 876 0b10 E8000000 		call	bufAppendConst
 876      00
 877 0b15 85C0     		testl	%eax, %eax
 878 0b17 756E     		jne	.L92
 879 0b19 488D7C24 		leaq	64(%rsp), %rdi
 879      40
 880 0b1e 31F6     		xorl	%esi, %esi
 881 0b20 E8000000 		call	gettimeofday
 881      00
 882 0b25 4C89E1   		movq	%r12, %rcx
 883 0b28 48034C24 		addq	96(%rsp), %rcx
 883      60
 884 0b2d 488B3C24 		movq	(%rsp), %rdi
 885 0b31 410FB6F6 		movzbl	%r14b, %esi
 886 0b35 4989D8   		movq	%rbx, %r8
 887 0b38 4889EA   		movq	%rbp, %rdx
 888 0b3b E8000000 		call	flReadChannel
 888      00
 889 0b40 4189C7   		movl	%eax, %r15d
 890 0b43 488B4424 		movq	96(%rsp), %rax
 890      60
 891 0b48 488D7C24 		leaq	80(%rsp), %rdi
 891      50
 892 0b4d 31F6     		xorl	%esi, %esi
 893 0b4f 8A00     		movb	(%rax), %al
 894 0b51 88050000 		movb	%al, out(%rip)
 894      0000
 895 0b57 E8000000 		call	gettimeofday
 895      00
 896 0b5c 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 896      000000
 897 0b63 0F8478FE 		je	.L50
 897      FFFF
 898 0b69 4C036424 		addq	96(%rsp), %r12
 898      60
 899 0b6e 31C0     		xorl	%eax, %eax
 900 0b70 31C9     		xorl	%ecx, %ecx
 901              	.L51:
 902 0b72 4839C5   		cmpq	%rax, %rbp
 903 0b75 0F840FFE 		je	.L166
 903      FFFF
 904 0b7b 410FB614 		movzbl	(%r12,%rax), %edx
 904      04
 905 0b80 48FFC0   		incq	%rax
 906 0b83 01D1     		addl	%edx, %ecx
 907 0b85 EBEB     		jmp	.L51
 908              	.L92:
 909 0b87 4531ED   		xorl	%r13d, %r13d
 910 0b8a 4531FF   		xorl	%r15d, %r15d
 911 0b8d 41BE0100 		movl	$1, %r14d
 911      0000
 912 0b93 E979FBFF 		jmp	.L63
 912      FF
 913              	.L73:
 914 0b98 8A4901   		movb	1(%rcx), %cl
 915 0b9b 8D41D0   		leal	-48(%rcx), %eax
 916 0b9e 3C09     		cmpb	$9, %al
 917 0ba0 761A     		jbe	.L77
 918 0ba2 8D419F   		leal	-97(%rcx), %eax
 919 0ba5 3C05     		cmpb	$5, %al
 920 0ba7 7705     		ja	.L76
 921 0ba9 8D41A9   		leal	-87(%rcx), %eax
 922 0bac EB0E     		jmp	.L77
 923              	.L76:
 924 0bae 8D41BF   		leal	-65(%rcx), %eax
 925 0bb1 3C05     		cmpb	$5, %al
 926 0bb3 0F87F2FB 		ja	.L75
 926      FFFF
 927 0bb9 8D41C9   		leal	-55(%rcx), %eax
 928              	.L77:
 929 0bbc C1E204   		sall	$4, %edx
 930 0bbf 09D0     		orl	%edx, %eax
 931 0bc1 4288442D 		movb	%al, 0(%rbp,%r13)
 931      00
 932 0bc6 E9F1FBFF 		jmp	.L95
 932      FF
 933              	.L96:
 934 0bcb 4881C498 		addq	$152, %rsp
 934      000000
 935              		.cfi_def_cfa_offset 56
 936 0bd2 5B       		popq	%rbx
 937              		.cfi_def_cfa_offset 48
 938 0bd3 5D       		popq	%rbp
 939              		.cfi_def_cfa_offset 40
 940 0bd4 415C     		popq	%r12
 941              		.cfi_def_cfa_offset 32
 942 0bd6 415D     		popq	%r13
 943              		.cfi_def_cfa_offset 24
 944 0bd8 415E     		popq	%r14
 945              		.cfi_def_cfa_offset 16
 946 0bda 415F     		popq	%r15
 947              		.cfi_def_cfa_offset 8
 948 0bdc C3       		ret
 949              		.cfi_endproc
 950              	.LFE55:
 952              	.LCOLDE13:
 953              	.LHOTE13:
 954              		.section	.rodata.str1.1
 955              	.LC14:
 956 0045 474F5420 		.string	"GOT INTO FUNNCTION%s"
 956      494E544F 
 956      2046554E 
 956      4E435449 
 956      4F4E2573 
 957              	.LC15:
 958 005a 7200     		.string	"r"
 959              		.section	.text.unlikely
 960              	.LCOLDB16:
 961              		.text
 962              	.LHOTB16:
 963              		.p2align 4,,15
 964              		.globl	read_table
 966              	read_table:
 967              	.LFB56:
 968              		.cfi_startproc
 969 0000 4156     		pushq	%r14
 970              		.cfi_def_cfa_offset 16
 971              		.cfi_offset 14, -16
 972 0002 4155     		pushq	%r13
 973              		.cfi_def_cfa_offset 24
 974              		.cfi_offset 13, -24
 975 0004 4889FA   		movq	%rdi, %rdx
 976 0007 4154     		pushq	%r12
 977              		.cfi_def_cfa_offset 32
 978              		.cfi_offset 12, -32
 979 0009 55       		pushq	%rbp
 980              		.cfi_def_cfa_offset 40
 981              		.cfi_offset 6, -40
 982 000a 31C0     		xorl	%eax, %eax
 983 000c 53       		pushq	%rbx
 984              		.cfi_def_cfa_offset 48
 985              		.cfi_offset 3, -48
 986 000d 4989F5   		movq	%rsi, %r13
 987 0010 4889FB   		movq	%rdi, %rbx
 988 0013 BE000000 		movl	$.LC14, %esi
 988      00
 989 0018 BF010000 		movl	$1, %edi
 989      00
 990 001d E8000000 		call	__printf_chk
 990      00
 991 0022 BE000000 		movl	$.LC15, %esi
 991      00
 992 0027 4889DF   		movq	%rbx, %rdi
 993 002a E8000000 		call	fopen
 993      00
 994 002f 4885C0   		testq	%rax, %rax
 995 0032 745A     		je	.L168
 996 0034 4889C3   		movq	%rax, %rbx
 997 0037 31ED     		xorl	%ebp, %ebp
 998 0039 4531E4   		xorl	%r12d, %r12d
 999 003c 0F1F4000 		.p2align 4,,10
 1000              		.p2align 3
 1001              	.L169:
 1002 0040 4889DF   		movq	%rbx, %rdi
 1003 0043 E8000000 		call	_IO_getc
 1003      00
 1004 0048 3CFF     		cmpb	$-1, %al
 1005 004a 743A     		je	.L177
 1006              	.L172:
 1007 004c 3C20     		cmpb	$32, %al
 1008 004e 74F0     		je	.L169
 1009 0050 3C2C     		cmpb	$44, %al
 1010 0052 74EC     		je	.L169
 1011 0054 8D50D0   		leal	-48(%rax), %edx
 1012 0057 80FA09   		cmpb	$9, %dl
 1013 005a 7744     		ja	.L171
 1014 005c 4963D4   		movslq	%r12d, %rdx
 1015 005f 0FBEC0   		movsbl	%al, %eax
 1016 0062 4863CD   		movslq	%ebp, %rcx
 1017 0065 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 1018 0069 83E830   		subl	$48, %eax
 1019 006c 4889DF   		movq	%rbx, %rdi
 1020 006f 83C501   		addl	$1, %ebp
 1021 0072 4589E6   		movl	%r12d, %r14d
 1022 0075 498D5495 		leaq	0(%r13,%rdx,4), %rdx
 1022      00
 1023 007a 89048A   		movl	%eax, (%rdx,%rcx,4)
 1024 007d E8000000 		call	_IO_getc
 1024      00
 1025 0082 3CFF     		cmpb	$-1, %al
 1026 0084 75C6     		jne	.L172
 1027              	.L177:
 1028 0086 4889DF   		movq	%rbx, %rdi
 1029 0089 E8000000 		call	fclose
 1029      00
 1030              	.L168:
 1031 008e 5B       		popq	%rbx
 1032              		.cfi_remember_state
 1033              		.cfi_def_cfa_offset 40
 1034 008f 418D4601 		leal	1(%r14), %eax
 1035 0093 5D       		popq	%rbp
 1036              		.cfi_def_cfa_offset 32
 1037 0094 415C     		popq	%r12
 1038              		.cfi_def_cfa_offset 24
 1039 0096 415D     		popq	%r13
 1040              		.cfi_def_cfa_offset 16
 1041 0098 415E     		popq	%r14
 1042              		.cfi_def_cfa_offset 8
 1043 009a C3       		ret
 1044 009b 0F1F4400 		.p2align 4,,10
 1044      00
 1045              		.p2align 3
 1046              	.L171:
 1047              		.cfi_restore_state
 1048 00a0 3C0A     		cmpb	$10, %al
 1049 00a2 759C     		jne	.L169
 1050 00a4 4183C401 		addl	$1, %r12d
 1051 00a8 31ED     		xorl	%ebp, %ebp
 1052 00aa EB94     		jmp	.L169
 1053              		.cfi_endproc
 1054              	.LFE56:
 1056              		.section	.text.unlikely
 1057              	.LCOLDE16:
 1058              		.text
 1059              	.LHOTE16:
 1060              		.section	.text.unlikely
 1061              	.LCOLDB17:
 1062              		.text
 1063              	.LHOTB17:
 1064 00ac 0F1F4000 		.p2align 4,,15
 1065              		.globl	boolToHex
 1067              	boolToHex:
 1068              	.LFB57:
 1069              		.cfi_startproc
 1070 00b0 53       		pushq	%rbx
 1071              		.cfi_def_cfa_offset 16
 1072              		.cfi_offset 3, -16
 1073 00b1 4889FB   		movq	%rdi, %rbx
 1074 00b4 BF090000 		movl	$9, %edi
 1074      00
 1075 00b9 E8000000 		call	malloc
 1075      00
 1076 00be 31F6     		xorl	%esi, %esi
 1077 00c0 803B31   		cmpb	$49, (%rbx)
 1078 00c3 4C8B0500 		movq	mm(%rip), %r8
 1078      000000
 1079 00ca 488D7B01 		leaq	1(%rbx), %rdi
 1080 00ce BA010000 		movl	$1, %edx
 1080      00
 1081 00d3 41B90100 		movl	$1, %r9d
 1081      0000
 1082 00d9 400F94C6 		sete	%sil
 1083 00dd EB2B     		jmp	.L181
 1084 00df 90       		.p2align 4,,10
 1085              		.p2align 3
 1086              	.L185:
 1087 00e0 4863F6   		movslq	%esi, %rsi
 1088 00e3 89D1     		movl	%edx, %ecx
 1089 00e5 410FB634 		movzbl	(%r8,%rsi), %esi
 1089      30
 1090 00ea C1F902   		sarl	$2, %ecx
 1091 00ed 4863C9   		movslq	%ecx, %rcx
 1092 00f0 40887408 		movb	%sil, -1(%rax,%rcx)
 1092      FF
 1093 00f5 31F6     		xorl	%esi, %esi
 1094 00f7 803F31   		cmpb	$49, (%rdi)
 1095 00fa 400F94C6 		sete	%sil
 1096              	.L180:
 1097 00fe 83C201   		addl	$1, %edx
 1098 0101 4883C701 		addq	$1, %rdi
 1099 0105 83FA20   		cmpl	$32, %edx
 1100 0108 741F     		je	.L184
 1101              	.L181:
 1102 010a 89D1     		movl	%edx, %ecx
 1103 010c 83E103   		andl	$3, %ecx
 1104 010f 74CF     		je	.L185
 1105 0111 803F31   		cmpb	$49, (%rdi)
 1106 0114 75E8     		jne	.L180
 1107 0116 4489CB   		movl	%r9d, %ebx
 1108 0119 83C201   		addl	$1, %edx
 1109 011c 4883C701 		addq	$1, %rdi
 1110 0120 D3E3     		sall	%cl, %ebx
 1111 0122 01DE     		addl	%ebx, %esi
 1112 0124 83FA20   		cmpl	$32, %edx
 1113 0127 75E1     		jne	.L181
 1114              	.L184:
 1115 0129 0FB610   		movzbl	(%rax), %edx
 1116 012c 4863F6   		movslq	%esi, %rsi
 1117 012f 410FB60C 		movzbl	(%r8,%rsi), %ecx
 1117      30
 1118 0134 0FB67001 		movzbl	1(%rax), %esi
 1119 0138 C6400800 		movb	$0, 8(%rax)
 1120 013c 885001   		movb	%dl, 1(%rax)
 1121 013f 0FB65002 		movzbl	2(%rax), %edx
 1122 0143 408830   		movb	%sil, (%rax)
 1123 0146 0FB67003 		movzbl	3(%rax), %esi
 1124 014a 885003   		movb	%dl, 3(%rax)
 1125 014d 0FB65004 		movzbl	4(%rax), %edx
 1126 0151 40887002 		movb	%sil, 2(%rax)
 1127 0155 0FB67005 		movzbl	5(%rax), %esi
 1128 0159 885005   		movb	%dl, 5(%rax)
 1129 015c 0FB65006 		movzbl	6(%rax), %edx
 1130 0160 40887004 		movb	%sil, 4(%rax)
 1131 0164 884806   		movb	%cl, 6(%rax)
 1132 0167 885007   		movb	%dl, 7(%rax)
 1133 016a 5B       		popq	%rbx
 1134              		.cfi_def_cfa_offset 8
 1135 016b C3       		ret
 1136              		.cfi_endproc
 1137              	.LFE57:
 1139              		.section	.text.unlikely
 1140              	.LCOLDE17:
 1141              		.text
 1142              	.LHOTE17:
 1143              		.section	.rodata.str1.1
 1144              	.LC18:
 1145 005c 25642020 		.string	"%d                       %d\n"
 1145      20202020 
 1145      20202020 
 1145      20202020 
 1145      20202020 
 1146              		.section	.text.unlikely
 1147              	.LCOLDB19:
 1148              		.text
 1149              	.LHOTB19:
 1150 016c 0F1F4000 		.p2align 4,,15
 1151              		.globl	get_coordinate
 1153              	get_coordinate:
 1154              	.LFB58:
 1155              		.cfi_startproc
 1156 0170 C7060000 		movl	$0, (%rsi)
 1156      0000
 1157 0176 C7020000 		movl	$0, (%rdx)
 1157      0000
 1158 017c 803F31   		cmpb	$49, (%rdi)
 1159 017f 743F     		je	.L195
 1160 0181 807F0131 		cmpb	$49, 1(%rdi)
 1161 0185 7442     		je	.L196
 1162              	.L188:
 1163 0187 807F0231 		cmpb	$49, 2(%rdi)
 1164 018b 7445     		je	.L197
 1165              	.L189:
 1166 018d 807F0331 		cmpb	$49, 3(%rdi)
 1167 0191 7448     		je	.L198
 1168              	.L190:
 1169 0193 807F0431 		cmpb	$49, 4(%rdi)
 1170 0197 8B0A     		movl	(%rdx), %ecx
 1171 0199 744B     		je	.L199
 1172              	.L191:
 1173 019b 807F0531 		cmpb	$49, 5(%rdi)
 1174 019f 7450     		je	.L200
 1175              	.L192:
 1176 01a1 807F0631 		cmpb	$49, 6(%rdi)
 1177 01a5 7455     		je	.L201
 1178              	.L193:
 1179 01a7 807F0731 		cmpb	$49, 7(%rdi)
 1180 01ab 745A     		je	.L202
 1181              	.L194:
 1182 01ad 8B16     		movl	(%rsi), %edx
 1183 01af BF010000 		movl	$1, %edi
 1183      00
 1184 01b4 BE000000 		movl	$.LC18, %esi
 1184      00
 1185 01b9 31C0     		xorl	%eax, %eax
 1186 01bb E9000000 		jmp	__printf_chk
 1186      00
 1187              		.p2align 4,,10
 1188              		.p2align 3
 1189              	.L195:
 1190 01c0 830601   		addl	$1, (%rsi)
 1191 01c3 807F0131 		cmpb	$49, 1(%rdi)
 1192 01c7 75BE     		jne	.L188
 1193              	.L196:
 1194 01c9 830602   		addl	$2, (%rsi)
 1195 01cc 807F0231 		cmpb	$49, 2(%rdi)
 1196 01d0 75BB     		jne	.L189
 1197              	.L197:
 1198 01d2 830604   		addl	$4, (%rsi)
 1199 01d5 807F0331 		cmpb	$49, 3(%rdi)
 1200 01d9 75B8     		jne	.L190
 1201              	.L198:
 1202 01db 830608   		addl	$8, (%rsi)
 1203 01de 807F0431 		cmpb	$49, 4(%rdi)
 1204 01e2 8B0A     		movl	(%rdx), %ecx
 1205 01e4 75B5     		jne	.L191
 1206              	.L199:
 1207 01e6 83C101   		addl	$1, %ecx
 1208 01e9 890A     		movl	%ecx, (%rdx)
 1209 01eb 807F0531 		cmpb	$49, 5(%rdi)
 1210 01ef 75B0     		jne	.L192
 1211              	.L200:
 1212 01f1 83C102   		addl	$2, %ecx
 1213 01f4 890A     		movl	%ecx, (%rdx)
 1214 01f6 807F0631 		cmpb	$49, 6(%rdi)
 1215 01fa 75AB     		jne	.L193
 1216              	.L201:
 1217 01fc 83C104   		addl	$4, %ecx
 1218 01ff 890A     		movl	%ecx, (%rdx)
 1219 0201 807F0731 		cmpb	$49, 7(%rdi)
 1220 0205 75A6     		jne	.L194
 1221              	.L202:
 1222 0207 83C108   		addl	$8, %ecx
 1223 020a 890A     		movl	%ecx, (%rdx)
 1224 020c EB9F     		jmp	.L194
 1225              		.cfi_endproc
 1226              	.LFE58:
 1228              		.section	.text.unlikely
 1229              	.LCOLDE19:
 1230              		.text
 1231              	.LHOTE19:
 1232              		.section	.text.unlikely
 1233              	.LCOLDB20:
 1234              		.text
 1235              	.LHOTB20:
 1236 020e 6690     		.p2align 4,,15
 1237              		.globl	func
 1239              	func:
 1240              	.LFB59:
 1241              		.cfi_startproc
 1242 0210 4156     		pushq	%r14
 1243              		.cfi_def_cfa_offset 16
 1244              		.cfi_offset 14, -16
 1245 0212 4155     		pushq	%r13
 1246              		.cfi_def_cfa_offset 24
 1247              		.cfi_offset 13, -24
 1248 0214 4989D6   		movq	%rdx, %r14
 1249 0217 4154     		pushq	%r12
 1250              		.cfi_def_cfa_offset 32
 1251              		.cfi_offset 12, -32
 1252 0219 55       		pushq	%rbp
 1253              		.cfi_def_cfa_offset 40
 1254              		.cfi_offset 6, -40
 1255 021a 89FD     		movl	%edi, %ebp
 1256 021c 53       		pushq	%rbx
 1257              		.cfi_def_cfa_offset 48
 1258              		.cfi_offset 3, -48
 1259 021d BF410000 		movl	$65, %edi
 1259      00
 1260 0222 4189CD   		movl	%ecx, %r13d
 1261 0225 4189F4   		movl	%esi, %r12d
 1262 0228 E8000000 		call	malloc
 1262      00
 1263 022d BE010000 		movl	$1, %esi
 1263      00
 1264 0232 BF080000 		movl	$8, %edi
 1264      00
 1265 0237 4889C3   		movq	%rax, %rbx
 1266 023a E8000000 		call	calloc
 1266      00
 1267 023f 4585ED   		testl	%r13d, %r13d
 1268 0242 0F8E6801 		jle	.L223
 1268      0000
 1269 0248 418D4DFF 		leal	-1(%r13), %ecx
 1270 024c 4C89F2   		movq	%r14, %rdx
 1271 024f 488D4C89 		leaq	5(%rcx,%rcx,4), %rcx
 1271      05
 1272 0254 498D348E 		leaq	(%r14,%rcx,4), %rsi
 1273 0258 EB13     		jmp	.L222
 1274 025a 660F1F44 		.p2align 4,,10
 1274      0000
 1275              		.p2align 3
 1276              	.L214:
 1277 0260 4883C214 		addq	$20, %rdx
 1278 0264 4839F2   		cmpq	%rsi, %rdx
 1279 0267 0F844301 		je	.L223
 1279      0000
 1280              	.L222:
 1281 026d 392A     		cmpl	%ebp, (%rdx)
 1282 026f 75EF     		jne	.L214
 1283 0271 44396204 		cmpl	%r12d, 4(%rdx)
 1284 0275 75E9     		jne	.L214
 1285 0277 48637A08 		movslq	8(%rdx), %rdi
 1286 027b 8B4A10   		movl	16(%rdx), %ecx
 1287 027e 448D5703 		leal	3(%rdi), %r10d
 1288 0282 85FF     		testl	%edi, %edi
 1289 0284 448D04FD 		leal	0(,%rdi,8), %r8d
 1289      00000000 
 1290 028c C6043801 		movb	$1, (%rax,%rdi)
 1291 0290 440F49D7 		cmovns	%edi, %r10d
 1292 0294 4D63C0   		movslq	%r8d, %r8
 1293 0297 4589D1   		movl	%r10d, %r9d
 1294 029a 41C1EA1F 		shrl	$31, %r10d
 1295 029e 42C60403 		movb	$49, (%rbx,%r8)
 1295      31
 1296 02a3 41C1F902 		sarl	$2, %r9d
 1297 02a7 4501D1   		addl	%r10d, %r9d
 1298 02aa 4183E101 		andl	$1, %r9d
 1299 02ae 4529D1   		subl	%r10d, %r9d
 1300 02b1 4189FA   		movl	%edi, %r10d
 1301 02b4 4183F901 		cmpl	$1, %r9d
 1302 02b8 410F94C1 		sete	%r9b
 1303 02bc 41C1EA1F 		shrl	$31, %r10d
 1304 02c0 4183C130 		addl	$48, %r9d
 1305 02c4 4101FA   		addl	%edi, %r10d
 1306 02c7 46884C03 		movb	%r9b, 2(%rbx,%r8)
 1306      02
 1307 02cc 4589D1   		movl	%r10d, %r9d
 1308 02cf 41C1EA1F 		shrl	$31, %r10d
 1309 02d3 41D1F9   		sarl	%r9d
 1310 02d6 4501D1   		addl	%r10d, %r9d
 1311 02d9 4183E101 		andl	$1, %r9d
 1312 02dd 4529D1   		subl	%r10d, %r9d
 1313 02e0 4189FA   		movl	%edi, %r10d
 1314 02e3 4183F901 		cmpl	$1, %r9d
 1315 02e7 410F94C1 		sete	%r9b
 1316 02eb 41C1EA1F 		shrl	$31, %r10d
 1317 02ef 4183C130 		addl	$48, %r9d
 1318 02f3 46884C03 		movb	%r9b, 3(%rbx,%r8)
 1318      03
 1319 02f8 468D0C17 		leal	(%rdi,%r10), %r9d
 1320 02fc 4183E101 		andl	$1, %r9d
 1321 0300 4529D1   		subl	%r10d, %r9d
 1322 0303 448D5103 		leal	3(%rcx), %r10d
 1323 0307 4183F901 		cmpl	$1, %r9d
 1324 030b 410F94C1 		sete	%r9b
 1325 030f 4183C130 		addl	$48, %r9d
 1326 0313 837A0C01 		cmpl	$1, 12(%rdx)
 1327 0317 46884C03 		movb	%r9b, 4(%rbx,%r8)
 1327      04
 1328 031c 410F94C1 		sete	%r9b
 1329 0320 4183C130 		addl	$48, %r9d
 1330 0324 85C9     		testl	%ecx, %ecx
 1331 0326 440F49D1 		cmovns	%ecx, %r10d
 1332 032a 46884C03 		movb	%r9b, 1(%rbx,%r8)
 1332      01
 1333 032f 4589D1   		movl	%r10d, %r9d
 1334 0332 41C1EA1F 		shrl	$31, %r10d
 1335 0336 41C1F902 		sarl	$2, %r9d
 1336 033a 4501D1   		addl	%r10d, %r9d
 1337 033d 4183E101 		andl	$1, %r9d
 1338 0341 4529D1   		subl	%r10d, %r9d
 1339 0344 4189CA   		movl	%ecx, %r10d
 1340 0347 4183F901 		cmpl	$1, %r9d
 1341 034b 410F94C1 		sete	%r9b
 1342 034f 41C1EA1F 		shrl	$31, %r10d
 1343 0353 4101CA   		addl	%ecx, %r10d
 1344 0356 4183C130 		addl	$48, %r9d
 1345 035a 46884C03 		movb	%r9b, 5(%rbx,%r8)
 1345      05
 1346 035f 4589D1   		movl	%r10d, %r9d
 1347 0362 41C1EA1F 		shrl	$31, %r10d
 1348 0366 41D1F9   		sarl	%r9d
 1349 0369 4501D1   		addl	%r10d, %r9d
 1350 036c 4183E101 		andl	$1, %r9d
 1351 0370 4529D1   		subl	%r10d, %r9d
 1352 0373 4183F901 		cmpl	$1, %r9d
 1353 0377 410F94C1 		sete	%r9b
 1354 037b 4183C130 		addl	$48, %r9d
 1355 037f 46884C03 		movb	%r9b, 6(%rbx,%r8)
 1355      06
 1356 0384 4189C9   		movl	%ecx, %r9d
 1357 0387 41C1E91F 		shrl	$31, %r9d
 1358 038b 4401C9   		addl	%r9d, %ecx
 1359 038e 83E101   		andl	$1, %ecx
 1360 0391 4429C9   		subl	%r9d, %ecx
 1361 0394 83F901   		cmpl	$1, %ecx
 1362 0397 0F94C1   		sete	%cl
 1363 039a 4883C214 		addq	$20, %rdx
 1364 039e 83C130   		addl	$48, %ecx
 1365 03a1 4839F2   		cmpq	%rsi, %rdx
 1366 03a4 42884C03 		movb	%cl, 7(%rbx,%r8)
 1366      07
 1367 03a9 0F85BEFE 		jne	.L222
 1367      FFFF
 1368 03af 90       		.p2align 4,,10
 1369              		.p2align 3
 1370              	.L223:
 1371 03b0 803800   		cmpb	$0, (%rax)
 1372 03b3 751F     		jne	.L205
 1373 03b5 C6430230 		movb	$48, 2(%rbx)
 1374 03b9 C6430330 		movb	$48, 3(%rbx)
 1375 03bd C6430430 		movb	$48, 4(%rbx)
 1376 03c1 C60330   		movb	$48, (%rbx)
 1377 03c4 C6430130 		movb	$48, 1(%rbx)
 1378 03c8 C6430530 		movb	$48, 5(%rbx)
 1379 03cc C6430630 		movb	$48, 6(%rbx)
 1380 03d0 C6430730 		movb	$48, 7(%rbx)
 1381              	.L205:
 1382 03d4 80780100 		cmpb	$0, 1(%rax)
 1383 03d8 7520     		jne	.L206
 1384 03da C6430A30 		movb	$48, 10(%rbx)
 1385 03de C6430B30 		movb	$48, 11(%rbx)
 1386 03e2 C6430C31 		movb	$49, 12(%rbx)
 1387 03e6 C6430830 		movb	$48, 8(%rbx)
 1388 03ea C6430930 		movb	$48, 9(%rbx)
 1389 03ee C6430D30 		movb	$48, 13(%rbx)
 1390 03f2 C6430E30 		movb	$48, 14(%rbx)
 1391 03f6 C6430F30 		movb	$48, 15(%rbx)
 1392              	.L206:
 1393 03fa 80780200 		cmpb	$0, 2(%rax)
 1394 03fe 7520     		jne	.L207
 1395 0400 C6431230 		movb	$48, 18(%rbx)
 1396 0404 C6431331 		movb	$49, 19(%rbx)
 1397 0408 C6431430 		movb	$48, 20(%rbx)
 1398 040c C6431030 		movb	$48, 16(%rbx)
 1399 0410 C6431130 		movb	$48, 17(%rbx)
 1400 0414 C6431530 		movb	$48, 21(%rbx)
 1401 0418 C6431630 		movb	$48, 22(%rbx)
 1402 041c C6431730 		movb	$48, 23(%rbx)
 1403              	.L207:
 1404 0420 80780300 		cmpb	$0, 3(%rax)
 1405 0424 7520     		jne	.L208
 1406 0426 C6431A30 		movb	$48, 26(%rbx)
 1407 042a C6431B31 		movb	$49, 27(%rbx)
 1408 042e C6431C31 		movb	$49, 28(%rbx)
 1409 0432 C6431830 		movb	$48, 24(%rbx)
 1410 0436 C6431930 		movb	$48, 25(%rbx)
 1411 043a C6431D30 		movb	$48, 29(%rbx)
 1412 043e C6431E30 		movb	$48, 30(%rbx)
 1413 0442 C6431F30 		movb	$48, 31(%rbx)
 1414              	.L208:
 1415 0446 80780400 		cmpb	$0, 4(%rax)
 1416 044a 7520     		jne	.L209
 1417 044c C6432231 		movb	$49, 34(%rbx)
 1418 0450 C6432330 		movb	$48, 35(%rbx)
 1419 0454 C6432430 		movb	$48, 36(%rbx)
 1420 0458 C6432030 		movb	$48, 32(%rbx)
 1421 045c C6432130 		movb	$48, 33(%rbx)
 1422 0460 C6432530 		movb	$48, 37(%rbx)
 1423 0464 C6432630 		movb	$48, 38(%rbx)
 1424 0468 C6432730 		movb	$48, 39(%rbx)
 1425              	.L209:
 1426 046c 80780500 		cmpb	$0, 5(%rax)
 1427 0470 7520     		jne	.L210
 1428 0472 C6432A31 		movb	$49, 42(%rbx)
 1429 0476 C6432B30 		movb	$48, 43(%rbx)
 1430 047a C6432C31 		movb	$49, 44(%rbx)
 1431 047e C6432830 		movb	$48, 40(%rbx)
 1432 0482 C6432930 		movb	$48, 41(%rbx)
 1433 0486 C6432D30 		movb	$48, 45(%rbx)
 1434 048a C6432E30 		movb	$48, 46(%rbx)
 1435 048e C6432F30 		movb	$48, 47(%rbx)
 1436              	.L210:
 1437 0492 80780600 		cmpb	$0, 6(%rax)
 1438 0496 7520     		jne	.L211
 1439 0498 C6433231 		movb	$49, 50(%rbx)
 1440 049c C6433331 		movb	$49, 51(%rbx)
 1441 04a0 C6433430 		movb	$48, 52(%rbx)
 1442 04a4 C6433030 		movb	$48, 48(%rbx)
 1443 04a8 C6433130 		movb	$48, 49(%rbx)
 1444 04ac C6433530 		movb	$48, 53(%rbx)
 1445 04b0 C6433630 		movb	$48, 54(%rbx)
 1446 04b4 C6433730 		movb	$48, 55(%rbx)
 1447              	.L211:
 1448 04b8 80780700 		cmpb	$0, 7(%rax)
 1449 04bc 7520     		jne	.L212
 1450 04be C6433A31 		movb	$49, 58(%rbx)
 1451 04c2 C6433B31 		movb	$49, 59(%rbx)
 1452 04c6 C6433C31 		movb	$49, 60(%rbx)
 1453 04ca C6433830 		movb	$48, 56(%rbx)
 1454 04ce C6433930 		movb	$48, 57(%rbx)
 1455 04d2 C6433D30 		movb	$48, 61(%rbx)
 1456 04d6 C6433E30 		movb	$48, 62(%rbx)
 1457 04da C6433F30 		movb	$48, 63(%rbx)
 1458              	.L212:
 1459 04de 4889D8   		movq	%rbx, %rax
 1460 04e1 C6434000 		movb	$0, 64(%rbx)
 1461 04e5 5B       		popq	%rbx
 1462              		.cfi_def_cfa_offset 40
 1463 04e6 5D       		popq	%rbp
 1464              		.cfi_def_cfa_offset 32
 1465 04e7 415C     		popq	%r12
 1466              		.cfi_def_cfa_offset 24
 1467 04e9 415D     		popq	%r13
 1468              		.cfi_def_cfa_offset 16
 1469 04eb 415E     		popq	%r14
 1470              		.cfi_def_cfa_offset 8
 1471 04ed C3       		ret
 1472              		.cfi_endproc
 1473              	.LFE59:
 1475              		.section	.text.unlikely
 1476              	.LCOLDE20:
 1477              		.text
 1478              	.LHOTE20:
 1479              		.section	.text.unlikely
 1480              	.LCOLDB21:
 1481              		.text
 1482              	.LHOTB21:
 1483 04ee 6690     		.p2align 4,,15
 1484              		.globl	xor
 1486              	xor:
 1487              	.LFB60:
 1488              		.cfi_startproc
 1489 04f0 4038F7   		cmpb	%sil, %dil
 1490 04f3 0F95C0   		setne	%al
 1491 04f6 83C030   		addl	$48, %eax
 1492 04f9 C3       		ret
 1493              		.cfi_endproc
 1494              	.LFE60:
 1496              		.section	.text.unlikely
 1497              	.LCOLDE21:
 1498              		.text
 1499              	.LHOTE21:
 1500              		.section	.text.unlikely
 1501              	.LCOLDB22:
 1502              		.text
 1503              	.LHOTB22:
 1504 04fa 660F1F44 		.p2align 4,,15
 1504      0000
 1505              		.globl	and
 1507              	and:
 1508              	.LFB61:
 1509              		.cfi_startproc
 1510 0500 4080FF31 		cmpb	$49, %dil
 1511 0504 7512     		jne	.L242
 1512 0506 4080FE31 		cmpb	$49, %sil
 1513 050a B8310000 		movl	$49, %eax
 1513      00
 1514 050f 7507     		jne	.L242
 1515 0511 F3C3     		rep ret
 1516              		.p2align 4,,10
 1517 0513 0F1F4400 		.p2align 3
 1517      00
 1518              	.L242:
 1519 0518 B8300000 		movl	$48, %eax
 1519      00
 1520 051d C3       		ret
 1521              		.cfi_endproc
 1522              	.LFE61:
 1524              		.section	.text.unlikely
 1525              	.LCOLDE22:
 1526              		.text
 1527              	.LHOTE22:
 1528              		.section	.text.unlikely
 1529              	.LCOLDB25:
 1530              		.text
 1531              	.LHOTB25:
 1532 051e 6690     		.p2align 4,,15
 1533              		.globl	decrypt
 1535              	decrypt:
 1536              	.LFB62:
 1537              		.cfi_startproc
 1538 0520 4157     		pushq	%r15
 1539              		.cfi_def_cfa_offset 16
 1540              		.cfi_offset 15, -16
 1541 0522 4156     		pushq	%r14
 1542              		.cfi_def_cfa_offset 24
 1543              		.cfi_offset 14, -24
 1544 0524 4155     		pushq	%r13
 1545              		.cfi_def_cfa_offset 32
 1546              		.cfi_offset 13, -32
 1547 0526 4154     		pushq	%r12
 1548              		.cfi_def_cfa_offset 40
 1549              		.cfi_offset 12, -40
 1550 0528 4989F5   		movq	%rsi, %r13
 1551 052b 55       		pushq	%rbp
 1552              		.cfi_def_cfa_offset 48
 1553              		.cfi_offset 6, -48
 1554 052c 53       		pushq	%rbx
 1555              		.cfi_def_cfa_offset 56
 1556              		.cfi_offset 3, -56
 1557 052d 4889FD   		movq	%rdi, %rbp
 1558 0530 BF210000 		movl	$33, %edi
 1558      00
 1559 0535 4883EC08 		subq	$8, %rsp
 1560              		.cfi_def_cfa_offset 64
 1561 0539 E8000000 		call	malloc
 1561      00
 1562 053e 4C89EA   		movq	%r13, %rdx
 1563 0541 4889C3   		movq	%rax, %rbx
 1564 0544 48F7DA   		negq	%rdx
 1565 0547 83E20F   		andl	$15, %edx
 1566 054a 0F845508 		je	.L325
 1566      0000
 1567 0550 31C0     		xorl	%eax, %eax
 1568 0552 41807D00 		cmpb	$48, 0(%r13)
 1568      30
 1569 0557 0F94C0   		sete	%al
 1570 055a 83FA01   		cmpl	$1, %edx
 1571 055d 0F840C09 		je	.L326
 1571      0000
 1572 0563 31C9     		xorl	%ecx, %ecx
 1573 0565 41807D01 		cmpb	$48, 1(%r13)
 1573      30
 1574 056a 0F94C1   		sete	%cl
 1575 056d 01C8     		addl	%ecx, %eax
 1576 056f 83FA02   		cmpl	$2, %edx
 1577 0572 0F840609 		je	.L327
 1577      0000
 1578 0578 31C9     		xorl	%ecx, %ecx
 1579 057a 41807D02 		cmpb	$48, 2(%r13)
 1579      30
 1580 057f 0F94C1   		sete	%cl
 1581 0582 01C8     		addl	%ecx, %eax
 1582 0584 83FA03   		cmpl	$3, %edx
 1583 0587 0F840009 		je	.L328
 1583      0000
 1584 058d 31C9     		xorl	%ecx, %ecx
 1585 058f 41807D03 		cmpb	$48, 3(%r13)
 1585      30
 1586 0594 0F94C1   		sete	%cl
 1587 0597 01C8     		addl	%ecx, %eax
 1588 0599 83FA04   		cmpl	$4, %edx
 1589 059c 0F84FA08 		je	.L329
 1589      0000
 1590 05a2 31C9     		xorl	%ecx, %ecx
 1591 05a4 41807D04 		cmpb	$48, 4(%r13)
 1591      30
 1592 05a9 0F94C1   		sete	%cl
 1593 05ac 01C8     		addl	%ecx, %eax
 1594 05ae 83FA05   		cmpl	$5, %edx
 1595 05b1 0F84F408 		je	.L330
 1595      0000
 1596 05b7 31C9     		xorl	%ecx, %ecx
 1597 05b9 41807D05 		cmpb	$48, 5(%r13)
 1597      30
 1598 05be 0F94C1   		sete	%cl
 1599 05c1 01C8     		addl	%ecx, %eax
 1600 05c3 83FA06   		cmpl	$6, %edx
 1601 05c6 0F84EE08 		je	.L331
 1601      0000
 1602 05cc 31C9     		xorl	%ecx, %ecx
 1603 05ce 41807D06 		cmpb	$48, 6(%r13)
 1603      30
 1604 05d3 0F94C1   		sete	%cl
 1605 05d6 01C8     		addl	%ecx, %eax
 1606 05d8 83FA07   		cmpl	$7, %edx
 1607 05db 0F84E808 		je	.L332
 1607      0000
 1608 05e1 31C9     		xorl	%ecx, %ecx
 1609 05e3 41807D07 		cmpb	$48, 7(%r13)
 1609      30
 1610 05e8 0F94C1   		sete	%cl
 1611 05eb 01C8     		addl	%ecx, %eax
 1612 05ed 83FA08   		cmpl	$8, %edx
 1613 05f0 0F84E208 		je	.L333
 1613      0000
 1614 05f6 31C9     		xorl	%ecx, %ecx
 1615 05f8 41807D08 		cmpb	$48, 8(%r13)
 1615      30
 1616 05fd 0F94C1   		sete	%cl
 1617 0600 01C8     		addl	%ecx, %eax
 1618 0602 83FA09   		cmpl	$9, %edx
 1619 0605 0F84DC08 		je	.L334
 1619      0000
 1620 060b 31C9     		xorl	%ecx, %ecx
 1621 060d 41807D09 		cmpb	$48, 9(%r13)
 1621      30
 1622 0612 0F94C1   		sete	%cl
 1623 0615 01C8     		addl	%ecx, %eax
 1624 0617 83FA0A   		cmpl	$10, %edx
 1625 061a 0F84D608 		je	.L335
 1625      0000
 1626 0620 31C9     		xorl	%ecx, %ecx
 1627 0622 41807D0A 		cmpb	$48, 10(%r13)
 1627      30
 1628 0627 0F94C1   		sete	%cl
 1629 062a 01C8     		addl	%ecx, %eax
 1630 062c 83FA0B   		cmpl	$11, %edx
 1631 062f 0F84D008 		je	.L336
 1631      0000
 1632 0635 31C9     		xorl	%ecx, %ecx
 1633 0637 41807D0B 		cmpb	$48, 11(%r13)
 1633      30
 1634 063c 0F94C1   		sete	%cl
 1635 063f 01C8     		addl	%ecx, %eax
 1636 0641 83FA0C   		cmpl	$12, %edx
 1637 0644 0F84CA08 		je	.L337
 1637      0000
 1638 064a 31C9     		xorl	%ecx, %ecx
 1639 064c 41807D0C 		cmpb	$48, 12(%r13)
 1639      30
 1640 0651 0F94C1   		sete	%cl
 1641 0654 01C8     		addl	%ecx, %eax
 1642 0656 83FA0D   		cmpl	$13, %edx
 1643 0659 0F84C408 		je	.L338
 1643      0000
 1644 065f 31C9     		xorl	%ecx, %ecx
 1645 0661 41807D0D 		cmpb	$48, 13(%r13)
 1645      30
 1646 0666 0F94C1   		sete	%cl
 1647 0669 01C8     		addl	%ecx, %eax
 1648 066b 83FA0F   		cmpl	$15, %edx
 1649 066e 0F85EC07 		jne	.L339
 1649      0000
 1650 0674 31C9     		xorl	%ecx, %ecx
 1651 0676 41807D0E 		cmpb	$48, 14(%r13)
 1651      30
 1652 067b BE110000 		movl	$17, %esi
 1652      00
 1653 0680 0F94C1   		sete	%cl
 1654 0683 01C8     		addl	%ecx, %eax
 1655 0685 B90F0000 		movl	$15, %ecx
 1655      00
 1656              	.L248:
 1657 068a BF200000 		movl	$32, %edi
 1657      00
 1658 068f 4189D0   		movl	%edx, %r8d
 1659 0692 41B90100 		movl	$1, %r9d
 1659      0000
 1660 0698 29D7     		subl	%edx, %edi
 1661 069a 89FA     		movl	%edi, %edx
 1662 069c BF100000 		movl	$16, %edi
 1662      00
 1663              	.L247:
 1664 06a1 4D01E8   		addq	%r13, %r8
 1665 06a4 660F6F2D 		movdqa	.LC23(%rip), %xmm5
 1665      00000000 
 1666 06ac 660FEFE4 		pxor	%xmm4, %xmm4
 1667 06b0 4183F902 		cmpl	$2, %r9d
 1668 06b4 66410F6F 		movdqa	(%r8), %xmm1
 1668      08
 1669 06b9 660F6F15 		movdqa	.LC24(%rip), %xmm2
 1669      00000000 
 1670 06c1 660F74CD 		pcmpeqb	%xmm5, %xmm1
 1671 06c5 660F6FDC 		movdqa	%xmm4, %xmm3
 1672 06c9 660FDBCA 		pand	%xmm2, %xmm1
 1673 06cd 660F64D9 		pcmpgtb	%xmm1, %xmm3
 1674 06d1 660F6FC1 		movdqa	%xmm1, %xmm0
 1675 06d5 660F68CB 		punpckhbw	%xmm3, %xmm1
 1676 06d9 660F60C3 		punpcklbw	%xmm3, %xmm0
 1677 06dd 660FEFDB 		pxor	%xmm3, %xmm3
 1678 06e1 660F6FF0 		movdqa	%xmm0, %xmm6
 1679 06e5 660F6FFB 		movdqa	%xmm3, %xmm7
 1680 06e9 660F65F8 		pcmpgtw	%xmm0, %xmm7
 1681 06ed 660F61F7 		punpcklwd	%xmm7, %xmm6
 1682 06f1 660F69C7 		punpckhwd	%xmm7, %xmm0
 1683 06f5 660F6FFB 		movdqa	%xmm3, %xmm7
 1684 06f9 660F65F9 		pcmpgtw	%xmm1, %xmm7
 1685 06fd 660FFEC6 		paddd	%xmm6, %xmm0
 1686 0701 660F6FF1 		movdqa	%xmm1, %xmm6
 1687 0705 660F69CF 		punpckhwd	%xmm7, %xmm1
 1688 0709 660F61F7 		punpcklwd	%xmm7, %xmm6
 1689 070d 660FFEC6 		paddd	%xmm6, %xmm0
 1690 0711 660FFEC1 		paddd	%xmm1, %xmm0
 1691 0715 7552     		jne	.L249
 1692 0717 66410F6F 		movdqa	16(%r8), %xmm1
 1692      4810
 1693 071d 660F74CD 		pcmpeqb	%xmm5, %xmm1
 1694 0721 660F6FEB 		movdqa	%xmm3, %xmm5
 1695 0725 660FDBCA 		pand	%xmm2, %xmm1
 1696 0729 660F64E1 		pcmpgtb	%xmm1, %xmm4
 1697 072d 660F6FD1 		movdqa	%xmm1, %xmm2
 1698 0731 660F60D4 		punpcklbw	%xmm4, %xmm2
 1699 0735 660F68CC 		punpckhbw	%xmm4, %xmm1
 1700 0739 660F65EA 		pcmpgtw	%xmm2, %xmm5
 1701 073d 660F6FE2 		movdqa	%xmm2, %xmm4
 1702 0741 660F65D9 		pcmpgtw	%xmm1, %xmm3
 1703 0745 660F61E5 		punpcklwd	%xmm5, %xmm4
 1704 0749 660F69D5 		punpckhwd	%xmm5, %xmm2
 1705 074d 660FFEC4 		paddd	%xmm4, %xmm0
 1706 0751 660FFED0 		paddd	%xmm0, %xmm2
 1707 0755 660F6FC1 		movdqa	%xmm1, %xmm0
 1708 0759 660F69CB 		punpckhwd	%xmm3, %xmm1
 1709 075d 660F61C3 		punpcklwd	%xmm3, %xmm0
 1710 0761 660FFEC2 		paddd	%xmm2, %xmm0
 1711 0765 660FFEC1 		paddd	%xmm1, %xmm0
 1712              	.L249:
 1713 0769 660F6FC8 		movdqa	%xmm0, %xmm1
 1714 076d 29FE     		subl	%edi, %esi
 1715 076f 660F73D9 		psrldq	$8, %xmm1
 1715      08
 1716 0774 660FFEC1 		paddd	%xmm1, %xmm0
 1717 0778 660F6FC8 		movdqa	%xmm0, %xmm1
 1718 077c 660F73D9 		psrldq	$4, %xmm1
 1718      04
 1719 0781 660FFEC1 		paddd	%xmm1, %xmm0
 1720 0785 66410F7E 		movd	%xmm0, %r12d
 1720      C4
 1721 078a 4101C4   		addl	%eax, %r12d
 1722 078d 39D7     		cmpl	%edx, %edi
 1723 078f 8D040F   		leal	(%rdi,%rcx), %eax
 1724 0792 0F84A101 		je	.L251
 1724      0000
 1725 0798 4863D0   		movslq	%eax, %rdx
 1726 079b 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1726      0030
 1727 07a1 0F94C2   		sete	%dl
 1728 07a4 0FB6D2   		movzbl	%dl, %edx
 1729 07a7 4101D4   		addl	%edx, %r12d
 1730 07aa 83FE01   		cmpl	$1, %esi
 1731 07ad 8D5001   		leal	1(%rax), %edx
 1732 07b0 0F848301 		je	.L251
 1732      0000
 1733 07b6 4863D2   		movslq	%edx, %rdx
 1734 07b9 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1734      0030
 1735 07bf 0F94C2   		sete	%dl
 1736 07c2 0FB6D2   		movzbl	%dl, %edx
 1737 07c5 4101D4   		addl	%edx, %r12d
 1738 07c8 83FE02   		cmpl	$2, %esi
 1739 07cb 8D5002   		leal	2(%rax), %edx
 1740 07ce 0F846501 		je	.L251
 1740      0000
 1741 07d4 4863D2   		movslq	%edx, %rdx
 1742 07d7 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1742      0030
 1743 07dd 0F94C2   		sete	%dl
 1744 07e0 0FB6D2   		movzbl	%dl, %edx
 1745 07e3 4101D4   		addl	%edx, %r12d
 1746 07e6 83FE03   		cmpl	$3, %esi
 1747 07e9 8D5003   		leal	3(%rax), %edx
 1748 07ec 0F844701 		je	.L251
 1748      0000
 1749 07f2 4863D2   		movslq	%edx, %rdx
 1750 07f5 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1750      0030
 1751 07fb 0F94C2   		sete	%dl
 1752 07fe 0FB6D2   		movzbl	%dl, %edx
 1753 0801 4101D4   		addl	%edx, %r12d
 1754 0804 83FE04   		cmpl	$4, %esi
 1755 0807 8D5004   		leal	4(%rax), %edx
 1756 080a 0F842901 		je	.L251
 1756      0000
 1757 0810 4863D2   		movslq	%edx, %rdx
 1758 0813 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1758      0030
 1759 0819 0F94C2   		sete	%dl
 1760 081c 0FB6D2   		movzbl	%dl, %edx
 1761 081f 4101D4   		addl	%edx, %r12d
 1762 0822 83FE05   		cmpl	$5, %esi
 1763 0825 8D5005   		leal	5(%rax), %edx
 1764 0828 0F840B01 		je	.L251
 1764      0000
 1765 082e 4863D2   		movslq	%edx, %rdx
 1766 0831 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1766      0030
 1767 0837 0F94C2   		sete	%dl
 1768 083a 0FB6D2   		movzbl	%dl, %edx
 1769 083d 4101D4   		addl	%edx, %r12d
 1770 0840 83FE06   		cmpl	$6, %esi
 1771 0843 8D5006   		leal	6(%rax), %edx
 1772 0846 0F84ED00 		je	.L251
 1772      0000
 1773 084c 4863D2   		movslq	%edx, %rdx
 1774 084f 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1774      0030
 1775 0855 0F94C2   		sete	%dl
 1776 0858 0FB6D2   		movzbl	%dl, %edx
 1777 085b 4101D4   		addl	%edx, %r12d
 1778 085e 83FE07   		cmpl	$7, %esi
 1779 0861 8D5007   		leal	7(%rax), %edx
 1780 0864 0F84CF00 		je	.L251
 1780      0000
 1781 086a 4863D2   		movslq	%edx, %rdx
 1782 086d 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1782      0030
 1783 0873 0F94C2   		sete	%dl
 1784 0876 0FB6D2   		movzbl	%dl, %edx
 1785 0879 4101D4   		addl	%edx, %r12d
 1786 087c 83FE08   		cmpl	$8, %esi
 1787 087f 8D5008   		leal	8(%rax), %edx
 1788 0882 0F84B100 		je	.L251
 1788      0000
 1789 0888 4863D2   		movslq	%edx, %rdx
 1790 088b 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1790      0030
 1791 0891 0F94C2   		sete	%dl
 1792 0894 0FB6D2   		movzbl	%dl, %edx
 1793 0897 4101D4   		addl	%edx, %r12d
 1794 089a 83FE09   		cmpl	$9, %esi
 1795 089d 8D5009   		leal	9(%rax), %edx
 1796 08a0 0F849300 		je	.L251
 1796      0000
 1797 08a6 4863D2   		movslq	%edx, %rdx
 1798 08a9 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1798      0030
 1799 08af 0F94C2   		sete	%dl
 1800 08b2 0FB6D2   		movzbl	%dl, %edx
 1801 08b5 4101D4   		addl	%edx, %r12d
 1802 08b8 83FE0A   		cmpl	$10, %esi
 1803 08bb 8D500A   		leal	10(%rax), %edx
 1804 08be 7479     		je	.L251
 1805 08c0 4863D2   		movslq	%edx, %rdx
 1806 08c3 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1806      0030
 1807 08c9 0F94C2   		sete	%dl
 1808 08cc 0FB6D2   		movzbl	%dl, %edx
 1809 08cf 4101D4   		addl	%edx, %r12d
 1810 08d2 83FE0B   		cmpl	$11, %esi
 1811 08d5 8D500B   		leal	11(%rax), %edx
 1812 08d8 745F     		je	.L251
 1813 08da 4863D2   		movslq	%edx, %rdx
 1814 08dd 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1814      0030
 1815 08e3 0F94C2   		sete	%dl
 1816 08e6 0FB6D2   		movzbl	%dl, %edx
 1817 08e9 4101D4   		addl	%edx, %r12d
 1818 08ec 83FE0C   		cmpl	$12, %esi
 1819 08ef 8D500C   		leal	12(%rax), %edx
 1820 08f2 7445     		je	.L251
 1821 08f4 4863D2   		movslq	%edx, %rdx
 1822 08f7 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1822      0030
 1823 08fd 0F94C2   		sete	%dl
 1824 0900 0FB6D2   		movzbl	%dl, %edx
 1825 0903 4101D4   		addl	%edx, %r12d
 1826 0906 83FE0D   		cmpl	$13, %esi
 1827 0909 8D500D   		leal	13(%rax), %edx
 1828 090c 742B     		je	.L251
 1829 090e 4863D2   		movslq	%edx, %rdx
 1830 0911 41807C15 		cmpb	$48, 0(%r13,%rdx)
 1830      0030
 1831 0917 0F94C2   		sete	%dl
 1832 091a 83C00E   		addl	$14, %eax
 1833 091d 0FB6D2   		movzbl	%dl, %edx
 1834 0920 4101D4   		addl	%edx, %r12d
 1835 0923 83FE0E   		cmpl	$14, %esi
 1836 0926 7411     		je	.L251
 1837 0928 4898     		cltq
 1838 092a 41807C05 		cmpb	$48, 0(%r13,%rax)
 1838      0030
 1839 0930 0F94C0   		sete	%al
 1840 0933 0FB6C0   		movzbl	%al, %eax
 1841 0936 4101C4   		addl	%eax, %r12d
 1842              	.L251:
 1843 0939 488B4500 		movq	0(%rbp), %rax
 1844 093d BF050000 		movl	$5, %edi
 1844      00
 1845 0942 C6432000 		movb	$0, 32(%rbx)
 1846 0946 488903   		movq	%rax, (%rbx)
 1847 0949 488B4508 		movq	8(%rbp), %rax
 1848 094d 48894308 		movq	%rax, 8(%rbx)
 1849 0951 488B4510 		movq	16(%rbp), %rax
 1850 0955 48894310 		movq	%rax, 16(%rbx)
 1851 0959 488B4518 		movq	24(%rbp), %rax
 1852 095d 48894318 		movq	%rax, 24(%rbx)
 1853 0961 E8000000 		call	malloc
 1853      00
 1854 0966 C6400400 		movb	$0, 4(%rax)
 1855 096a 4889C5   		movq	%rax, %rbp
 1856 096d 410FB645 		movzbl	7(%r13), %eax
 1856      07
 1857 0972 41384503 		cmpb	%al, 3(%r13)
 1858 0976 0F95C0   		setne	%al
 1859 0979 83C030   		addl	$48, %eax
 1860 097c 4138450B 		cmpb	%al, 11(%r13)
 1861 0980 0F95C0   		setne	%al
 1862 0983 83C030   		addl	$48, %eax
 1863 0986 4138450F 		cmpb	%al, 15(%r13)
 1864 098a 0F95C0   		setne	%al
 1865 098d 83C030   		addl	$48, %eax
 1866 0990 41384513 		cmpb	%al, 19(%r13)
 1867 0994 0F95C0   		setne	%al
 1868 0997 83C030   		addl	$48, %eax
 1869 099a 41384517 		cmpb	%al, 23(%r13)
 1870 099e 0F95C0   		setne	%al
 1871 09a1 83C030   		addl	$48, %eax
 1872 09a4 4138451B 		cmpb	%al, 27(%r13)
 1873 09a8 0F95C0   		setne	%al
 1874 09ab 83C030   		addl	$48, %eax
 1875 09ae 4138451F 		cmpb	%al, 31(%r13)
 1876 09b2 0F95C0   		setne	%al
 1877 09b5 83C030   		addl	$48, %eax
 1878 09b8 884503   		movb	%al, 3(%rbp)
 1879 09bb 410FB645 		movzbl	6(%r13), %eax
 1879      06
 1880 09c0 41384502 		cmpb	%al, 2(%r13)
 1881 09c4 0F95C0   		setne	%al
 1882 09c7 83C030   		addl	$48, %eax
 1883 09ca 4138450A 		cmpb	%al, 10(%r13)
 1884 09ce 0F95C0   		setne	%al
 1885 09d1 83C030   		addl	$48, %eax
 1886 09d4 4138450E 		cmpb	%al, 14(%r13)
 1887 09d8 0F95C0   		setne	%al
 1888 09db 83C030   		addl	$48, %eax
 1889 09de 41384512 		cmpb	%al, 18(%r13)
 1890 09e2 0F95C0   		setne	%al
 1891 09e5 83C030   		addl	$48, %eax
 1892 09e8 41384516 		cmpb	%al, 22(%r13)
 1893 09ec 0F95C0   		setne	%al
 1894 09ef 83C030   		addl	$48, %eax
 1895 09f2 4138451A 		cmpb	%al, 26(%r13)
 1896 09f6 0F95C0   		setne	%al
 1897 09f9 83C030   		addl	$48, %eax
 1898 09fc 4138451E 		cmpb	%al, 30(%r13)
 1899 0a00 0F95C0   		setne	%al
 1900 0a03 83C030   		addl	$48, %eax
 1901 0a06 884502   		movb	%al, 2(%rbp)
 1902 0a09 410FB645 		movzbl	5(%r13), %eax
 1902      05
 1903 0a0e 41384501 		cmpb	%al, 1(%r13)
 1904 0a12 0F95C0   		setne	%al
 1905 0a15 83C030   		addl	$48, %eax
 1906 0a18 413A4509 		cmpb	9(%r13), %al
 1907 0a1c 0F95C0   		setne	%al
 1908 0a1f 83C030   		addl	$48, %eax
 1909 0a22 413A450D 		cmpb	13(%r13), %al
 1910 0a26 0F95C0   		setne	%al
 1911 0a29 83C030   		addl	$48, %eax
 1912 0a2c 413A4511 		cmpb	17(%r13), %al
 1913 0a30 0F95C0   		setne	%al
 1914 0a33 83C030   		addl	$48, %eax
 1915 0a36 413A4515 		cmpb	21(%r13), %al
 1916 0a3a 0F95C0   		setne	%al
 1917 0a3d 83C030   		addl	$48, %eax
 1918 0a40 413A4519 		cmpb	25(%r13), %al
 1919 0a44 0F95C0   		setne	%al
 1920 0a47 83C030   		addl	$48, %eax
 1921 0a4a 4138451D 		cmpb	%al, 29(%r13)
 1922 0a4e 0F95C0   		setne	%al
 1923 0a51 83C030   		addl	$48, %eax
 1924 0a54 884501   		movb	%al, 1(%rbp)
 1925 0a57 410FB645 		movzbl	4(%r13), %eax
 1925      04
 1926 0a5c 41384500 		cmpb	%al, 0(%r13)
 1927 0a60 0F95C0   		setne	%al
 1928 0a63 83C030   		addl	$48, %eax
 1929 0a66 41384508 		cmpb	%al, 8(%r13)
 1930 0a6a 0F95C0   		setne	%al
 1931 0a6d 83C030   		addl	$48, %eax
 1932 0a70 4138450C 		cmpb	%al, 12(%r13)
 1933 0a74 0F95C0   		setne	%al
 1934 0a77 83C030   		addl	$48, %eax
 1935 0a7a 41384510 		cmpb	%al, 16(%r13)
 1936 0a7e 0F95C0   		setne	%al
 1937 0a81 83C030   		addl	$48, %eax
 1938 0a84 41384514 		cmpb	%al, 20(%r13)
 1939 0a88 0F95C0   		setne	%al
 1940 0a8b 83C030   		addl	$48, %eax
 1941 0a8e 41384518 		cmpb	%al, 24(%r13)
 1942 0a92 0F95C0   		setne	%al
 1943 0a95 83C030   		addl	$48, %eax
 1944 0a98 4138451C 		cmpb	%al, 28(%r13)
 1945 0a9c 0F848503 		je	.L476
 1945      0000
 1946 0aa2 BF040000 		movl	$4, %edi
 1946      00
 1947 0aa7 C6450031 		movb	$49, 0(%rbp)
 1948 0aab E8000000 		call	malloc
 1948      00
 1949 0ab0 BF040000 		movl	$4, %edi
 1949      00
 1950 0ab5 4989C5   		movq	%rax, %r13
 1951 0ab8 E8000000 		call	malloc
 1951      00
 1952 0abd 488D7801 		leaq	1(%rax), %rdi
 1953 0ac1 41C74500 		movl	$808464432, 0(%r13)
 1953      30303030 
 1954 0ac9 C60030   		movb	$48, (%rax)
 1955 0acc 41C64500 		movb	$49, 0(%r13)
 1955      31
 1956 0ad1 BE310000 		movl	$49, %esi
 1956      00
 1957 0ad6 B9300000 		movl	$48, %ecx
 1957      00
 1958              	.L318:
 1959 0adb 0FB65501 		movzbl	1(%rbp), %edx
 1960 0adf 38D1     		cmpb	%dl, %cl
 1961 0ae1 0F95C1   		setne	%cl
 1962 0ae4 83C130   		addl	$48, %ecx
 1963 0ae7 80FA31   		cmpb	$49, %dl
 1964 0aea 880F     		movb	%cl, (%rdi)
 1965 0aec 0F841C03 		je	.L477
 1965      0000
 1966 0af2 4080FE31 		cmpb	$49, %sil
 1967 0af6 0F84FA02 		je	.L284
 1967      0000
 1968 0afc 488D7802 		leaq	2(%rax), %rdi
 1969 0b00 41C64501 		movb	$48, 1(%r13)
 1969      30
 1970 0b05 BA300000 		movl	$48, %edx
 1970      00
 1971 0b0a BE310000 		movl	$49, %esi
 1971      00
 1972              	.L319:
 1973 0b0f 0FB64D02 		movzbl	2(%rbp), %ecx
 1974 0b13 4038F1   		cmpb	%sil, %cl
 1975 0b16 400F95C6 		setne	%sil
 1976 0b1a 83C630   		addl	$48, %esi
 1977 0b1d 80F931   		cmpb	$49, %cl
 1978 0b20 408837   		movb	%sil, (%rdi)
 1979 0b23 0F84B502 		je	.L478
 1979      0000
 1980 0b29 80FA31   		cmpb	$49, %dl
 1981 0b2c 0F849402 		je	.L289
 1981      0000
 1982 0b32 488D7803 		leaq	3(%rax), %rdi
 1983 0b36 41C64502 		movb	$48, 2(%r13)
 1983      30
 1984 0b3b B9300000 		movl	$48, %ecx
 1984      00
 1985 0b40 BE310000 		movl	$49, %esi
 1985      00
 1986              	.L320:
 1987 0b45 0FB65503 		movzbl	3(%rbp), %edx
 1988 0b49 4038F2   		cmpb	%sil, %dl
 1989 0b4c 400F95C6 		setne	%sil
 1990 0b50 83C630   		addl	$48, %esi
 1991 0b53 80FA31   		cmpb	$49, %dl
 1992 0b56 408837   		movb	%sil, (%rdi)
 1993 0b59 7409     		je	.L310
 1994 0b5b 80F931   		cmpb	$49, %cl
 1995 0b5e 0F94C2   		sete	%dl
 1996 0b61 83C230   		addl	$48, %edx
 1997              	.L310:
 1998 0b64 8B00     		movl	(%rax), %eax
 1999 0b66 4585E4   		testl	%r12d, %r12d
 2000 0b69 41885503 		movb	%dl, 3(%r13)
 2001 0b6d 894500   		movl	%eax, 0(%rbp)
 2002 0b70 0F8E5801 		jle	.L463
 2002      0000
 2003 0b76 440FB675 		movzbl	0(%rbp), %r14d
 2003      00
 2004 0b7b 4531FF   		xorl	%r15d, %r15d
 2005 0b7e 6690     		.p2align 4,,10
 2006              		.p2align 3
 2007              	.L307:
 2008 0b80 31C0     		xorl	%eax, %eax
 2009              		.p2align 4,,10
 2010 0b82 660F1F44 		.p2align 3
 2010      0000
 2011              	.L295:
 2012 0b88 4889C2   		movq	%rax, %rdx
 2013 0b8b 0FB63403 		movzbl	(%rbx,%rax), %esi
 2014 0b8f 83E203   		andl	$3, %edx
 2015 0b92 40387415 		cmpb	%sil, 0(%rbp,%rdx)
 2015      00
 2016 0b97 0F95C2   		setne	%dl
 2017 0b9a 83C230   		addl	$48, %edx
 2018 0b9d 881403   		movb	%dl, (%rbx,%rax)
 2019 0ba0 4883C001 		addq	$1, %rax
 2020 0ba4 4883F820 		cmpq	$32, %rax
 2021 0ba8 75DE     		jne	.L295
 2022 0baa BF050000 		movl	$5, %edi
 2022      00
 2023 0baf E8000000 		call	malloc
 2023      00
 2024 0bb4 BF050000 		movl	$5, %edi
 2024      00
 2025 0bb9 4989C5   		movq	%rax, %r13
 2026 0bbc E8000000 		call	malloc
 2026      00
 2027 0bc1 4180FE31 		cmpb	$49, %r14b
 2028 0bc5 41C64500 		movb	$48, 0(%r13)
 2028      30
 2029 0bca 41C64501 		movb	$48, 1(%r13)
 2029      30
 2030 0bcf 41C64502 		movb	$48, 2(%r13)
 2030      30
 2031 0bd4 41C64503 		movb	$48, 3(%r13)
 2031      30
 2032 0bd9 0F849F01 		je	.L479
 2032      0000
 2033 0bdf C60031   		movb	$49, (%rax)
 2034 0be2 31D2     		xorl	%edx, %edx
 2035 0be4 BF300000 		movl	$48, %edi
 2035      00
 2036 0be9 41BE3100 		movl	$49, %r14d
 2036      0000
 2037              	.L311:
 2038 0bef 0FB64D01 		movzbl	1(%rbp), %ecx
 2039 0bf3 4138CE   		cmpb	%cl, %r14b
 2040 0bf6 400F95C6 		setne	%sil
 2041 0bfa 83C630   		addl	$48, %esi
 2042 0bfd 80F931   		cmpb	$49, %cl
 2043 0c00 40887001 		movb	%sil, 1(%rax)
 2044 0c04 0F84FC00 		je	.L480
 2044      0000
 2045 0c0a 4080FF31 		cmpb	$49, %dil
 2046 0c0e 0F84FC00 		je	.L322
 2046      0000
 2047              	.L321:
 2048 0c14 80F931   		cmpb	$49, %cl
 2049 0c17 0F94C1   		sete	%cl
 2050 0c1a 21CA     		andl	%ecx, %edx
 2051 0c1c 80FA01   		cmpb	$1, %dl
 2052 0c1f 89D7     		movl	%edx, %edi
 2053 0c21 4519C0   		sbbl	%r8d, %r8d
 2054 0c24 F7DF     		negl	%edi
 2055 0c26 4183C031 		addl	$49, %r8d
 2056 0c2a 83C731   		addl	$49, %edi
 2057              	.L313:
 2058 0c2d 0FB64D02 		movzbl	2(%rbp), %ecx
 2059 0c31 45884501 		movb	%r8b, 1(%r13)
 2060 0c35 4038CF   		cmpb	%cl, %dil
 2061 0c38 400F95C7 		setne	%dil
 2062 0c3c 83C730   		addl	$48, %edi
 2063 0c3f 80F931   		cmpb	$49, %cl
 2064 0c42 40887802 		movb	%dil, 2(%rax)
 2065 0c46 0F849400 		je	.L481
 2065      0000
 2066 0c4c 4180F831 		cmpb	$49, %r8b
 2067 0c50 0F849400 		je	.L324
 2067      0000
 2068              	.L323:
 2069 0c56 80F931   		cmpb	$49, %cl
 2070 0c59 0F94C1   		sete	%cl
 2071 0c5c 21CA     		andl	%ecx, %edx
 2072 0c5e 80FA01   		cmpb	$1, %dl
 2073 0c61 4189D0   		movl	%edx, %r8d
 2074 0c64 4519C9   		sbbl	%r9d, %r9d
 2075 0c67 41F7D8   		negl	%r8d
 2076 0c6a 4183C131 		addl	$49, %r9d
 2077 0c6e 4183C031 		addl	$49, %r8d
 2078              	.L315:
 2079 0c72 0FB64D03 		movzbl	3(%rbp), %ecx
 2080 0c76 45884D02 		movb	%r9b, 2(%r13)
 2081 0c7a 4138C8   		cmpb	%cl, %r8b
 2082 0c7d 410F95C0 		setne	%r8b
 2083 0c81 4183C030 		addl	$48, %r8d
 2084 0c85 80F931   		cmpb	$49, %cl
 2085 0c88 44884003 		movb	%r8b, 3(%rax)
 2086 0c8c 0F84D300 		je	.L482
 2086      0000
 2087 0c92 4180F931 		cmpb	$49, %r9b
 2088 0c96 0F84FF00 		je	.L483
 2088      0000
 2089              	.L316:
 2090 0c9c 80F931   		cmpb	$49, %cl
 2091 0c9f 0F858D02 		jne	.L373
 2091      0000
 2092 0ca5 84D2     		testb	%dl, %dl
 2093 0ca7 0F848502 		je	.L373
 2093      0000
 2094              	.L309:
 2095 0cad 4183C701 		addl	$1, %r15d
 2096 0cb1 41884D03 		movb	%cl, 3(%r13)
 2097 0cb5 44887500 		movb	%r14b, 0(%rbp)
 2098 0cb9 4539FC   		cmpl	%r15d, %r12d
 2099 0cbc 40887501 		movb	%sil, 1(%rbp)
 2100 0cc0 40887D02 		movb	%dil, 2(%rbp)
 2101 0cc4 44884503 		movb	%r8b, 3(%rbp)
 2102 0cc8 0F85B2FE 		jne	.L307
 2102      FFFF
 2103              	.L463:
 2104 0cce 4883C408 		addq	$8, %rsp
 2105              		.cfi_remember_state
 2106              		.cfi_def_cfa_offset 56
 2107 0cd2 4889D8   		movq	%rbx, %rax
 2108 0cd5 5B       		popq	%rbx
 2109              		.cfi_def_cfa_offset 48
 2110 0cd6 5D       		popq	%rbp
 2111              		.cfi_def_cfa_offset 40
 2112 0cd7 415C     		popq	%r12
 2113              		.cfi_def_cfa_offset 32
 2114 0cd9 415D     		popq	%r13
 2115              		.cfi_def_cfa_offset 24
 2116 0cdb 415E     		popq	%r14
 2117              		.cfi_def_cfa_offset 16
 2118 0cdd 415F     		popq	%r15
 2119              		.cfi_def_cfa_offset 8
 2120 0cdf C3       		ret
 2121              	.L481:
 2122              		.cfi_restore_state
 2123 0ce0 4180F831 		cmpb	$49, %r8b
 2124 0ce4 0F846CFF 		je	.L323
 2124      FFFF
 2125              	.L324:
 2126 0cea 80F931   		cmpb	$49, %cl
 2127 0ced 7541     		jne	.L376
 2128 0cef 84D2     		testb	%dl, %dl
 2129 0cf1 743D     		je	.L376
 2130 0cf3 31D2     		xorl	%edx, %edx
 2131 0cf5 41B93000 		movl	$48, %r9d
 2131      0000
 2132 0cfb 41B83100 		movl	$49, %r8d
 2132      0000
 2133 0d01 E96CFFFF 		jmp	.L315
 2133      FF
 2134              	.L480:
 2135 0d06 4080FF31 		cmpb	$49, %dil
 2136 0d0a 0F8404FF 		je	.L321
 2136      FFFF
 2137              	.L322:
 2138 0d10 80F931   		cmpb	$49, %cl
 2139 0d13 753B     		jne	.L375
 2140 0d15 84D2     		testb	%dl, %dl
 2141 0d17 7437     		je	.L375
 2142 0d19 31D2     		xorl	%edx, %edx
 2143 0d1b 41B83000 		movl	$48, %r8d
 2143      0000
 2144 0d21 BF310000 		movl	$49, %edi
 2144      00
 2145 0d26 E902FFFF 		jmp	.L313
 2145      FF
 2146 0d2b 0F1F4400 		.p2align 4,,10
 2146      00
 2147              		.p2align 3
 2148              	.L376:
 2149 0d30 BA010000 		movl	$1, %edx
 2149      00
 2150 0d35 41B93100 		movl	$49, %r9d
 2150      0000
 2151 0d3b 41B83000 		movl	$48, %r8d
 2151      0000
 2152 0d41 E92CFFFF 		jmp	.L315
 2152      FF
 2153 0d46 662E0F1F 		.p2align 4,,10
 2153      84000000 
 2153      0000
 2154              		.p2align 3
 2155              	.L375:
 2156 0d50 BA010000 		movl	$1, %edx
 2156      00
 2157 0d55 41B83100 		movl	$49, %r8d
 2157      0000
 2158 0d5b BF300000 		movl	$48, %edi
 2158      00
 2159 0d60 E9C8FEFF 		jmp	.L313
 2159      FF
 2160              	.L482:
 2161 0d65 4180F931 		cmpb	$49, %r9b
 2162 0d69 0F842DFF 		je	.L316
 2162      FFFF
 2163 0d6f 84D2     		testb	%dl, %dl
 2164 0d71 B8300000 		movl	$48, %eax
 2164      00
 2165 0d76 0F45C8   		cmovne	%eax, %ecx
 2166 0d79 E92FFFFF 		jmp	.L309
 2166      FF
 2167              	.L479:
 2168 0d7e C60030   		movb	$48, (%rax)
 2169 0d81 41C64500 		movb	$49, 0(%r13)
 2169      31
 2170 0d86 BF310000 		movl	$49, %edi
 2170      00
 2171 0d8b BA010000 		movl	$1, %edx
 2171      00
 2172 0d90 41BE3000 		movl	$48, %r14d
 2172      0000
 2173 0d96 E954FEFF 		jmp	.L311
 2173      FF
 2174              	.L483:
 2175 0d9b B9310000 		movl	$49, %ecx
 2175      00
 2176 0da0 E908FFFF 		jmp	.L309
 2176      FF
 2177              	.L325:
 2178 0da5 31C0     		xorl	%eax, %eax
 2179 0da7 31C9     		xorl	%ecx, %ecx
 2180 0da9 BE200000 		movl	$32, %esi
 2180      00
 2181 0dae 4531C0   		xorl	%r8d, %r8d
 2182 0db1 BA200000 		movl	$32, %edx
 2182      00
 2183 0db6 41B90200 		movl	$2, %r9d
 2183      0000
 2184 0dbc BF200000 		movl	$32, %edi
 2184      00
 2185 0dc1 E9DBF8FF 		jmp	.L247
 2185      FF
 2186              	.L289:
 2187 0dc6 41C64502 		movb	$49, 2(%r13)
 2187      31
 2188 0dcb 488D7803 		leaq	3(%rax), %rdi
 2189 0dcf B9310000 		movl	$49, %ecx
 2189      00
 2190 0dd4 BE300000 		movl	$48, %esi
 2190      00
 2191 0dd9 E967FDFF 		jmp	.L320
 2191      FF
 2192              	.L478:
 2193 0dde 80FA31   		cmpb	$49, %dl
 2194 0de1 74E3     		je	.L289
 2195 0de3 41C64502 		movb	$49, 2(%r13)
 2195      31
 2196 0de8 488D7803 		leaq	3(%rax), %rdi
 2197 0dec BE300000 		movl	$48, %esi
 2197      00
 2198 0df1 E94FFDFF 		jmp	.L320
 2198      FF
 2199              	.L284:
 2200 0df6 41C64501 		movb	$49, 1(%r13)
 2200      31
 2201 0dfb 488D7802 		leaq	2(%rax), %rdi
 2202 0dff BA310000 		movl	$49, %edx
 2202      00
 2203 0e04 BE300000 		movl	$48, %esi
 2203      00
 2204 0e09 E901FDFF 		jmp	.L319
 2204      FF
 2205              	.L477:
 2206 0e0e 4080FE31 		cmpb	$49, %sil
 2207 0e12 74E2     		je	.L284
 2208 0e14 41C64501 		movb	$49, 1(%r13)
 2208      31
 2209 0e19 488D7802 		leaq	2(%rax), %rdi
 2210 0e1d BE300000 		movl	$48, %esi
 2210      00
 2211 0e22 E9E8FCFF 		jmp	.L319
 2211      FF
 2212              	.L476:
 2213 0e27 BF040000 		movl	$4, %edi
 2213      00
 2214 0e2c C6450030 		movb	$48, 0(%rbp)
 2215 0e30 E8000000 		call	malloc
 2215      00
 2216 0e35 BF040000 		movl	$4, %edi
 2216      00
 2217 0e3a 4989C5   		movq	%rax, %r13
 2218 0e3d E8000000 		call	malloc
 2218      00
 2219 0e42 41C74500 		movl	$808464432, 0(%r13)
 2219      30303030 
 2220 0e4a C60031   		movb	$49, (%rax)
 2221 0e4d 488D7801 		leaq	1(%rax), %rdi
 2222 0e51 BE300000 		movl	$48, %esi
 2222      00
 2223 0e56 B9310000 		movl	$49, %ecx
 2223      00
 2224 0e5b E97BFCFF 		jmp	.L318
 2224      FF
 2225              	.L339:
 2226 0e60 BE120000 		movl	$18, %esi
 2226      00
 2227 0e65 B90E0000 		movl	$14, %ecx
 2227      00
 2228 0e6a E91BF8FF 		jmp	.L248
 2228      FF
 2229              	.L326:
 2230 0e6f BE1F0000 		movl	$31, %esi
 2230      00
 2231 0e74 B9010000 		movl	$1, %ecx
 2231      00
 2232 0e79 E90CF8FF 		jmp	.L248
 2232      FF
 2233              	.L327:
 2234 0e7e BE1E0000 		movl	$30, %esi
 2234      00
 2235 0e83 B9020000 		movl	$2, %ecx
 2235      00
 2236 0e88 E9FDF7FF 		jmp	.L248
 2236      FF
 2237              	.L328:
 2238 0e8d BE1D0000 		movl	$29, %esi
 2238      00
 2239 0e92 B9030000 		movl	$3, %ecx
 2239      00
 2240 0e97 E9EEF7FF 		jmp	.L248
 2240      FF
 2241              	.L329:
 2242 0e9c BE1C0000 		movl	$28, %esi
 2242      00
 2243 0ea1 B9040000 		movl	$4, %ecx
 2243      00
 2244 0ea6 E9DFF7FF 		jmp	.L248
 2244      FF
 2245              	.L330:
 2246 0eab BE1B0000 		movl	$27, %esi
 2246      00
 2247 0eb0 B9050000 		movl	$5, %ecx
 2247      00
 2248 0eb5 E9D0F7FF 		jmp	.L248
 2248      FF
 2249              	.L331:
 2250 0eba BE1A0000 		movl	$26, %esi
 2250      00
 2251 0ebf B9060000 		movl	$6, %ecx
 2251      00
 2252 0ec4 E9C1F7FF 		jmp	.L248
 2252      FF
 2253              	.L332:
 2254 0ec9 BE190000 		movl	$25, %esi
 2254      00
 2255 0ece B9070000 		movl	$7, %ecx
 2255      00
 2256 0ed3 E9B2F7FF 		jmp	.L248
 2256      FF
 2257              	.L333:
 2258 0ed8 BE180000 		movl	$24, %esi
 2258      00
 2259 0edd B9080000 		movl	$8, %ecx
 2259      00
 2260 0ee2 E9A3F7FF 		jmp	.L248
 2260      FF
 2261              	.L334:
 2262 0ee7 BE170000 		movl	$23, %esi
 2262      00
 2263 0eec B9090000 		movl	$9, %ecx
 2263      00
 2264 0ef1 E994F7FF 		jmp	.L248
 2264      FF
 2265              	.L335:
 2266 0ef6 BE160000 		movl	$22, %esi
 2266      00
 2267 0efb B90A0000 		movl	$10, %ecx
 2267      00
 2268 0f00 E985F7FF 		jmp	.L248
 2268      FF
 2269              	.L336:
 2270 0f05 BE150000 		movl	$21, %esi
 2270      00
 2271 0f0a B90B0000 		movl	$11, %ecx
 2271      00
 2272 0f0f E976F7FF 		jmp	.L248
 2272      FF
 2273              	.L337:
 2274 0f14 BE140000 		movl	$20, %esi
 2274      00
 2275 0f19 B90C0000 		movl	$12, %ecx
 2275      00
 2276 0f1e E967F7FF 		jmp	.L248
 2276      FF
 2277              	.L338:
 2278 0f23 BE130000 		movl	$19, %esi
 2278      00
 2279 0f28 B90D0000 		movl	$13, %ecx
 2279      00
 2280 0f2d E958F7FF 		jmp	.L248
 2280      FF
 2281              	.L373:
 2282 0f32 B9300000 		movl	$48, %ecx
 2282      00
 2283 0f37 E971FDFF 		jmp	.L309
 2283      FF
 2284              		.cfi_endproc
 2285              	.LFE62:
 2287              		.section	.text.unlikely
 2288              	.LCOLDE25:
 2289              		.text
 2290              	.LHOTE25:
 2291              		.section	.rodata.str1.1
 2292              	.LC26:
 2293 0079 30303030 		.string	"0000"
 2293      00
 2294              	.LC28:
 2295 007e 31313131 		.string	"1111"
 2295      00
 2296              		.section	.text.unlikely
 2297              	.LCOLDB29:
 2298              		.text
 2299              	.LHOTB29:
 2300 0f3c 0F1F4000 		.p2align 4,,15
 2301              		.globl	encrypt
 2303              	encrypt:
 2304              	.LFB63:
 2305              		.cfi_startproc
 2306 0f40 4157     		pushq	%r15
 2307              		.cfi_def_cfa_offset 16
 2308              		.cfi_offset 15, -16
 2309 0f42 4156     		pushq	%r14
 2310              		.cfi_def_cfa_offset 24
 2311              		.cfi_offset 14, -24
 2312 0f44 4155     		pushq	%r13
 2313              		.cfi_def_cfa_offset 32
 2314              		.cfi_offset 13, -32
 2315 0f46 4154     		pushq	%r12
 2316              		.cfi_def_cfa_offset 40
 2317              		.cfi_offset 12, -40
 2318 0f48 4989F4   		movq	%rsi, %r12
 2319 0f4b 55       		pushq	%rbp
 2320              		.cfi_def_cfa_offset 48
 2321              		.cfi_offset 6, -48
 2322 0f4c 53       		pushq	%rbx
 2323              		.cfi_def_cfa_offset 56
 2324              		.cfi_offset 3, -56
 2325 0f4d 4889FD   		movq	%rdi, %rbp
 2326 0f50 BF210000 		movl	$33, %edi
 2326      00
 2327 0f55 4883EC08 		subq	$8, %rsp
 2328              		.cfi_def_cfa_offset 64
 2329 0f59 E8000000 		call	malloc
 2329      00
 2330 0f5e 4C89E2   		movq	%r12, %rdx
 2331 0f61 4889C3   		movq	%rax, %rbx
 2332 0f64 48F7DA   		negq	%rdx
 2333 0f67 83E20F   		andl	$15, %edx
 2334 0f6a 0F843007 		je	.L535
 2334      0000
 2335 0f70 31C0     		xorl	%eax, %eax
 2336 0f72 41803C24 		cmpb	$49, (%r12)
 2336      31
 2337 0f77 0F94C0   		sete	%al
 2338 0f7a 83FA01   		cmpl	$1, %edx
 2339 0f7d 0F842508 		je	.L536
 2339      0000
 2340 0f83 31C9     		xorl	%ecx, %ecx
 2341 0f85 41807C24 		cmpb	$49, 1(%r12)
 2341      0131
 2342 0f8b 0F94C1   		sete	%cl
 2343 0f8e 01C8     		addl	%ecx, %eax
 2344 0f90 83FA02   		cmpl	$2, %edx
 2345 0f93 0F844C07 		je	.L537
 2345      0000
 2346 0f99 31C9     		xorl	%ecx, %ecx
 2347 0f9b 41807C24 		cmpb	$49, 2(%r12)
 2347      0231
 2348 0fa1 0F94C1   		sete	%cl
 2349 0fa4 01C8     		addl	%ecx, %eax
 2350 0fa6 83FA03   		cmpl	$3, %edx
 2351 0fa9 0F84BD07 		je	.L538
 2351      0000
 2352 0faf 31C9     		xorl	%ecx, %ecx
 2353 0fb1 41807C24 		cmpb	$49, 3(%r12)
 2353      0331
 2354 0fb7 0F94C1   		sete	%cl
 2355 0fba 01C8     		addl	%ecx, %eax
 2356 0fbc 83FA04   		cmpl	$4, %edx
 2357 0fbf 0F84B607 		je	.L539
 2357      0000
 2358 0fc5 31C9     		xorl	%ecx, %ecx
 2359 0fc7 41807C24 		cmpb	$49, 4(%r12)
 2359      0431
 2360 0fcd 0F94C1   		sete	%cl
 2361 0fd0 01C8     		addl	%ecx, %eax
 2362 0fd2 83FA05   		cmpl	$5, %edx
 2363 0fd5 0F84AF07 		je	.L540
 2363      0000
 2364 0fdb 31C9     		xorl	%ecx, %ecx
 2365 0fdd 41807C24 		cmpb	$49, 5(%r12)
 2365      0531
 2366 0fe3 0F94C1   		sete	%cl
 2367 0fe6 01C8     		addl	%ecx, %eax
 2368 0fe8 83FA06   		cmpl	$6, %edx
 2369 0feb 0F84A807 		je	.L541
 2369      0000
 2370 0ff1 31C9     		xorl	%ecx, %ecx
 2371 0ff3 41807C24 		cmpb	$49, 6(%r12)
 2371      0631
 2372 0ff9 0F94C1   		sete	%cl
 2373 0ffc 01C8     		addl	%ecx, %eax
 2374 0ffe 83FA07   		cmpl	$7, %edx
 2375 1001 0F84ED06 		je	.L542
 2375      0000
 2376 1007 31C9     		xorl	%ecx, %ecx
 2377 1009 41807C24 		cmpb	$49, 7(%r12)
 2377      0731
 2378 100f 0F94C1   		sete	%cl
 2379 1012 01C8     		addl	%ecx, %eax
 2380 1014 83FA08   		cmpl	$8, %edx
 2381 1017 0F84E606 		je	.L543
 2381      0000
 2382 101d 31C9     		xorl	%ecx, %ecx
 2383 101f 41807C24 		cmpb	$49, 8(%r12)
 2383      0831
 2384 1025 0F94C1   		sete	%cl
 2385 1028 01C8     		addl	%ecx, %eax
 2386 102a 83FA09   		cmpl	$9, %edx
 2387 102d 0F84DF06 		je	.L544
 2387      0000
 2388 1033 31C9     		xorl	%ecx, %ecx
 2389 1035 41807C24 		cmpb	$49, 9(%r12)
 2389      0931
 2390 103b 0F94C1   		sete	%cl
 2391 103e 01C8     		addl	%ecx, %eax
 2392 1040 83FA0A   		cmpl	$10, %edx
 2393 1043 0F84D806 		je	.L545
 2393      0000
 2394 1049 31C9     		xorl	%ecx, %ecx
 2395 104b 41807C24 		cmpb	$49, 10(%r12)
 2395      0A31
 2396 1051 0F94C1   		sete	%cl
 2397 1054 01C8     		addl	%ecx, %eax
 2398 1056 83FA0B   		cmpl	$11, %edx
 2399 1059 0F84D106 		je	.L546
 2399      0000
 2400 105f 31C9     		xorl	%ecx, %ecx
 2401 1061 41807C24 		cmpb	$49, 11(%r12)
 2401      0B31
 2402 1067 0F94C1   		sete	%cl
 2403 106a 01C8     		addl	%ecx, %eax
 2404 106c 83FA0C   		cmpl	$12, %edx
 2405 106f 0F84CA06 		je	.L547
 2405      0000
 2406 1075 31C9     		xorl	%ecx, %ecx
 2407 1077 41807C24 		cmpb	$49, 12(%r12)
 2407      0C31
 2408 107d 0F94C1   		sete	%cl
 2409 1080 01C8     		addl	%ecx, %eax
 2410 1082 83FA0D   		cmpl	$13, %edx
 2411 1085 0F84C306 		je	.L548
 2411      0000
 2412 108b 31C9     		xorl	%ecx, %ecx
 2413 108d 41807C24 		cmpb	$49, 13(%r12)
 2413      0D31
 2414 1093 0F94C1   		sete	%cl
 2415 1096 01C8     		addl	%ecx, %eax
 2416 1098 83FA0F   		cmpl	$15, %edx
 2417 109b 0F85BC06 		jne	.L549
 2417      0000
 2418 10a1 31C9     		xorl	%ecx, %ecx
 2419 10a3 41807C24 		cmpb	$49, 14(%r12)
 2419      0E31
 2420 10a9 BE110000 		movl	$17, %esi
 2420      00
 2421 10ae 0F94C1   		sete	%cl
 2422 10b1 01C8     		addl	%ecx, %eax
 2423 10b3 B90F0000 		movl	$15, %ecx
 2423      00
 2424              	.L486:
 2425 10b8 BF200000 		movl	$32, %edi
 2425      00
 2426 10bd 4189D0   		movl	%edx, %r8d
 2427 10c0 41B90100 		movl	$1, %r9d
 2427      0000
 2428 10c6 29D7     		subl	%edx, %edi
 2429 10c8 89FA     		movl	%edi, %edx
 2430 10ca BF100000 		movl	$16, %edi
 2430      00
 2431              	.L485:
 2432 10cf 4D01E0   		addq	%r12, %r8
 2433 10d2 660F6F2D 		movdqa	.LC27(%rip), %xmm5
 2433      00000000 
 2434 10da 660FEFE4 		pxor	%xmm4, %xmm4
 2435 10de 4183F902 		cmpl	$2, %r9d
 2436 10e2 66410F6F 		movdqa	(%r8), %xmm1
 2436      08
 2437 10e7 660F6F15 		movdqa	.LC24(%rip), %xmm2
 2437      00000000 
 2438 10ef 660F74CD 		pcmpeqb	%xmm5, %xmm1
 2439 10f3 660F6FDC 		movdqa	%xmm4, %xmm3
 2440 10f7 660FDBCA 		pand	%xmm2, %xmm1
 2441 10fb 660F64D9 		pcmpgtb	%xmm1, %xmm3
 2442 10ff 660F6FC1 		movdqa	%xmm1, %xmm0
 2443 1103 660F68CB 		punpckhbw	%xmm3, %xmm1
 2444 1107 660F60C3 		punpcklbw	%xmm3, %xmm0
 2445 110b 660FEFDB 		pxor	%xmm3, %xmm3
 2446 110f 660F6FF0 		movdqa	%xmm0, %xmm6
 2447 1113 660F6FFB 		movdqa	%xmm3, %xmm7
 2448 1117 660F65F8 		pcmpgtw	%xmm0, %xmm7
 2449 111b 660F61F7 		punpcklwd	%xmm7, %xmm6
 2450 111f 660F69C7 		punpckhwd	%xmm7, %xmm0
 2451 1123 660F6FFB 		movdqa	%xmm3, %xmm7
 2452 1127 660F65F9 		pcmpgtw	%xmm1, %xmm7
 2453 112b 660FFEC6 		paddd	%xmm6, %xmm0
 2454 112f 660F6FF1 		movdqa	%xmm1, %xmm6
 2455 1133 660F69CF 		punpckhwd	%xmm7, %xmm1
 2456 1137 660F61F7 		punpcklwd	%xmm7, %xmm6
 2457 113b 660FFEC6 		paddd	%xmm6, %xmm0
 2458 113f 660FFEC1 		paddd	%xmm1, %xmm0
 2459 1143 7552     		jne	.L487
 2460 1145 66410F6F 		movdqa	16(%r8), %xmm1
 2460      4810
 2461 114b 660F74CD 		pcmpeqb	%xmm5, %xmm1
 2462 114f 660F6FEB 		movdqa	%xmm3, %xmm5
 2463 1153 660FDBCA 		pand	%xmm2, %xmm1
 2464 1157 660F64E1 		pcmpgtb	%xmm1, %xmm4
 2465 115b 660F6FD1 		movdqa	%xmm1, %xmm2
 2466 115f 660F60D4 		punpcklbw	%xmm4, %xmm2
 2467 1163 660F68CC 		punpckhbw	%xmm4, %xmm1
 2468 1167 660F65EA 		pcmpgtw	%xmm2, %xmm5
 2469 116b 660F6FE2 		movdqa	%xmm2, %xmm4
 2470 116f 660F65D9 		pcmpgtw	%xmm1, %xmm3
 2471 1173 660F61E5 		punpcklwd	%xmm5, %xmm4
 2472 1177 660F69D5 		punpckhwd	%xmm5, %xmm2
 2473 117b 660FFEC4 		paddd	%xmm4, %xmm0
 2474 117f 660FFED0 		paddd	%xmm0, %xmm2
 2475 1183 660F6FC1 		movdqa	%xmm1, %xmm0
 2476 1187 660F69CB 		punpckhwd	%xmm3, %xmm1
 2477 118b 660F61C3 		punpcklwd	%xmm3, %xmm0
 2478 118f 660FFEC2 		paddd	%xmm2, %xmm0
 2479 1193 660FFEC1 		paddd	%xmm1, %xmm0
 2480              	.L487:
 2481 1197 660F6FC8 		movdqa	%xmm0, %xmm1
 2482 119b 29FE     		subl	%edi, %esi
 2483 119d 660F73D9 		psrldq	$8, %xmm1
 2483      08
 2484 11a2 660FFEC1 		paddd	%xmm1, %xmm0
 2485 11a6 660F6FC8 		movdqa	%xmm0, %xmm1
 2486 11aa 660F73D9 		psrldq	$4, %xmm1
 2486      04
 2487 11af 660FFEC1 		paddd	%xmm1, %xmm0
 2488 11b3 66410F7E 		movd	%xmm0, %r13d
 2488      C5
 2489 11b8 4101C5   		addl	%eax, %r13d
 2490 11bb 39D7     		cmpl	%edx, %edi
 2491 11bd 8D040F   		leal	(%rdi,%rcx), %eax
 2492 11c0 0F849201 		je	.L489
 2492      0000
 2493 11c6 4863D0   		movslq	%eax, %rdx
 2494 11c9 41803C14 		cmpb	$49, (%r12,%rdx)
 2494      31
 2495 11ce 0F94C2   		sete	%dl
 2496 11d1 0FB6D2   		movzbl	%dl, %edx
 2497 11d4 4101D5   		addl	%edx, %r13d
 2498 11d7 83FE01   		cmpl	$1, %esi
 2499 11da 8D5001   		leal	1(%rax), %edx
 2500 11dd 0F847501 		je	.L489
 2500      0000
 2501 11e3 4863D2   		movslq	%edx, %rdx
 2502 11e6 41803C14 		cmpb	$49, (%r12,%rdx)
 2502      31
 2503 11eb 0F94C2   		sete	%dl
 2504 11ee 0FB6D2   		movzbl	%dl, %edx
 2505 11f1 4101D5   		addl	%edx, %r13d
 2506 11f4 83FE02   		cmpl	$2, %esi
 2507 11f7 8D5002   		leal	2(%rax), %edx
 2508 11fa 0F845801 		je	.L489
 2508      0000
 2509 1200 4863D2   		movslq	%edx, %rdx
 2510 1203 41803C14 		cmpb	$49, (%r12,%rdx)
 2510      31
 2511 1208 0F94C2   		sete	%dl
 2512 120b 0FB6D2   		movzbl	%dl, %edx
 2513 120e 4101D5   		addl	%edx, %r13d
 2514 1211 83FE03   		cmpl	$3, %esi
 2515 1214 8D5003   		leal	3(%rax), %edx
 2516 1217 0F843B01 		je	.L489
 2516      0000
 2517 121d 4863D2   		movslq	%edx, %rdx
 2518 1220 41803C14 		cmpb	$49, (%r12,%rdx)
 2518      31
 2519 1225 0F94C2   		sete	%dl
 2520 1228 0FB6D2   		movzbl	%dl, %edx
 2521 122b 4101D5   		addl	%edx, %r13d
 2522 122e 83FE04   		cmpl	$4, %esi
 2523 1231 8D5004   		leal	4(%rax), %edx
 2524 1234 0F841E01 		je	.L489
 2524      0000
 2525 123a 4863D2   		movslq	%edx, %rdx
 2526 123d 41803C14 		cmpb	$49, (%r12,%rdx)
 2526      31
 2527 1242 0F94C2   		sete	%dl
 2528 1245 0FB6D2   		movzbl	%dl, %edx
 2529 1248 4101D5   		addl	%edx, %r13d
 2530 124b 83FE05   		cmpl	$5, %esi
 2531 124e 8D5005   		leal	5(%rax), %edx
 2532 1251 0F840101 		je	.L489
 2532      0000
 2533 1257 4863D2   		movslq	%edx, %rdx
 2534 125a 41803C14 		cmpb	$49, (%r12,%rdx)
 2534      31
 2535 125f 0F94C2   		sete	%dl
 2536 1262 0FB6D2   		movzbl	%dl, %edx
 2537 1265 4101D5   		addl	%edx, %r13d
 2538 1268 83FE06   		cmpl	$6, %esi
 2539 126b 8D5006   		leal	6(%rax), %edx
 2540 126e 0F84E400 		je	.L489
 2540      0000
 2541 1274 4863D2   		movslq	%edx, %rdx
 2542 1277 41803C14 		cmpb	$49, (%r12,%rdx)
 2542      31
 2543 127c 0F94C2   		sete	%dl
 2544 127f 0FB6D2   		movzbl	%dl, %edx
 2545 1282 4101D5   		addl	%edx, %r13d
 2546 1285 83FE07   		cmpl	$7, %esi
 2547 1288 8D5007   		leal	7(%rax), %edx
 2548 128b 0F84C700 		je	.L489
 2548      0000
 2549 1291 4863D2   		movslq	%edx, %rdx
 2550 1294 41803C14 		cmpb	$49, (%r12,%rdx)
 2550      31
 2551 1299 0F94C2   		sete	%dl
 2552 129c 0FB6D2   		movzbl	%dl, %edx
 2553 129f 4101D5   		addl	%edx, %r13d
 2554 12a2 83FE08   		cmpl	$8, %esi
 2555 12a5 8D5008   		leal	8(%rax), %edx
 2556 12a8 0F84AA00 		je	.L489
 2556      0000
 2557 12ae 4863D2   		movslq	%edx, %rdx
 2558 12b1 41803C14 		cmpb	$49, (%r12,%rdx)
 2558      31
 2559 12b6 0F94C2   		sete	%dl
 2560 12b9 0FB6D2   		movzbl	%dl, %edx
 2561 12bc 4101D5   		addl	%edx, %r13d
 2562 12bf 83FE09   		cmpl	$9, %esi
 2563 12c2 8D5009   		leal	9(%rax), %edx
 2564 12c5 0F848D00 		je	.L489
 2564      0000
 2565 12cb 4863D2   		movslq	%edx, %rdx
 2566 12ce 41803C14 		cmpb	$49, (%r12,%rdx)
 2566      31
 2567 12d3 0F94C2   		sete	%dl
 2568 12d6 0FB6D2   		movzbl	%dl, %edx
 2569 12d9 4101D5   		addl	%edx, %r13d
 2570 12dc 83FE0A   		cmpl	$10, %esi
 2571 12df 8D500A   		leal	10(%rax), %edx
 2572 12e2 7474     		je	.L489
 2573 12e4 4863D2   		movslq	%edx, %rdx
 2574 12e7 41803C14 		cmpb	$49, (%r12,%rdx)
 2574      31
 2575 12ec 0F94C2   		sete	%dl
 2576 12ef 0FB6D2   		movzbl	%dl, %edx
 2577 12f2 4101D5   		addl	%edx, %r13d
 2578 12f5 83FE0B   		cmpl	$11, %esi
 2579 12f8 8D500B   		leal	11(%rax), %edx
 2580 12fb 745B     		je	.L489
 2581 12fd 4863D2   		movslq	%edx, %rdx
 2582 1300 41803C14 		cmpb	$49, (%r12,%rdx)
 2582      31
 2583 1305 0F94C2   		sete	%dl
 2584 1308 0FB6D2   		movzbl	%dl, %edx
 2585 130b 4101D5   		addl	%edx, %r13d
 2586 130e 83FE0C   		cmpl	$12, %esi
 2587 1311 8D500C   		leal	12(%rax), %edx
 2588 1314 7442     		je	.L489
 2589 1316 4863D2   		movslq	%edx, %rdx
 2590 1319 41803C14 		cmpb	$49, (%r12,%rdx)
 2590      31
 2591 131e 0F94C2   		sete	%dl
 2592 1321 0FB6D2   		movzbl	%dl, %edx
 2593 1324 4101D5   		addl	%edx, %r13d
 2594 1327 83FE0D   		cmpl	$13, %esi
 2595 132a 8D500D   		leal	13(%rax), %edx
 2596 132d 7429     		je	.L489
 2597 132f 4863D2   		movslq	%edx, %rdx
 2598 1332 41803C14 		cmpb	$49, (%r12,%rdx)
 2598      31
 2599 1337 0F94C2   		sete	%dl
 2600 133a 83C00E   		addl	$14, %eax
 2601 133d 0FB6D2   		movzbl	%dl, %edx
 2602 1340 4101D5   		addl	%edx, %r13d
 2603 1343 83FE0E   		cmpl	$14, %esi
 2604 1346 7410     		je	.L489
 2605 1348 4898     		cltq
 2606 134a 41803C04 		cmpb	$49, (%r12,%rax)
 2606      31
 2607 134f 0F94C0   		sete	%al
 2608 1352 0FB6C0   		movzbl	%al, %eax
 2609 1355 4101C5   		addl	%eax, %r13d
 2610              	.L489:
 2611 1358 488B4500 		movq	0(%rbp), %rax
 2612 135c BF050000 		movl	$5, %edi
 2612      00
 2613 1361 488903   		movq	%rax, (%rbx)
 2614 1364 488B4508 		movq	8(%rbp), %rax
 2615 1368 48894308 		movq	%rax, 8(%rbx)
 2616 136c 488B4510 		movq	16(%rbp), %rax
 2617 1370 48894310 		movq	%rax, 16(%rbx)
 2618 1374 488B4518 		movq	24(%rbp), %rax
 2619 1378 48894318 		movq	%rax, 24(%rbx)
 2620 137c E8000000 		call	malloc
 2620      00
 2621 1381 4889C5   		movq	%rax, %rbp
 2622 1384 C6400400 		movb	$0, 4(%rax)
 2623 1388 410FB644 		movzbl	7(%r12), %eax
 2623      2407
 2624 138e 41384424 		cmpb	%al, 3(%r12)
 2624      03
 2625 1393 C6432000 		movb	$0, 32(%rbx)
 2626 1397 0F95C0   		setne	%al
 2627 139a 83C030   		addl	$48, %eax
 2628 139d 41384424 		cmpb	%al, 11(%r12)
 2628      0B
 2629 13a2 0F95C0   		setne	%al
 2630 13a5 83C030   		addl	$48, %eax
 2631 13a8 41384424 		cmpb	%al, 15(%r12)
 2631      0F
 2632 13ad 0F95C0   		setne	%al
 2633 13b0 83C030   		addl	$48, %eax
 2634 13b3 41384424 		cmpb	%al, 19(%r12)
 2634      13
 2635 13b8 0F95C0   		setne	%al
 2636 13bb 83C030   		addl	$48, %eax
 2637 13be 41384424 		cmpb	%al, 23(%r12)
 2637      17
 2638 13c3 0F95C0   		setne	%al
 2639 13c6 83C030   		addl	$48, %eax
 2640 13c9 41384424 		cmpb	%al, 27(%r12)
 2640      1B
 2641 13ce 0F95C0   		setne	%al
 2642 13d1 83C030   		addl	$48, %eax
 2643 13d4 41384424 		cmpb	%al, 31(%r12)
 2643      1F
 2644 13d9 0F95C0   		setne	%al
 2645 13dc 83C030   		addl	$48, %eax
 2646 13df 884503   		movb	%al, 3(%rbp)
 2647 13e2 410FB644 		movzbl	6(%r12), %eax
 2647      2406
 2648 13e8 41384424 		cmpb	%al, 2(%r12)
 2648      02
 2649 13ed 0F95C0   		setne	%al
 2650 13f0 83C030   		addl	$48, %eax
 2651 13f3 41384424 		cmpb	%al, 10(%r12)
 2651      0A
 2652 13f8 0F95C0   		setne	%al
 2653 13fb 83C030   		addl	$48, %eax
 2654 13fe 41384424 		cmpb	%al, 14(%r12)
 2654      0E
 2655 1403 0F95C0   		setne	%al
 2656 1406 83C030   		addl	$48, %eax
 2657 1409 41384424 		cmpb	%al, 18(%r12)
 2657      12
 2658 140e 0F95C0   		setne	%al
 2659 1411 83C030   		addl	$48, %eax
 2660 1414 41384424 		cmpb	%al, 22(%r12)
 2660      16
 2661 1419 0F95C0   		setne	%al
 2662 141c 83C030   		addl	$48, %eax
 2663 141f 41384424 		cmpb	%al, 26(%r12)
 2663      1A
 2664 1424 0F95C0   		setne	%al
 2665 1427 83C030   		addl	$48, %eax
 2666 142a 41384424 		cmpb	%al, 30(%r12)
 2666      1E
 2667 142f 0F95C0   		setne	%al
 2668 1432 83C030   		addl	$48, %eax
 2669 1435 884502   		movb	%al, 2(%rbp)
 2670 1438 410FB644 		movzbl	5(%r12), %eax
 2670      2405
 2671 143e 41384424 		cmpb	%al, 1(%r12)
 2671      01
 2672 1443 0F95C0   		setne	%al
 2673 1446 83C030   		addl	$48, %eax
 2674 1449 41384424 		cmpb	%al, 9(%r12)
 2674      09
 2675 144e 0F95C0   		setne	%al
 2676 1451 83C030   		addl	$48, %eax
 2677 1454 41384424 		cmpb	%al, 13(%r12)
 2677      0D
 2678 1459 0F95C0   		setne	%al
 2679 145c 83C030   		addl	$48, %eax
 2680 145f 41384424 		cmpb	%al, 17(%r12)
 2680      11
 2681 1464 0F95C0   		setne	%al
 2682 1467 83C030   		addl	$48, %eax
 2683 146a 413A4424 		cmpb	21(%r12), %al
 2683      15
 2684 146f 0F95C0   		setne	%al
 2685 1472 83C030   		addl	$48, %eax
 2686 1475 413A4424 		cmpb	25(%r12), %al
 2686      19
 2687 147a 0F95C0   		setne	%al
 2688 147d 83C030   		addl	$48, %eax
 2689 1480 413A4424 		cmpb	29(%r12), %al
 2689      1D
 2690 1485 0F95C0   		setne	%al
 2691 1488 83C030   		addl	$48, %eax
 2692 148b 884501   		movb	%al, 1(%rbp)
 2693 148e 410FB644 		movzbl	4(%r12), %eax
 2693      2404
 2694 1494 41380424 		cmpb	%al, (%r12)
 2695 1498 0F95C0   		setne	%al
 2696 149b 83C030   		addl	$48, %eax
 2697 149e 413A4424 		cmpb	8(%r12), %al
 2697      08
 2698 14a3 0F95C0   		setne	%al
 2699 14a6 83C030   		addl	$48, %eax
 2700 14a9 413A4424 		cmpb	12(%r12), %al
 2700      0C
 2701 14ae 0F95C0   		setne	%al
 2702 14b1 83C030   		addl	$48, %eax
 2703 14b4 413A4424 		cmpb	16(%r12), %al
 2703      10
 2704 14b9 0F95C0   		setne	%al
 2705 14bc 83C030   		addl	$48, %eax
 2706 14bf 413A4424 		cmpb	20(%r12), %al
 2706      14
 2707 14c4 0F95C0   		setne	%al
 2708 14c7 83C030   		addl	$48, %eax
 2709 14ca 413A4424 		cmpb	24(%r12), %al
 2709      18
 2710 14cf 0F95C0   		setne	%al
 2711 14d2 83C030   		addl	$48, %eax
 2712 14d5 41384424 		cmpb	%al, 28(%r12)
 2712      1C
 2713 14da 41BC0000 		movl	$.LC28, %r12d
 2713      0000
 2714 14e0 0F95C0   		setne	%al
 2715 14e3 4531FF   		xorl	%r15d, %r15d
 2716 14e6 83C030   		addl	$48, %eax
 2717 14e9 4585ED   		testl	%r13d, %r13d
 2718 14ec 884500   		movb	%al, 0(%rbp)
 2719 14ef 0F8E0B01 		jle	.L629
 2719      0000
 2720              		.p2align 4,,10
 2721 14f5 0F1F00   		.p2align 3
 2722              	.L611:
 2723 14f8 31C0     		xorl	%eax, %eax
 2724 14fa 660F1F44 		.p2align 4,,10
 2724      0000
 2725              		.p2align 3
 2726              	.L520:
 2727 1500 4889C2   		movq	%rax, %rdx
 2728 1503 0FB63C03 		movzbl	(%rbx,%rax), %edi
 2729 1507 83E203   		andl	$3, %edx
 2730 150a 40387C15 		cmpb	%dil, 0(%rbp,%rdx)
 2730      00
 2731 150f 0F95C2   		setne	%dl
 2732 1512 83C230   		addl	$48, %edx
 2733 1515 881403   		movb	%dl, (%rbx,%rax)
 2734 1518 4883C001 		addq	$1, %rax
 2735 151c 4883F820 		cmpq	$32, %rax
 2736 1520 75DE     		jne	.L520
 2737 1522 B9050000 		movl	$5, %ecx
 2737      00
 2738 1527 4889EE   		movq	%rbp, %rsi
 2739 152a 4C89E7   		movq	%r12, %rdi
 2740 152d F3A6     		repz cmpsb
 2741 152f 0F97C0   		seta	%al
 2742 1532 0F92C2   		setb	%dl
 2743 1535 29D0     		subl	%edx, %eax
 2744 1537 3C01     		cmpb	$1, %al
 2745 1539 0F84D900 		je	.L578
 2745      0000
 2746 153f BF040000 		movl	$4, %edi
 2746      00
 2747 1544 E8000000 		call	malloc
 2747      00
 2748 1549 BF040000 		movl	$4, %edi
 2748      00
 2749 154e 4989C6   		movq	%rax, %r14
 2750 1551 E8000000 		call	malloc
 2750      00
 2751 1556 807D0031 		cmpb	$49, 0(%rbp)
 2752 155a 41C60630 		movb	$48, (%r14)
 2753 155e 41C64601 		movb	$48, 1(%r14)
 2753      30
 2754 1563 41C64602 		movb	$48, 2(%r14)
 2754      30
 2755 1568 41C64603 		movb	$48, 3(%r14)
 2755      30
 2756 156d 0F84F200 		je	.L634
 2756      0000
 2757 1573 0FB64D01 		movzbl	1(%rbp), %ecx
 2758 1577 C60031   		movb	$49, (%rax)
 2759 157a 41B83100 		movl	$49, %r8d
 2759      0000
 2760 1580 80F930   		cmpb	$48, %cl
 2761 1583 0F849600 		je	.L635
 2761      0000
 2762              	.L523:
 2763 1589 C6400131 		movb	$49, 1(%rax)
 2764 158d 31FF     		xorl	%edi, %edi
 2765 158f B9310000 		movl	$49, %ecx
 2765      00
 2766 1594 BA300000 		movl	$48, %edx
 2766      00
 2767              	.L534:
 2768 1599 0FB67502 		movzbl	2(%rbp), %esi
 2769 159d 41885601 		movb	%dl, 1(%r14)
 2770 15a1 4038F2   		cmpb	%sil, %dl
 2771 15a4 0F95C2   		setne	%dl
 2772 15a7 83C230   		addl	$48, %edx
 2773 15aa 4080FE31 		cmpb	$49, %sil
 2774 15ae 885002   		movb	%dl, 2(%rax)
 2775 15b1 0F858D00 		jne	.L525
 2775      0000
 2776 15b7 4084FF   		testb	%dil, %dil
 2777 15ba 0F848400 		je	.L525
 2777      0000
 2778 15c0 0FB67503 		movzbl	3(%rbp), %esi
 2779 15c4 41C64602 		movb	$49, 2(%r14)
 2779      31
 2780 15c9 4080FE31 		cmpb	$49, %sil
 2781 15cd 0F84BF00 		je	.L636
 2781      0000
 2782              	.L526:
 2783 15d3 C6400331 		movb	$49, 3(%rax)
 2784 15d7 BF310000 		movl	$49, %edi
 2784      00
 2785 15dc BE300000 		movl	$48, %esi
 2785      00
 2786              	.L532:
 2787 15e1 41887603 		movb	%sil, 3(%r14)
 2788 15e5 44884500 		movb	%r8b, 0(%rbp)
 2789 15e9 884D01   		movb	%cl, 1(%rbp)
 2790 15ec 885502   		movb	%dl, 2(%rbp)
 2791 15ef 40887D03 		movb	%dil, 3(%rbp)
 2792              	.L521:
 2793 15f3 4183C701 		addl	$1, %r15d
 2794 15f7 4539EF   		cmpl	%r13d, %r15d
 2795 15fa 0F85F8FE 		jne	.L611
 2795      FFFF
 2796              	.L629:
 2797 1600 4883C408 		addq	$8, %rsp
 2798              		.cfi_remember_state
 2799              		.cfi_def_cfa_offset 56
 2800 1604 4889D8   		movq	%rbx, %rax
 2801 1607 5B       		popq	%rbx
 2802              		.cfi_def_cfa_offset 48
 2803 1608 5D       		popq	%rbp
 2804              		.cfi_def_cfa_offset 40
 2805 1609 415C     		popq	%r12
 2806              		.cfi_def_cfa_offset 32
 2807 160b 415D     		popq	%r13
 2808              		.cfi_def_cfa_offset 24
 2809 160d 415E     		popq	%r14
 2810              		.cfi_def_cfa_offset 16
 2811 160f 415F     		popq	%r15
 2812              		.cfi_def_cfa_offset 8
 2813 1611 C3       		ret
 2814              		.p2align 4,,10
 2815 1612 660F1F44 		.p2align 3
 2815      0000
 2816              	.L578:
 2817              		.cfi_restore_state
 2818 1618 BD000000 		movl	$.LC26, %ebp
 2818      00
 2819 161d EBD4     		jmp	.L521
 2820              	.L635:
 2821 161f 0FB65502 		movzbl	2(%rbp), %edx
 2822 1623 C6400130 		movb	$48, 1(%rax)
 2823 1627 41C64601 		movb	$48, 1(%r14)
 2823      30
 2824 162c 80FA30   		cmpb	$48, %dl
 2825 162f 0F848C00 		je	.L637
 2825      0000
 2826 1635 C6400231 		movb	$49, 2(%rax)
 2827 1639 BA310000 		movl	$49, %edx
 2827      00
 2828 163e 41B83100 		movl	$49, %r8d
 2828      0000
 2829              	.L525:
 2830 1644 0FB67D03 		movzbl	3(%rbp), %edi
 2831 1648 41C64602 		movb	$48, 2(%r14)
 2831      30
 2832 164d 4080FF30 		cmpb	$48, %dil
 2833 1651 0F857CFF 		jne	.L526
 2833      FFFF
 2834              	.L638:
 2835 1657 C6400330 		movb	$48, 3(%rax)
 2836 165b BE300000 		movl	$48, %esi
 2836      00
 2837 1660 E97CFFFF 		jmp	.L532
 2837      FF
 2838              	.L634:
 2839 1665 0FB65501 		movzbl	1(%rbp), %edx
 2840 1669 C60030   		movb	$48, (%rax)
 2841 166c 41B83000 		movl	$48, %r8d
 2841      0000
 2842 1672 41C60631 		movb	$49, (%r14)
 2843 1676 80FA31   		cmpb	$49, %dl
 2844 1679 0F850AFF 		jne	.L523
 2844      FFFF
 2845 167f C6400130 		movb	$48, 1(%rax)
 2846 1683 BF010000 		movl	$1, %edi
 2846      00
 2847 1688 B9300000 		movl	$48, %ecx
 2847      00
 2848 168d E907FFFF 		jmp	.L534
 2848      FF
 2849              	.L636:
 2850 1692 C6400330 		movb	$48, 3(%rax)
 2851 1696 BF300000 		movl	$48, %edi
 2851      00
 2852 169b E941FFFF 		jmp	.L532
 2852      FF
 2853              	.L535:
 2854 16a0 31C0     		xorl	%eax, %eax
 2855 16a2 31C9     		xorl	%ecx, %ecx
 2856 16a4 BE200000 		movl	$32, %esi
 2856      00
 2857 16a9 4531C0   		xorl	%r8d, %r8d
 2858 16ac BA200000 		movl	$32, %edx
 2858      00
 2859 16b1 41B90200 		movl	$2, %r9d
 2859      0000
 2860 16b7 BF200000 		movl	$32, %edi
 2860      00
 2861 16bc E90EFAFF 		jmp	.L485
 2861      FF
 2862              	.L637:
 2863 16c1 0FB67D03 		movzbl	3(%rbp), %edi
 2864 16c5 C6400230 		movb	$48, 2(%rax)
 2865 16c9 89D1     		movl	%edx, %ecx
 2866 16cb 41B83100 		movl	$49, %r8d
 2866      0000
 2867 16d1 41C64602 		movb	$48, 2(%r14)
 2867      30
 2868 16d6 4080FF30 		cmpb	$48, %dil
 2869 16da 0F85F3FE 		jne	.L526
 2869      FFFF
 2870 16e0 E972FFFF 		jmp	.L638
 2870      FF
 2871              	.L537:
 2872 16e5 BE1E0000 		movl	$30, %esi
 2872      00
 2873 16ea B9020000 		movl	$2, %ecx
 2873      00
 2874 16ef E9C4F9FF 		jmp	.L486
 2874      FF
 2875              	.L542:
 2876 16f4 BE190000 		movl	$25, %esi
 2876      00
 2877 16f9 B9070000 		movl	$7, %ecx
 2877      00
 2878 16fe E9B5F9FF 		jmp	.L486
 2878      FF
 2879              	.L543:
 2880 1703 BE180000 		movl	$24, %esi
 2880      00
 2881 1708 B9080000 		movl	$8, %ecx
 2881      00
 2882 170d E9A6F9FF 		jmp	.L486
 2882      FF
 2883              	.L544:
 2884 1712 BE170000 		movl	$23, %esi
 2884      00
 2885 1717 B9090000 		movl	$9, %ecx
 2885      00
 2886 171c E997F9FF 		jmp	.L486
 2886      FF
 2887              	.L545:
 2888 1721 BE160000 		movl	$22, %esi
 2888      00
 2889 1726 B90A0000 		movl	$10, %ecx
 2889      00
 2890 172b E988F9FF 		jmp	.L486
 2890      FF
 2891              	.L546:
 2892 1730 BE150000 		movl	$21, %esi
 2892      00
 2893 1735 B90B0000 		movl	$11, %ecx
 2893      00
 2894 173a E979F9FF 		jmp	.L486
 2894      FF
 2895              	.L547:
 2896 173f BE140000 		movl	$20, %esi
 2896      00
 2897 1744 B90C0000 		movl	$12, %ecx
 2897      00
 2898 1749 E96AF9FF 		jmp	.L486
 2898      FF
 2899              	.L548:
 2900 174e BE130000 		movl	$19, %esi
 2900      00
 2901 1753 B90D0000 		movl	$13, %ecx
 2901      00
 2902 1758 E95BF9FF 		jmp	.L486
 2902      FF
 2903              	.L549:
 2904 175d BE120000 		movl	$18, %esi
 2904      00
 2905 1762 B90E0000 		movl	$14, %ecx
 2905      00
 2906 1767 E94CF9FF 		jmp	.L486
 2906      FF
 2907              	.L538:
 2908 176c BE1D0000 		movl	$29, %esi
 2908      00
 2909 1771 B9030000 		movl	$3, %ecx
 2909      00
 2910 1776 E93DF9FF 		jmp	.L486
 2910      FF
 2911              	.L539:
 2912 177b BE1C0000 		movl	$28, %esi
 2912      00
 2913 1780 B9040000 		movl	$4, %ecx
 2913      00
 2914 1785 E92EF9FF 		jmp	.L486
 2914      FF
 2915              	.L540:
 2916 178a BE1B0000 		movl	$27, %esi
 2916      00
 2917 178f B9050000 		movl	$5, %ecx
 2917      00
 2918 1794 E91FF9FF 		jmp	.L486
 2918      FF
 2919              	.L541:
 2920 1799 BE1A0000 		movl	$26, %esi
 2920      00
 2921 179e B9060000 		movl	$6, %ecx
 2921      00
 2922 17a3 E910F9FF 		jmp	.L486
 2922      FF
 2923              	.L536:
 2924 17a8 BE1F0000 		movl	$31, %esi
 2924      00
 2925 17ad B9010000 		movl	$1, %ecx
 2925      00
 2926 17b2 E901F9FF 		jmp	.L486
 2926      FF
 2927              		.cfi_endproc
 2928              	.LFE63:
 2930              		.section	.text.unlikely
 2931              	.LCOLDE29:
 2932              		.text
 2933              	.LHOTE29:
 2934              		.section	.text.unlikely
 2935              	.LCOLDB30:
 2936              		.text
 2937              	.LHOTB30:
 2938 17b7 660F1F84 		.p2align 4,,15
 2938      00000000 
 2938      00
 2939              		.globl	read_byte
 2941              	read_byte:
 2942              	.LFB64:
 2943              		.cfi_startproc
 2944 17c0 53       		pushq	%rbx
 2945              		.cfi_def_cfa_offset 16
 2946              		.cfi_offset 3, -16
 2947 17c1 89FB     		movl	%edi, %ebx
 2948 17c3 BF090000 		movl	$9, %edi
 2948      00
 2949 17c8 E8000000 		call	malloc
 2949      00
 2950 17cd 89DA     		movl	%ebx, %edx
 2951 17cf C6400800 		movb	$0, 8(%rax)
 2952 17d3 83E201   		andl	$1, %edx
 2953 17d6 80FA01   		cmpb	$1, %dl
 2954 17d9 19D2     		sbbl	%edx, %edx
 2955 17db 83C231   		addl	$49, %edx
 2956 17de 8810     		movb	%dl, (%rax)
 2957 17e0 89DA     		movl	%ebx, %edx
 2958 17e2 D0EA     		shrb	%dl
 2959 17e4 83E201   		andl	$1, %edx
 2960 17e7 80FA01   		cmpb	$1, %dl
 2961 17ea 19D2     		sbbl	%edx, %edx
 2962 17ec 83C231   		addl	$49, %edx
 2963 17ef 885001   		movb	%dl, 1(%rax)
 2964 17f2 89DA     		movl	%ebx, %edx
 2965 17f4 C0EA02   		shrb	$2, %dl
 2966 17f7 83E201   		andl	$1, %edx
 2967 17fa 80FA01   		cmpb	$1, %dl
 2968 17fd 19D2     		sbbl	%edx, %edx
 2969 17ff 83C231   		addl	$49, %edx
 2970 1802 885002   		movb	%dl, 2(%rax)
 2971 1805 89DA     		movl	%ebx, %edx
 2972 1807 C0EA03   		shrb	$3, %dl
 2973 180a 83E201   		andl	$1, %edx
 2974 180d 80FA01   		cmpb	$1, %dl
 2975 1810 19D2     		sbbl	%edx, %edx
 2976 1812 83C231   		addl	$49, %edx
 2977 1815 885003   		movb	%dl, 3(%rax)
 2978 1818 89DA     		movl	%ebx, %edx
 2979 181a C0EA04   		shrb	$4, %dl
 2980 181d 83E201   		andl	$1, %edx
 2981 1820 80FA01   		cmpb	$1, %dl
 2982 1823 19D2     		sbbl	%edx, %edx
 2983 1825 83C231   		addl	$49, %edx
 2984 1828 885004   		movb	%dl, 4(%rax)
 2985 182b 89DA     		movl	%ebx, %edx
 2986 182d C0EA05   		shrb	$5, %dl
 2987 1830 83E201   		andl	$1, %edx
 2988 1833 80FA01   		cmpb	$1, %dl
 2989 1836 19D2     		sbbl	%edx, %edx
 2990 1838 83C231   		addl	$49, %edx
 2991 183b 885005   		movb	%dl, 5(%rax)
 2992 183e 89DA     		movl	%ebx, %edx
 2993 1840 C0EA06   		shrb	$6, %dl
 2994 1843 83E201   		andl	$1, %edx
 2995 1846 80FA01   		cmpb	$1, %dl
 2996 1849 19D2     		sbbl	%edx, %edx
 2997 184b C0EB07   		shrb	$7, %bl
 2998 184e 83C231   		addl	$49, %edx
 2999 1851 80FB01   		cmpb	$1, %bl
 3000 1854 885006   		movb	%dl, 6(%rax)
 3001 1857 19D2     		sbbl	%edx, %edx
 3002 1859 83C231   		addl	$49, %edx
 3003 185c 885007   		movb	%dl, 7(%rax)
 3004 185f 5B       		popq	%rbx
 3005              		.cfi_def_cfa_offset 8
 3006 1860 C3       		ret
 3007              		.cfi_endproc
 3008              	.LFE64:
 3010              		.section	.text.unlikely
 3011              	.LCOLDE30:
 3012              		.text
 3013              	.LHOTE30:
 3014              		.section	.text.unlikely
 3015              	.LCOLDB31:
 3016              		.text
 3017              	.LHOTB31:
 3018 1861 0F1F4400 		.p2align 4,,15
 3018      00662E0F 
 3018      1F840000 
 3018      000000
 3019              		.globl	write_4byte_to_board
 3021              	write_4byte_to_board:
 3022              	.LFB65:
 3023              		.cfi_startproc
 3024 1870 4155     		pushq	%r13
 3025              		.cfi_def_cfa_offset 16
 3026              		.cfi_offset 13, -16
 3027 1872 4154     		pushq	%r12
 3028              		.cfi_def_cfa_offset 24
 3029              		.cfi_offset 12, -24
 3030 1874 4989CD   		movq	%rcx, %r13
 3031 1877 55       		pushq	%rbp
 3032              		.cfi_def_cfa_offset 32
 3033              		.cfi_offset 6, -32
 3034 1878 53       		pushq	%rbx
 3035              		.cfi_def_cfa_offset 40
 3036              		.cfi_offset 3, -40
 3037 1879 89FD     		movl	%edi, %ebp
 3038 187b 4889F3   		movq	%rsi, %rbx
 3039 187e BF210000 		movl	$33, %edi
 3039      00
 3040 1883 4989D4   		movq	%rdx, %r12
 3041 1886 4883EC18 		subq	$24, %rsp
 3042              		.cfi_def_cfa_offset 64
 3043 188a 64488B04 		movq	%fs:40, %rax
 3043      25280000 
 3043      00
 3044 1893 48894424 		movq	%rax, 8(%rsp)
 3044      08
 3045 1898 31C0     		xorl	%eax, %eax
 3046 189a E8000000 		call	malloc
 3046      00
 3047 189f 0FB65307 		movzbl	7(%rbx), %edx
 3048 18a3 4889C7   		movq	%rax, %rdi
 3049 18a6 8810     		movb	%dl, (%rax)
 3050 18a8 0FB65306 		movzbl	6(%rbx), %edx
 3051 18ac 885001   		movb	%dl, 1(%rax)
 3052 18af 0FB65305 		movzbl	5(%rbx), %edx
 3053 18b3 885002   		movb	%dl, 2(%rax)
 3054 18b6 0FB65304 		movzbl	4(%rbx), %edx
 3055 18ba 885003   		movb	%dl, 3(%rax)
 3056 18bd 0FB65303 		movzbl	3(%rbx), %edx
 3057 18c1 885004   		movb	%dl, 4(%rax)
 3058 18c4 0FB65302 		movzbl	2(%rbx), %edx
 3059 18c8 885005   		movb	%dl, 5(%rax)
 3060 18cb 0FB65301 		movzbl	1(%rbx), %edx
 3061 18cf 885006   		movb	%dl, 6(%rax)
 3062 18d2 0FB613   		movzbl	(%rbx), %edx
 3063 18d5 885007   		movb	%dl, 7(%rax)
 3064 18d8 0FB6530F 		movzbl	15(%rbx), %edx
 3065 18dc 885008   		movb	%dl, 8(%rax)
 3066 18df 0FB6530E 		movzbl	14(%rbx), %edx
 3067 18e3 885009   		movb	%dl, 9(%rax)
 3068 18e6 0FB6530D 		movzbl	13(%rbx), %edx
 3069 18ea 88500A   		movb	%dl, 10(%rax)
 3070 18ed 0FB6530C 		movzbl	12(%rbx), %edx
 3071 18f1 88500B   		movb	%dl, 11(%rax)
 3072 18f4 0FB6530B 		movzbl	11(%rbx), %edx
 3073 18f8 88500C   		movb	%dl, 12(%rax)
 3074 18fb 0FB6530A 		movzbl	10(%rbx), %edx
 3075 18ff 88500D   		movb	%dl, 13(%rax)
 3076 1902 0FB65309 		movzbl	9(%rbx), %edx
 3077 1906 88500E   		movb	%dl, 14(%rax)
 3078 1909 0FB65308 		movzbl	8(%rbx), %edx
 3079 190d 88500F   		movb	%dl, 15(%rax)
 3080 1910 0FB65317 		movzbl	23(%rbx), %edx
 3081 1914 885010   		movb	%dl, 16(%rax)
 3082 1917 0FB65316 		movzbl	22(%rbx), %edx
 3083 191b 885011   		movb	%dl, 17(%rax)
 3084 191e 0FB65315 		movzbl	21(%rbx), %edx
 3085 1922 885012   		movb	%dl, 18(%rax)
 3086 1925 0FB65314 		movzbl	20(%rbx), %edx
 3087 1929 885013   		movb	%dl, 19(%rax)
 3088 192c 0FB65313 		movzbl	19(%rbx), %edx
 3089 1930 885014   		movb	%dl, 20(%rax)
 3090 1933 0FB65312 		movzbl	18(%rbx), %edx
 3091 1937 885015   		movb	%dl, 21(%rax)
 3092 193a 0FB65311 		movzbl	17(%rbx), %edx
 3093 193e 885016   		movb	%dl, 22(%rax)
 3094 1941 0FB65310 		movzbl	16(%rbx), %edx
 3095 1945 885017   		movb	%dl, 23(%rax)
 3096 1948 0FB6531F 		movzbl	31(%rbx), %edx
 3097 194c 885018   		movb	%dl, 24(%rax)
 3098 194f 0FB6531E 		movzbl	30(%rbx), %edx
 3099 1953 885019   		movb	%dl, 25(%rax)
 3100 1956 0FB6531D 		movzbl	29(%rbx), %edx
 3101 195a 88501A   		movb	%dl, 26(%rax)
 3102 195d 0FB6531C 		movzbl	28(%rbx), %edx
 3103 1961 88501B   		movb	%dl, 27(%rax)
 3104 1964 0FB6531B 		movzbl	27(%rbx), %edx
 3105 1968 88501C   		movb	%dl, 28(%rax)
 3106 196b 0FB6531A 		movzbl	26(%rbx), %edx
 3107 196f 88501D   		movb	%dl, 29(%rax)
 3108 1972 0FB65319 		movzbl	25(%rbx), %edx
 3109 1976 88501E   		movb	%dl, 30(%rax)
 3110 1979 0FB65318 		movzbl	24(%rbx), %edx
 3111 197d 88501F   		movb	%dl, 31(%rax)
 3112 1980 C6402000 		movb	$0, 32(%rax)
 3113 1984 488B3500 		movq	key(%rip), %rsi
 3113      000000
 3114 198b E8000000 		call	encrypt
 3114      00
 3115 1990 803831   		cmpb	$49, (%rax)
 3116 1993 4C89E7   		movq	%r12, %rdi
 3117 1996 400FB6F5 		movzbl	%bpl, %esi
 3118 199a 4D89E8   		movq	%r13, %r8
 3119 199d 0F94C1   		sete	%cl
 3120 19a0 80780131 		cmpb	$49, 1(%rax)
 3121 19a4 8D5102   		leal	2(%rcx), %edx
 3122 19a7 0F44CA   		cmove	%edx, %ecx
 3123 19aa 80780231 		cmpb	$49, 2(%rax)
 3124 19ae 8D5104   		leal	4(%rcx), %edx
 3125 19b1 0F44CA   		cmove	%edx, %ecx
 3126 19b4 80780331 		cmpb	$49, 3(%rax)
 3127 19b8 8D5108   		leal	8(%rcx), %edx
 3128 19bb 0F44CA   		cmove	%edx, %ecx
 3129 19be 80780431 		cmpb	$49, 4(%rax)
 3130 19c2 8D5110   		leal	16(%rcx), %edx
 3131 19c5 0F44CA   		cmove	%edx, %ecx
 3132 19c8 80780531 		cmpb	$49, 5(%rax)
 3133 19cc 8D5120   		leal	32(%rcx), %edx
 3134 19cf 0F44CA   		cmove	%edx, %ecx
 3135 19d2 80780631 		cmpb	$49, 6(%rax)
 3136 19d6 8D5140   		leal	64(%rcx), %edx
 3137 19d9 0F45D1   		cmovne	%ecx, %edx
 3138 19dc 80780731 		cmpb	$49, 7(%rax)
 3139 19e0 8D4A80   		leal	-128(%rdx), %ecx
 3140 19e3 0F44D1   		cmove	%ecx, %edx
 3141 19e6 80780831 		cmpb	$49, 8(%rax)
 3142 19ea 881424   		movb	%dl, (%rsp)
 3143 19ed 0F94C1   		sete	%cl
 3144 19f0 80780931 		cmpb	$49, 9(%rax)
 3145 19f4 8D5102   		leal	2(%rcx), %edx
 3146 19f7 0F44CA   		cmove	%edx, %ecx
 3147 19fa 80780A31 		cmpb	$49, 10(%rax)
 3148 19fe 8D5104   		leal	4(%rcx), %edx
 3149 1a01 0F44CA   		cmove	%edx, %ecx
 3150 1a04 80780B31 		cmpb	$49, 11(%rax)
 3151 1a08 8D5108   		leal	8(%rcx), %edx
 3152 1a0b 0F44CA   		cmove	%edx, %ecx
 3153 1a0e 80780C31 		cmpb	$49, 12(%rax)
 3154 1a12 8D5110   		leal	16(%rcx), %edx
 3155 1a15 0F45D1   		cmovne	%ecx, %edx
 3156 1a18 80780D31 		cmpb	$49, 13(%rax)
 3157 1a1c 8D4A20   		leal	32(%rdx), %ecx
 3158 1a1f 0F44D1   		cmove	%ecx, %edx
 3159 1a22 80780E31 		cmpb	$49, 14(%rax)
 3160 1a26 8D4A40   		leal	64(%rdx), %ecx
 3161 1a29 0F44D1   		cmove	%ecx, %edx
 3162 1a2c 80780F31 		cmpb	$49, 15(%rax)
 3163 1a30 8D4A80   		leal	-128(%rdx), %ecx
 3164 1a33 0F44D1   		cmove	%ecx, %edx
 3165 1a36 80781031 		cmpb	$49, 16(%rax)
 3166 1a3a 88542401 		movb	%dl, 1(%rsp)
 3167 1a3e 0F94C1   		sete	%cl
 3168 1a41 80781131 		cmpb	$49, 17(%rax)
 3169 1a45 8D5102   		leal	2(%rcx), %edx
 3170 1a48 0F45D1   		cmovne	%ecx, %edx
 3171 1a4b 80781231 		cmpb	$49, 18(%rax)
 3172 1a4f 8D4A04   		leal	4(%rdx), %ecx
 3173 1a52 0F44D1   		cmove	%ecx, %edx
 3174 1a55 80781331 		cmpb	$49, 19(%rax)
 3175 1a59 8D4A08   		leal	8(%rdx), %ecx
 3176 1a5c 0F44D1   		cmove	%ecx, %edx
 3177 1a5f 80781431 		cmpb	$49, 20(%rax)
 3178 1a63 8D4A10   		leal	16(%rdx), %ecx
 3179 1a66 0F44D1   		cmove	%ecx, %edx
 3180 1a69 80781531 		cmpb	$49, 21(%rax)
 3181 1a6d 8D4A20   		leal	32(%rdx), %ecx
 3182 1a70 0F44D1   		cmove	%ecx, %edx
 3183 1a73 80781631 		cmpb	$49, 22(%rax)
 3184 1a77 8D4A40   		leal	64(%rdx), %ecx
 3185 1a7a 0F44D1   		cmove	%ecx, %edx
 3186 1a7d 80781731 		cmpb	$49, 23(%rax)
 3187 1a81 8D4A80   		leal	-128(%rdx), %ecx
 3188 1a84 0F44D1   		cmove	%ecx, %edx
 3189 1a87 80781831 		cmpb	$49, 24(%rax)
 3190 1a8b 88542402 		movb	%dl, 2(%rsp)
 3191 1a8f 0F94C1   		sete	%cl
 3192 1a92 80781931 		cmpb	$49, 25(%rax)
 3193 1a96 8D5102   		leal	2(%rcx), %edx
 3194 1a99 0F45D1   		cmovne	%ecx, %edx
 3195 1a9c 80781A31 		cmpb	$49, 26(%rax)
 3196 1aa0 8D4A04   		leal	4(%rdx), %ecx
 3197 1aa3 0F44D1   		cmove	%ecx, %edx
 3198 1aa6 80781B31 		cmpb	$49, 27(%rax)
 3199 1aaa 8D4A08   		leal	8(%rdx), %ecx
 3200 1aad 0F44D1   		cmove	%ecx, %edx
 3201 1ab0 80781C31 		cmpb	$49, 28(%rax)
 3202 1ab4 8D4A10   		leal	16(%rdx), %ecx
 3203 1ab7 0F44D1   		cmove	%ecx, %edx
 3204 1aba 80781D31 		cmpb	$49, 29(%rax)
 3205 1abe 8D4A20   		leal	32(%rdx), %ecx
 3206 1ac1 0F44D1   		cmove	%ecx, %edx
 3207 1ac4 80781E31 		cmpb	$49, 30(%rax)
 3208 1ac8 8D4A40   		leal	64(%rdx), %ecx
 3209 1acb 0F44D1   		cmove	%ecx, %edx
 3210 1ace 80781F31 		cmpb	$49, 31(%rax)
 3211 1ad2 8D4A80   		leal	-128(%rdx), %ecx
 3212 1ad5 0F44D1   		cmove	%ecx, %edx
 3213 1ad8 4889E1   		movq	%rsp, %rcx
 3214 1adb 88542403 		movb	%dl, 3(%rsp)
 3215 1adf BA040000 		movl	$4, %edx
 3215      00
 3216 1ae4 E8000000 		call	flWriteChannel
 3216      00
 3217 1ae9 83F801   		cmpl	$1, %eax
 3218 1aec 19C0     		sbbl	%eax, %eax
 3219 1aee 83E00D   		andl	$13, %eax
 3220 1af1 83C066   		addl	$102, %eax
 3221 1af4 488B7C24 		movq	8(%rsp), %rdi
 3221      08
 3222 1af9 6448333C 		xorq	%fs:40, %rdi
 3222      25280000 
 3222      00
 3223 1b02 750B     		jne	.L662
 3224 1b04 4883C418 		addq	$24, %rsp
 3225              		.cfi_remember_state
 3226              		.cfi_def_cfa_offset 40
 3227 1b08 5B       		popq	%rbx
 3228              		.cfi_def_cfa_offset 32
 3229 1b09 5D       		popq	%rbp
 3230              		.cfi_def_cfa_offset 24
 3231 1b0a 415C     		popq	%r12
 3232              		.cfi_def_cfa_offset 16
 3233 1b0c 415D     		popq	%r13
 3234              		.cfi_def_cfa_offset 8
 3235 1b0e C3       		ret
 3236              	.L662:
 3237              		.cfi_restore_state
 3238 1b0f E8000000 		call	__stack_chk_fail
 3238      00
 3239              		.cfi_endproc
 3240              	.LFE65:
 3242              		.section	.text.unlikely
 3243              	.LCOLDE31:
 3244              		.text
 3245              	.LHOTE31:
 3246              		.section	.text.unlikely
 3247              	.LCOLDB32:
 3248              		.text
 3249              	.LHOTB32:
 3250 1b14 6690662E 		.p2align 4,,15
 3250      0F1F8400 
 3250      00000000 
 3251              		.globl	read_4byte_from_fpga
 3253              	read_4byte_from_fpga:
 3254              	.LFB66:
 3255              		.cfi_startproc
 3256 1b20 4155     		pushq	%r13
 3257              		.cfi_def_cfa_offset 16
 3258              		.cfi_offset 13, -16
 3259 1b22 4154     		pushq	%r12
 3260              		.cfi_def_cfa_offset 24
 3261              		.cfi_offset 12, -24
 3262 1b24 4989D5   		movq	%rdx, %r13
 3263 1b27 55       		pushq	%rbp
 3264              		.cfi_def_cfa_offset 32
 3265              		.cfi_offset 6, -32
 3266 1b28 53       		pushq	%rbx
 3267              		.cfi_def_cfa_offset 40
 3268              		.cfi_offset 3, -40
 3269 1b29 89FD     		movl	%edi, %ebp
 3270 1b2b 4989F4   		movq	%rsi, %r12
 3271 1b2e BF210000 		movl	$33, %edi
 3271      00
 3272 1b33 400FB6ED 		movzbl	%bpl, %ebp
 3273 1b37 4883EC18 		subq	$24, %rsp
 3274              		.cfi_def_cfa_offset 64
 3275 1b3b 64488B04 		movq	%fs:40, %rax
 3275      25280000 
 3275      00
 3276 1b44 48894424 		movq	%rax, 8(%rsp)
 3276      08
 3277 1b49 31C0     		xorl	%eax, %eax
 3278 1b4b E8000000 		call	malloc
 3278      00
 3279 1b50 4D89E8   		movq	%r13, %r8
 3280 1b53 4889E1   		movq	%rsp, %rcx
 3281 1b56 BA020000 		movl	$2, %edx
 3281      00
 3282 1b5b 89EE     		movl	%ebp, %esi
 3283 1b5d 4C89E7   		movq	%r12, %rdi
 3284 1b60 4889C3   		movq	%rax, %rbx
 3285 1b63 E8000000 		call	flReadChannel
 3285      00
 3286 1b68 4D89E8   		movq	%r13, %r8
 3287 1b6b 4889E1   		movq	%rsp, %rcx
 3288 1b6e BA040000 		movl	$4, %edx
 3288      00
 3289 1b73 89EE     		movl	%ebp, %esi
 3290 1b75 4C89E7   		movq	%r12, %rdi
 3291 1b78 E8000000 		call	flReadChannel
 3291      00
 3292 1b7d 85C0     		testl	%eax, %eax
 3293 1b7f 0F852302 		jne	.L732
 3293      0000
 3294 1b85 0FB60424 		movzbl	(%rsp), %eax
 3295 1b89 4889DF   		movq	%rbx, %rdi
 3296 1b8c 89C2     		movl	%eax, %edx
 3297 1b8e 83E201   		andl	$1, %edx
 3298 1b91 83C230   		addl	$48, %edx
 3299 1b94 8813     		movb	%dl, (%rbx)
 3300 1b96 89C2     		movl	%eax, %edx
 3301 1b98 83E202   		andl	$2, %edx
 3302 1b9b 80FA01   		cmpb	$1, %dl
 3303 1b9e 19D2     		sbbl	%edx, %edx
 3304 1ba0 83C231   		addl	$49, %edx
 3305 1ba3 885301   		movb	%dl, 1(%rbx)
 3306 1ba6 89C2     		movl	%eax, %edx
 3307 1ba8 83E204   		andl	$4, %edx
 3308 1bab 80FA01   		cmpb	$1, %dl
 3309 1bae 19D2     		sbbl	%edx, %edx
 3310 1bb0 83C231   		addl	$49, %edx
 3311 1bb3 885302   		movb	%dl, 2(%rbx)
 3312 1bb6 89C2     		movl	%eax, %edx
 3313 1bb8 83E208   		andl	$8, %edx
 3314 1bbb 80FA01   		cmpb	$1, %dl
 3315 1bbe 19D2     		sbbl	%edx, %edx
 3316 1bc0 83C231   		addl	$49, %edx
 3317 1bc3 885303   		movb	%dl, 3(%rbx)
 3318 1bc6 89C2     		movl	%eax, %edx
 3319 1bc8 83E210   		andl	$16, %edx
 3320 1bcb 80FA01   		cmpb	$1, %dl
 3321 1bce 19D2     		sbbl	%edx, %edx
 3322 1bd0 83C231   		addl	$49, %edx
 3323 1bd3 885304   		movb	%dl, 4(%rbx)
 3324 1bd6 89C2     		movl	%eax, %edx
 3325 1bd8 83E220   		andl	$32, %edx
 3326 1bdb 80FA01   		cmpb	$1, %dl
 3327 1bde 19D2     		sbbl	%edx, %edx
 3328 1be0 83C231   		addl	$49, %edx
 3329 1be3 885305   		movb	%dl, 5(%rbx)
 3330 1be6 89C2     		movl	%eax, %edx
 3331 1be8 83E240   		andl	$64, %edx
 3332 1beb 80FA01   		cmpb	$1, %dl
 3333 1bee 19D2     		sbbl	%edx, %edx
 3334 1bf0 83E080   		andl	$-128, %eax
 3335 1bf3 83C231   		addl	$49, %edx
 3336 1bf6 3C01     		cmpb	$1, %al
 3337 1bf8 19C0     		sbbl	%eax, %eax
 3338 1bfa 885306   		movb	%dl, 6(%rbx)
 3339 1bfd 83C031   		addl	$49, %eax
 3340 1c00 884307   		movb	%al, 7(%rbx)
 3341 1c03 0FB64424 		movzbl	1(%rsp), %eax
 3341      01
 3342 1c08 89C2     		movl	%eax, %edx
 3343 1c0a 83E201   		andl	$1, %edx
 3344 1c0d 83C230   		addl	$48, %edx
 3345 1c10 885308   		movb	%dl, 8(%rbx)
 3346 1c13 89C2     		movl	%eax, %edx
 3347 1c15 83E202   		andl	$2, %edx
 3348 1c18 80FA01   		cmpb	$1, %dl
 3349 1c1b 19D2     		sbbl	%edx, %edx
 3350 1c1d 83C231   		addl	$49, %edx
 3351 1c20 885309   		movb	%dl, 9(%rbx)
 3352 1c23 89C2     		movl	%eax, %edx
 3353 1c25 83E204   		andl	$4, %edx
 3354 1c28 80FA01   		cmpb	$1, %dl
 3355 1c2b 19D2     		sbbl	%edx, %edx
 3356 1c2d 83C231   		addl	$49, %edx
 3357 1c30 88530A   		movb	%dl, 10(%rbx)
 3358 1c33 89C2     		movl	%eax, %edx
 3359 1c35 83E208   		andl	$8, %edx
 3360 1c38 80FA01   		cmpb	$1, %dl
 3361 1c3b 19D2     		sbbl	%edx, %edx
 3362 1c3d 83C231   		addl	$49, %edx
 3363 1c40 88530B   		movb	%dl, 11(%rbx)
 3364 1c43 89C2     		movl	%eax, %edx
 3365 1c45 83E210   		andl	$16, %edx
 3366 1c48 80FA01   		cmpb	$1, %dl
 3367 1c4b 19D2     		sbbl	%edx, %edx
 3368 1c4d 83C231   		addl	$49, %edx
 3369 1c50 88530C   		movb	%dl, 12(%rbx)
 3370 1c53 89C2     		movl	%eax, %edx
 3371 1c55 83E220   		andl	$32, %edx
 3372 1c58 80FA01   		cmpb	$1, %dl
 3373 1c5b 19D2     		sbbl	%edx, %edx
 3374 1c5d 83C231   		addl	$49, %edx
 3375 1c60 88530D   		movb	%dl, 13(%rbx)
 3376 1c63 89C2     		movl	%eax, %edx
 3377 1c65 83E240   		andl	$64, %edx
 3378 1c68 80FA01   		cmpb	$1, %dl
 3379 1c6b 19D2     		sbbl	%edx, %edx
 3380 1c6d 83E080   		andl	$-128, %eax
 3381 1c70 83C231   		addl	$49, %edx
 3382 1c73 3C01     		cmpb	$1, %al
 3383 1c75 19C0     		sbbl	%eax, %eax
 3384 1c77 88530E   		movb	%dl, 14(%rbx)
 3385 1c7a 83C031   		addl	$49, %eax
 3386 1c7d 88430F   		movb	%al, 15(%rbx)
 3387 1c80 0FB64424 		movzbl	2(%rsp), %eax
 3387      02
 3388 1c85 89C2     		movl	%eax, %edx
 3389 1c87 83E201   		andl	$1, %edx
 3390 1c8a 83C230   		addl	$48, %edx
 3391 1c8d 885310   		movb	%dl, 16(%rbx)
 3392 1c90 89C2     		movl	%eax, %edx
 3393 1c92 83E202   		andl	$2, %edx
 3394 1c95 80FA01   		cmpb	$1, %dl
 3395 1c98 19D2     		sbbl	%edx, %edx
 3396 1c9a 83C231   		addl	$49, %edx
 3397 1c9d 885311   		movb	%dl, 17(%rbx)
 3398 1ca0 89C2     		movl	%eax, %edx
 3399 1ca2 83E204   		andl	$4, %edx
 3400 1ca5 80FA01   		cmpb	$1, %dl
 3401 1ca8 19D2     		sbbl	%edx, %edx
 3402 1caa 83C231   		addl	$49, %edx
 3403 1cad 885312   		movb	%dl, 18(%rbx)
 3404 1cb0 89C2     		movl	%eax, %edx
 3405 1cb2 83E208   		andl	$8, %edx
 3406 1cb5 80FA01   		cmpb	$1, %dl
 3407 1cb8 19D2     		sbbl	%edx, %edx
 3408 1cba 83C231   		addl	$49, %edx
 3409 1cbd 885313   		movb	%dl, 19(%rbx)
 3410 1cc0 89C2     		movl	%eax, %edx
 3411 1cc2 83E210   		andl	$16, %edx
 3412 1cc5 80FA01   		cmpb	$1, %dl
 3413 1cc8 19D2     		sbbl	%edx, %edx
 3414 1cca 83C231   		addl	$49, %edx
 3415 1ccd 885314   		movb	%dl, 20(%rbx)
 3416 1cd0 89C2     		movl	%eax, %edx
 3417 1cd2 83E220   		andl	$32, %edx
 3418 1cd5 80FA01   		cmpb	$1, %dl
 3419 1cd8 19D2     		sbbl	%edx, %edx
 3420 1cda 83C231   		addl	$49, %edx
 3421 1cdd 885315   		movb	%dl, 21(%rbx)
 3422 1ce0 89C2     		movl	%eax, %edx
 3423 1ce2 83E240   		andl	$64, %edx
 3424 1ce5 80FA01   		cmpb	$1, %dl
 3425 1ce8 19D2     		sbbl	%edx, %edx
 3426 1cea 83E080   		andl	$-128, %eax
 3427 1ced 83C231   		addl	$49, %edx
 3428 1cf0 3C01     		cmpb	$1, %al
 3429 1cf2 19C0     		sbbl	%eax, %eax
 3430 1cf4 885316   		movb	%dl, 22(%rbx)
 3431 1cf7 83C031   		addl	$49, %eax
 3432 1cfa 884317   		movb	%al, 23(%rbx)
 3433 1cfd 0FB64424 		movzbl	3(%rsp), %eax
 3433      03
 3434 1d02 89C2     		movl	%eax, %edx
 3435 1d04 83E201   		andl	$1, %edx
 3436 1d07 83C230   		addl	$48, %edx
 3437 1d0a 885318   		movb	%dl, 24(%rbx)
 3438 1d0d 89C2     		movl	%eax, %edx
 3439 1d0f 83E202   		andl	$2, %edx
 3440 1d12 80FA01   		cmpb	$1, %dl
 3441 1d15 19D2     		sbbl	%edx, %edx
 3442 1d17 83C231   		addl	$49, %edx
 3443 1d1a 885319   		movb	%dl, 25(%rbx)
 3444 1d1d 89C2     		movl	%eax, %edx
 3445 1d1f 83E204   		andl	$4, %edx
 3446 1d22 80FA01   		cmpb	$1, %dl
 3447 1d25 19D2     		sbbl	%edx, %edx
 3448 1d27 83C231   		addl	$49, %edx
 3449 1d2a 88531A   		movb	%dl, 26(%rbx)
 3450 1d2d 89C2     		movl	%eax, %edx
 3451 1d2f 83E208   		andl	$8, %edx
 3452 1d32 80FA01   		cmpb	$1, %dl
 3453 1d35 19D2     		sbbl	%edx, %edx
 3454 1d37 83C231   		addl	$49, %edx
 3455 1d3a 88531B   		movb	%dl, 27(%rbx)
 3456 1d3d 89C2     		movl	%eax, %edx
 3457 1d3f 83E210   		andl	$16, %edx
 3458 1d42 80FA01   		cmpb	$1, %dl
 3459 1d45 19D2     		sbbl	%edx, %edx
 3460 1d47 83C231   		addl	$49, %edx
 3461 1d4a 88531C   		movb	%dl, 28(%rbx)
 3462 1d4d 89C2     		movl	%eax, %edx
 3463 1d4f 488B3500 		movq	key(%rip), %rsi
 3463      000000
 3464 1d56 83E220   		andl	$32, %edx
 3465 1d59 80FA01   		cmpb	$1, %dl
 3466 1d5c 19D2     		sbbl	%edx, %edx
 3467 1d5e 83C231   		addl	$49, %edx
 3468 1d61 88531D   		movb	%dl, 29(%rbx)
 3469 1d64 89C2     		movl	%eax, %edx
 3470 1d66 83E240   		andl	$64, %edx
 3471 1d69 80FA01   		cmpb	$1, %dl
 3472 1d6c 19D2     		sbbl	%edx, %edx
 3473 1d6e 83E080   		andl	$-128, %eax
 3474 1d71 83C231   		addl	$49, %edx
 3475 1d74 3C01     		cmpb	$1, %al
 3476 1d76 19C0     		sbbl	%eax, %eax
 3477 1d78 88531E   		movb	%dl, 30(%rbx)
 3478 1d7b 83C031   		addl	$49, %eax
 3479 1d7e 88431F   		movb	%al, 31(%rbx)
 3480 1d81 E8000000 		call	decrypt
 3480      00
 3481              	.L665:
 3482 1d86 488B4C24 		movq	8(%rsp), %rcx
 3482      08
 3483 1d8b 6448330C 		xorq	%fs:40, %rcx
 3483      25280000 
 3483      00
 3484 1d94 751A     		jne	.L733
 3485 1d96 4883C418 		addq	$24, %rsp
 3486              		.cfi_remember_state
 3487              		.cfi_def_cfa_offset 40
 3488 1d9a 5B       		popq	%rbx
 3489              		.cfi_def_cfa_offset 32
 3490 1d9b 5D       		popq	%rbp
 3491              		.cfi_def_cfa_offset 24
 3492 1d9c 415C     		popq	%r12
 3493              		.cfi_def_cfa_offset 16
 3494 1d9e 415D     		popq	%r13
 3495              		.cfi_def_cfa_offset 8
 3496 1da0 C3       		ret
 3497              		.p2align 4,,10
 3498 1da1 0F1F8000 		.p2align 3
 3498      000000
 3499              	.L732:
 3500              		.cfi_restore_state
 3501 1da8 C60366   		movb	$102, (%rbx)
 3502 1dab 4889D8   		movq	%rbx, %rax
 3503 1dae EBD6     		jmp	.L665
 3504              	.L733:
 3505 1db0 E8000000 		call	__stack_chk_fail
 3505      00
 3506              		.cfi_endproc
 3507              	.LFE66:
 3509              		.section	.text.unlikely
 3510              	.LCOLDE32:
 3511              		.text
 3512              	.LHOTE32:
 3513              		.section	.rodata.str1.1
 3514              	.LC33:
 3515 0083 72656365 		.string	"received ack is %s\n"
 3515      69766564 
 3515      2061636B 
 3515      20697320 
 3515      25730A00 
 3516              		.section	.text.unlikely
 3517              	.LCOLDB34:
 3518              		.text
 3519              	.LHOTB34:
 3520 1db5 90662E0F 		.p2align 4,,15
 3520      1F840000 
 3520      000000
 3521              		.globl	receive_ack
 3523              	receive_ack:
 3524              	.LFB67:
 3525              		.cfi_startproc
 3526 1dc0 4155     		pushq	%r13
 3527              		.cfi_def_cfa_offset 16
 3528              		.cfi_offset 13, -16
 3529 1dc2 4154     		pushq	%r12
 3530              		.cfi_def_cfa_offset 24
 3531              		.cfi_offset 12, -24
 3532 1dc4 4989D5   		movq	%rdx, %r13
 3533 1dc7 55       		pushq	%rbp
 3534              		.cfi_def_cfa_offset 32
 3535              		.cfi_offset 6, -32
 3536 1dc8 53       		pushq	%rbx
 3537              		.cfi_def_cfa_offset 40
 3538              		.cfi_offset 3, -40
 3539 1dc9 89FD     		movl	%edi, %ebp
 3540 1dcb 4989F4   		movq	%rsi, %r12
 3541 1dce BF210000 		movl	$33, %edi
 3541      00
 3542 1dd3 400FB6ED 		movzbl	%bpl, %ebp
 3543 1dd7 4883EC18 		subq	$24, %rsp
 3544              		.cfi_def_cfa_offset 64
 3545 1ddb 64488B04 		movq	%fs:40, %rax
 3545      25280000 
 3545      00
 3546 1de4 48894424 		movq	%rax, 8(%rsp)
 3546      08
 3547 1de9 31C0     		xorl	%eax, %eax
 3548 1deb E8000000 		call	malloc
 3548      00
 3549 1df0 4D89E8   		movq	%r13, %r8
 3550 1df3 4889E1   		movq	%rsp, %rcx
 3551 1df6 BA020000 		movl	$2, %edx
 3551      00
 3552 1dfb 89EE     		movl	%ebp, %esi
 3553 1dfd 4C89E7   		movq	%r12, %rdi
 3554 1e00 4889C3   		movq	%rax, %rbx
 3555 1e03 E8000000 		call	flReadChannel
 3555      00
 3556 1e08 4D89E8   		movq	%r13, %r8
 3557 1e0b 4889E1   		movq	%rsp, %rcx
 3558 1e0e BA040000 		movl	$4, %edx
 3558      00
 3559 1e13 89EE     		movl	%ebp, %esi
 3560 1e15 4C89E7   		movq	%r12, %rdi
 3561 1e18 E8000000 		call	flReadChannel
 3561      00
 3562 1e1d 85C0     		testl	%eax, %eax
 3563 1e1f 0F856302 		jne	.L807
 3563      0000
 3564 1e25 0FB60424 		movzbl	(%rsp), %eax
 3565 1e29 4889DF   		movq	%rbx, %rdi
 3566 1e2c 89C2     		movl	%eax, %edx
 3567 1e2e 83E201   		andl	$1, %edx
 3568 1e31 83C230   		addl	$48, %edx
 3569 1e34 8813     		movb	%dl, (%rbx)
 3570 1e36 89C2     		movl	%eax, %edx
 3571 1e38 83E202   		andl	$2, %edx
 3572 1e3b 80FA01   		cmpb	$1, %dl
 3573 1e3e 19D2     		sbbl	%edx, %edx
 3574 1e40 83C231   		addl	$49, %edx
 3575 1e43 885301   		movb	%dl, 1(%rbx)
 3576 1e46 89C2     		movl	%eax, %edx
 3577 1e48 83E204   		andl	$4, %edx
 3578 1e4b 80FA01   		cmpb	$1, %dl
 3579 1e4e 19D2     		sbbl	%edx, %edx
 3580 1e50 83C231   		addl	$49, %edx
 3581 1e53 885302   		movb	%dl, 2(%rbx)
 3582 1e56 89C2     		movl	%eax, %edx
 3583 1e58 83E208   		andl	$8, %edx
 3584 1e5b 80FA01   		cmpb	$1, %dl
 3585 1e5e 19D2     		sbbl	%edx, %edx
 3586 1e60 83C231   		addl	$49, %edx
 3587 1e63 885303   		movb	%dl, 3(%rbx)
 3588 1e66 89C2     		movl	%eax, %edx
 3589 1e68 83E210   		andl	$16, %edx
 3590 1e6b 80FA01   		cmpb	$1, %dl
 3591 1e6e 19D2     		sbbl	%edx, %edx
 3592 1e70 83C231   		addl	$49, %edx
 3593 1e73 885304   		movb	%dl, 4(%rbx)
 3594 1e76 89C2     		movl	%eax, %edx
 3595 1e78 83E220   		andl	$32, %edx
 3596 1e7b 80FA01   		cmpb	$1, %dl
 3597 1e7e 19D2     		sbbl	%edx, %edx
 3598 1e80 83C231   		addl	$49, %edx
 3599 1e83 885305   		movb	%dl, 5(%rbx)
 3600 1e86 89C2     		movl	%eax, %edx
 3601 1e88 83E240   		andl	$64, %edx
 3602 1e8b 80FA01   		cmpb	$1, %dl
 3603 1e8e 19D2     		sbbl	%edx, %edx
 3604 1e90 83E080   		andl	$-128, %eax
 3605 1e93 83C231   		addl	$49, %edx
 3606 1e96 3C01     		cmpb	$1, %al
 3607 1e98 19C0     		sbbl	%eax, %eax
 3608 1e9a 885306   		movb	%dl, 6(%rbx)
 3609 1e9d 83C031   		addl	$49, %eax
 3610 1ea0 884307   		movb	%al, 7(%rbx)
 3611 1ea3 0FB64424 		movzbl	1(%rsp), %eax
 3611      01
 3612 1ea8 89C2     		movl	%eax, %edx
 3613 1eaa 83E201   		andl	$1, %edx
 3614 1ead 83C230   		addl	$48, %edx
 3615 1eb0 885308   		movb	%dl, 8(%rbx)
 3616 1eb3 89C2     		movl	%eax, %edx
 3617 1eb5 83E202   		andl	$2, %edx
 3618 1eb8 80FA01   		cmpb	$1, %dl
 3619 1ebb 19D2     		sbbl	%edx, %edx
 3620 1ebd 83C231   		addl	$49, %edx
 3621 1ec0 885309   		movb	%dl, 9(%rbx)
 3622 1ec3 89C2     		movl	%eax, %edx
 3623 1ec5 83E204   		andl	$4, %edx
 3624 1ec8 80FA01   		cmpb	$1, %dl
 3625 1ecb 19D2     		sbbl	%edx, %edx
 3626 1ecd 83C231   		addl	$49, %edx
 3627 1ed0 88530A   		movb	%dl, 10(%rbx)
 3628 1ed3 89C2     		movl	%eax, %edx
 3629 1ed5 83E208   		andl	$8, %edx
 3630 1ed8 80FA01   		cmpb	$1, %dl
 3631 1edb 19D2     		sbbl	%edx, %edx
 3632 1edd 83C231   		addl	$49, %edx
 3633 1ee0 88530B   		movb	%dl, 11(%rbx)
 3634 1ee3 89C2     		movl	%eax, %edx
 3635 1ee5 83E210   		andl	$16, %edx
 3636 1ee8 80FA01   		cmpb	$1, %dl
 3637 1eeb 19D2     		sbbl	%edx, %edx
 3638 1eed 83C231   		addl	$49, %edx
 3639 1ef0 88530C   		movb	%dl, 12(%rbx)
 3640 1ef3 89C2     		movl	%eax, %edx
 3641 1ef5 83E220   		andl	$32, %edx
 3642 1ef8 80FA01   		cmpb	$1, %dl
 3643 1efb 19D2     		sbbl	%edx, %edx
 3644 1efd 83C231   		addl	$49, %edx
 3645 1f00 88530D   		movb	%dl, 13(%rbx)
 3646 1f03 89C2     		movl	%eax, %edx
 3647 1f05 83E240   		andl	$64, %edx
 3648 1f08 80FA01   		cmpb	$1, %dl
 3649 1f0b 19D2     		sbbl	%edx, %edx
 3650 1f0d 83E080   		andl	$-128, %eax
 3651 1f10 83C231   		addl	$49, %edx
 3652 1f13 3C01     		cmpb	$1, %al
 3653 1f15 19C0     		sbbl	%eax, %eax
 3654 1f17 88530E   		movb	%dl, 14(%rbx)
 3655 1f1a 83C031   		addl	$49, %eax
 3656 1f1d 88430F   		movb	%al, 15(%rbx)
 3657 1f20 0FB64424 		movzbl	2(%rsp), %eax
 3657      02
 3658 1f25 89C2     		movl	%eax, %edx
 3659 1f27 83E201   		andl	$1, %edx
 3660 1f2a 83C230   		addl	$48, %edx
 3661 1f2d 885310   		movb	%dl, 16(%rbx)
 3662 1f30 89C2     		movl	%eax, %edx
 3663 1f32 83E202   		andl	$2, %edx
 3664 1f35 80FA01   		cmpb	$1, %dl
 3665 1f38 19D2     		sbbl	%edx, %edx
 3666 1f3a 83C231   		addl	$49, %edx
 3667 1f3d 885311   		movb	%dl, 17(%rbx)
 3668 1f40 89C2     		movl	%eax, %edx
 3669 1f42 83E204   		andl	$4, %edx
 3670 1f45 80FA01   		cmpb	$1, %dl
 3671 1f48 19D2     		sbbl	%edx, %edx
 3672 1f4a 83C231   		addl	$49, %edx
 3673 1f4d 885312   		movb	%dl, 18(%rbx)
 3674 1f50 89C2     		movl	%eax, %edx
 3675 1f52 83E208   		andl	$8, %edx
 3676 1f55 80FA01   		cmpb	$1, %dl
 3677 1f58 19D2     		sbbl	%edx, %edx
 3678 1f5a 83C231   		addl	$49, %edx
 3679 1f5d 885313   		movb	%dl, 19(%rbx)
 3680 1f60 89C2     		movl	%eax, %edx
 3681 1f62 83E210   		andl	$16, %edx
 3682 1f65 80FA01   		cmpb	$1, %dl
 3683 1f68 19D2     		sbbl	%edx, %edx
 3684 1f6a 83C231   		addl	$49, %edx
 3685 1f6d 885314   		movb	%dl, 20(%rbx)
 3686 1f70 89C2     		movl	%eax, %edx
 3687 1f72 83E220   		andl	$32, %edx
 3688 1f75 80FA01   		cmpb	$1, %dl
 3689 1f78 19D2     		sbbl	%edx, %edx
 3690 1f7a 83C231   		addl	$49, %edx
 3691 1f7d 885315   		movb	%dl, 21(%rbx)
 3692 1f80 89C2     		movl	%eax, %edx
 3693 1f82 83E240   		andl	$64, %edx
 3694 1f85 80FA01   		cmpb	$1, %dl
 3695 1f88 19D2     		sbbl	%edx, %edx
 3696 1f8a 83E080   		andl	$-128, %eax
 3697 1f8d 83C231   		addl	$49, %edx
 3698 1f90 3C01     		cmpb	$1, %al
 3699 1f92 19C0     		sbbl	%eax, %eax
 3700 1f94 885316   		movb	%dl, 22(%rbx)
 3701 1f97 83C031   		addl	$49, %eax
 3702 1f9a 884317   		movb	%al, 23(%rbx)
 3703 1f9d 0FB64424 		movzbl	3(%rsp), %eax
 3703      03
 3704 1fa2 89C2     		movl	%eax, %edx
 3705 1fa4 83E201   		andl	$1, %edx
 3706 1fa7 83C230   		addl	$48, %edx
 3707 1faa 885318   		movb	%dl, 24(%rbx)
 3708 1fad 89C2     		movl	%eax, %edx
 3709 1faf 83E202   		andl	$2, %edx
 3710 1fb2 80FA01   		cmpb	$1, %dl
 3711 1fb5 19D2     		sbbl	%edx, %edx
 3712 1fb7 83C231   		addl	$49, %edx
 3713 1fba 885319   		movb	%dl, 25(%rbx)
 3714 1fbd 89C2     		movl	%eax, %edx
 3715 1fbf 83E204   		andl	$4, %edx
 3716 1fc2 80FA01   		cmpb	$1, %dl
 3717 1fc5 19D2     		sbbl	%edx, %edx
 3718 1fc7 83C231   		addl	$49, %edx
 3719 1fca 88531A   		movb	%dl, 26(%rbx)
 3720 1fcd 89C2     		movl	%eax, %edx
 3721 1fcf 83E208   		andl	$8, %edx
 3722 1fd2 80FA01   		cmpb	$1, %dl
 3723 1fd5 19D2     		sbbl	%edx, %edx
 3724 1fd7 83C231   		addl	$49, %edx
 3725 1fda 88531B   		movb	%dl, 27(%rbx)
 3726 1fdd 89C2     		movl	%eax, %edx
 3727 1fdf 83E210   		andl	$16, %edx
 3728 1fe2 80FA01   		cmpb	$1, %dl
 3729 1fe5 19D2     		sbbl	%edx, %edx
 3730 1fe7 83C231   		addl	$49, %edx
 3731 1fea 88531C   		movb	%dl, 28(%rbx)
 3732 1fed 89C2     		movl	%eax, %edx
 3733 1fef 488B3500 		movq	key(%rip), %rsi
 3733      000000
 3734 1ff6 83E220   		andl	$32, %edx
 3735 1ff9 80FA01   		cmpb	$1, %dl
 3736 1ffc 19D2     		sbbl	%edx, %edx
 3737 1ffe 83C231   		addl	$49, %edx
 3738 2001 88531D   		movb	%dl, 29(%rbx)
 3739 2004 89C2     		movl	%eax, %edx
 3740 2006 83E240   		andl	$64, %edx
 3741 2009 80FA01   		cmpb	$1, %dl
 3742 200c 19D2     		sbbl	%edx, %edx
 3743 200e 83E080   		andl	$-128, %eax
 3744 2011 83C231   		addl	$49, %edx
 3745 2014 3C01     		cmpb	$1, %al
 3746 2016 19C0     		sbbl	%eax, %eax
 3747 2018 88531E   		movb	%dl, 30(%rbx)
 3748 201b 83C031   		addl	$49, %eax
 3749 201e 88431F   		movb	%al, 31(%rbx)
 3750 2021 E8000000 		call	decrypt
 3750      00
 3751 2026 4889C3   		movq	%rax, %rbx
 3752              	.L736:
 3753 2029 31C0     		xorl	%eax, %eax
 3754 202b 4889DA   		movq	%rbx, %rdx
 3755 202e BE000000 		movl	$.LC33, %esi
 3755      00
 3756 2033 BF010000 		movl	$1, %edi
 3756      00
 3757 2038 E8000000 		call	__printf_chk
 3757      00
 3758 203d 803B66   		cmpb	$102, (%rbx)
 3759 2040 7424     		je	.L801
 3760 2042 488B0500 		movq	ack1(%rip), %rax
 3760      000000
 3761 2049 31D2     		xorl	%edx, %edx
 3762 204b EB0D     		jmp	.L803
 3763 204d 0F1F00   		.p2align 4,,10
 3764              		.p2align 3
 3765              	.L802:
 3766 2050 4883C201 		addq	$1, %rdx
 3767 2054 4883FA20 		cmpq	$32, %rdx
 3768 2058 740C     		je	.L801
 3769              	.L803:
 3770 205a 0FB60C10 		movzbl	(%rax,%rdx), %ecx
 3771 205e 380C13   		cmpb	%cl, (%rbx,%rdx)
 3772 2061 74ED     		je	.L802
 3773 2063 C60366   		movb	$102, (%rbx)
 3774              	.L801:
 3775 2066 488B7424 		movq	8(%rsp), %rsi
 3775      08
 3776 206b 64483334 		xorq	%fs:40, %rsi
 3776      25280000 
 3776      00
 3777 2074 4889D8   		movq	%rbx, %rax
 3778 2077 7514     		jne	.L808
 3779 2079 4883C418 		addq	$24, %rsp
 3780              		.cfi_remember_state
 3781              		.cfi_def_cfa_offset 40
 3782 207d 5B       		popq	%rbx
 3783              		.cfi_def_cfa_offset 32
 3784 207e 5D       		popq	%rbp
 3785              		.cfi_def_cfa_offset 24
 3786 207f 415C     		popq	%r12
 3787              		.cfi_def_cfa_offset 16
 3788 2081 415D     		popq	%r13
 3789              		.cfi_def_cfa_offset 8
 3790 2083 C3       		ret
 3791              		.p2align 4,,10
 3792 2084 0F1F4000 		.p2align 3
 3793              	.L807:
 3794              		.cfi_restore_state
 3795 2088 C60366   		movb	$102, (%rbx)
 3796 208b EB9C     		jmp	.L736
 3797              	.L808:
 3798 208d E8000000 		call	__stack_chk_fail
 3798      00
 3799              		.cfi_endproc
 3800              	.LFE67:
 3802              		.section	.text.unlikely
 3803              	.LCOLDE34:
 3804              		.text
 3805              	.LHOTE34:
 3806              		.section	.text.unlikely
 3807              	.LCOLDB35:
 3808              		.text
 3809              	.LHOTB35:
 3810 2092 0F1F4000 		.p2align 4,,15
 3810      662E0F1F 
 3810      84000000 
 3810      0000
 3811              		.globl	send_ack
 3813              	send_ack:
 3814              	.LFB68:
 3815              		.cfi_startproc
 3816 20a0 4155     		pushq	%r13
 3817              		.cfi_def_cfa_offset 16
 3818              		.cfi_offset 13, -16
 3819 20a2 4154     		pushq	%r12
 3820              		.cfi_def_cfa_offset 24
 3821              		.cfi_offset 12, -24
 3822 20a4 4189CD   		movl	%ecx, %r13d
 3823 20a7 55       		pushq	%rbp
 3824              		.cfi_def_cfa_offset 32
 3825              		.cfi_offset 6, -32
 3826 20a8 53       		pushq	%rbx
 3827              		.cfi_def_cfa_offset 40
 3828              		.cfi_offset 3, -40
 3829 20a9 89FB     		movl	%edi, %ebx
 3830 20ab BF210000 		movl	$33, %edi
 3830      00
 3831 20b0 4889F5   		movq	%rsi, %rbp
 3832 20b3 4989D4   		movq	%rdx, %r12
 3833 20b6 4883EC08 		subq	$8, %rsp
 3834              		.cfi_def_cfa_offset 48
 3835 20ba E8000000 		call	malloc
 3835      00
 3836 20bf 488B3D00 		movq	ack2(%rip), %rdi
 3836      000000
 3837 20c6 4589E8   		movl	%r13d, %r8d
 3838 20c9 4C89E1   		movq	%r12, %rcx
 3839 20cc 4889C6   		movq	%rax, %rsi
 3840 20cf 0FB65707 		movzbl	7(%rdi), %edx
 3841 20d3 8810     		movb	%dl, (%rax)
 3842 20d5 0FB65706 		movzbl	6(%rdi), %edx
 3843 20d9 885001   		movb	%dl, 1(%rax)
 3844 20dc 0FB65705 		movzbl	5(%rdi), %edx
 3845 20e0 885002   		movb	%dl, 2(%rax)
 3846 20e3 0FB65704 		movzbl	4(%rdi), %edx
 3847 20e7 885003   		movb	%dl, 3(%rax)
 3848 20ea 0FB65703 		movzbl	3(%rdi), %edx
 3849 20ee 885004   		movb	%dl, 4(%rax)
 3850 20f1 0FB65702 		movzbl	2(%rdi), %edx
 3851 20f5 885005   		movb	%dl, 5(%rax)
 3852 20f8 0FB65701 		movzbl	1(%rdi), %edx
 3853 20fc 885006   		movb	%dl, 6(%rax)
 3854 20ff 0FB617   		movzbl	(%rdi), %edx
 3855 2102 885007   		movb	%dl, 7(%rax)
 3856 2105 0FB6570F 		movzbl	15(%rdi), %edx
 3857 2109 885008   		movb	%dl, 8(%rax)
 3858 210c 0FB6570E 		movzbl	14(%rdi), %edx
 3859 2110 885009   		movb	%dl, 9(%rax)
 3860 2113 0FB6570D 		movzbl	13(%rdi), %edx
 3861 2117 88500A   		movb	%dl, 10(%rax)
 3862 211a 0FB6570C 		movzbl	12(%rdi), %edx
 3863 211e 88500B   		movb	%dl, 11(%rax)
 3864 2121 0FB6570B 		movzbl	11(%rdi), %edx
 3865 2125 88500C   		movb	%dl, 12(%rax)
 3866 2128 0FB6570A 		movzbl	10(%rdi), %edx
 3867 212c 88500D   		movb	%dl, 13(%rax)
 3868 212f 0FB65709 		movzbl	9(%rdi), %edx
 3869 2133 88500E   		movb	%dl, 14(%rax)
 3870 2136 0FB65708 		movzbl	8(%rdi), %edx
 3871 213a 88500F   		movb	%dl, 15(%rax)
 3872 213d 0FB65717 		movzbl	23(%rdi), %edx
 3873 2141 885010   		movb	%dl, 16(%rax)
 3874 2144 0FB65716 		movzbl	22(%rdi), %edx
 3875 2148 885011   		movb	%dl, 17(%rax)
 3876 214b 0FB65715 		movzbl	21(%rdi), %edx
 3877 214f 885012   		movb	%dl, 18(%rax)
 3878 2152 0FB65714 		movzbl	20(%rdi), %edx
 3879 2156 885013   		movb	%dl, 19(%rax)
 3880 2159 0FB65713 		movzbl	19(%rdi), %edx
 3881 215d 885014   		movb	%dl, 20(%rax)
 3882 2160 0FB65712 		movzbl	18(%rdi), %edx
 3883 2164 885015   		movb	%dl, 21(%rax)
 3884 2167 0FB65711 		movzbl	17(%rdi), %edx
 3885 216b 885016   		movb	%dl, 22(%rax)
 3886 216e 0FB65710 		movzbl	16(%rdi), %edx
 3887 2172 885017   		movb	%dl, 23(%rax)
 3888 2175 0FB6571F 		movzbl	31(%rdi), %edx
 3889 2179 885018   		movb	%dl, 24(%rax)
 3890 217c 0FB6571E 		movzbl	30(%rdi), %edx
 3891 2180 885019   		movb	%dl, 25(%rax)
 3892 2183 0FB6571D 		movzbl	29(%rdi), %edx
 3893 2187 88501A   		movb	%dl, 26(%rax)
 3894 218a 0FB6571C 		movzbl	28(%rdi), %edx
 3895 218e 88501B   		movb	%dl, 27(%rax)
 3896 2191 0FB6571B 		movzbl	27(%rdi), %edx
 3897 2195 88501C   		movb	%dl, 28(%rax)
 3898 2198 0FB6571A 		movzbl	26(%rdi), %edx
 3899 219c 88501D   		movb	%dl, 29(%rax)
 3900 219f 0FB65719 		movzbl	25(%rdi), %edx
 3901 21a3 88501E   		movb	%dl, 30(%rax)
 3902 21a6 0FB65718 		movzbl	24(%rdi), %edx
 3903 21aa 89DF     		movl	%ebx, %edi
 3904 21ac 88501F   		movb	%dl, 31(%rax)
 3905 21af C6402000 		movb	$0, 32(%rax)
 3906 21b3 4883C408 		addq	$8, %rsp
 3907              		.cfi_def_cfa_offset 40
 3908 21b7 5B       		popq	%rbx
 3909              		.cfi_def_cfa_offset 32
 3910 21b8 4889EA   		movq	%rbp, %rdx
 3911 21bb 5D       		popq	%rbp
 3912              		.cfi_def_cfa_offset 24
 3913 21bc 415C     		popq	%r12
 3914              		.cfi_def_cfa_offset 16
 3915 21be 415D     		popq	%r13
 3916              		.cfi_def_cfa_offset 8
 3917 21c0 E9ABF6FF 		jmp	write_4byte_to_board
 3917      FF
 3918              		.cfi_endproc
 3919              	.LFE68:
 3921              		.section	.text.unlikely
 3922              	.LCOLDE35:
 3923              		.text
 3924              	.LHOTE35:
 3925              		.section	.text.unlikely
 3926              	.LCOLDB36:
 3927              		.text
 3928              	.LHOTB36:
 3929 21c5 90662E0F 		.p2align 4,,15
 3929      1F840000 
 3929      000000
 3930              		.globl	wtt
 3932              	wtt:
 3933              	.LFB69:
 3934              		.cfi_startproc
 3935 21d0 BFA08601 		movl	$100000, %edi
 3935      00
 3936 21d5 31C0     		xorl	%eax, %eax
 3937 21d7 E9000000 		jmp	usleep
 3937      00
 3938              		.cfi_endproc
 3939              	.LFE69:
 3941              		.section	.text.unlikely
 3942              	.LCOLDE36:
 3943              		.text
 3944              	.LHOTE36:
 3945              		.section	.rodata.str1.8
 3946 007e 0000     		.align 8
 3947              	.LC37:
 3948 0080 20202020 		.string	"            vendor ID and product ID (e.g 04B4:8613)"
 3948      20202020 
 3948      20202020 
 3948      76656E64 
 3948      6F722049 
 3949              		.section	.rodata.str1.1
 3950              	.LC38:
 3951 0097 3C564944 		.string	"<VID:PID>"
 3951      3A504944 
 3951      3E00
 3952              	.LC39:
 3953 00a1 69767000 		.string	"ivp"
 3954              	.LC40:
 3955 00a5 6900     		.string	"i"
 3956              		.section	.rodata.str1.8
 3957 00b5 000000   		.align 8
 3958              	.LC41:
 3959 00b8 20202020 		.string	"       VID, PID and opt. dev ID (e.g 1D50:602B:0001)"
 3959      20202056 
 3959      49442C20 
 3959      50494420 
 3959      616E6420 
 3960              		.section	.rodata.str1.1
 3961              	.LC42:
 3962 00a7 3C564944 		.string	"<VID:PID[:DID]>"
 3962      3A504944 
 3962      5B3A4449 
 3962      445D3E00 
 3963              	.LC43:
 3964 00b7 767000   		.string	"vp"
 3965              	.LC44:
 3966 00ba 7600     		.string	"v"
 3967              		.section	.rodata.str1.8
 3968 00ed 000000   		.align 8
 3969              	.LC45:
 3970 00f0 20202020 		.string	"       For running the program and giving the input file address"
 3970      20202046 
 3970      6F722072 
 3970      756E6E69 
 3970      6E672074 
 3971              		.section	.rodata.str1.1
 3972              	.LC46:
 3973 00bc 3C46696C 		.string	"<File>"
 3973      653E00
 3974              	.LC47:
 3975 00c3 727000   		.string	"rp"
 3976              		.section	.rodata.str1.8
 3977 0131 00000000 		.align 8
 3977      000000
 3978              	.LC48:
 3979 0138 20202020 		.string	"        firmware to RAM-load (or use std fw)"
 3979      20202020 
 3979      6669726D 
 3979      77617265 
 3979      20746F20 
 3980              		.section	.rodata.str1.1
 3981              	.LC49:
 3982 00c6 3C666972 		.string	"<firmware.hex>"
 3982      6D776172 
 3982      652E6865 
 3982      783E00
 3983              	.LC50:
 3984 00d5 667700   		.string	"fw"
 3985              	.LC51:
 3986 00d8 6600     		.string	"f"
 3987              		.section	.rodata.str1.8
 3988 0165 000000   		.align 8
 3989              	.LC52:
 3990 0168 20726561 		.string	" read/write digital ports (e.g B13+,C1-,B2?)"
 3990      642F7772 
 3990      69746520 
 3990      64696769 
 3990      74616C20 
 3991              		.section	.rodata.str1.1
 3992              	.LC53:
 3993 00da 3C626974 		.string	"<bitCfg[,bitCfg]*>"
 3993      4366675B 
 3993      2C626974 
 3993      4366675D 
 3993      2A3E00
 3994              	.LC54:
 3995 00ed 706F7274 		.string	"ports"
 3995      7300
 3996              	.LC55:
 3997 00f3 6400     		.string	"d"
 3998              	.LC56:
 3999 00f5 20202020 		.string	"         query the JTAG chain"
 3999      20202020 
 3999      20717565 
 3999      72792074 
 3999      6865204A 
 4000              	.LC57:
 4001 0113 3C6A7461 		.string	"<jtagBits>"
 4001      67426974 
 4001      733E00
 4002              	.LC58:
 4003 011e 71756572 		.string	"query"
 4003      7900
 4004              	.LC59:
 4005 0124 7100     		.string	"q"
 4006              	.LC60:
 4007 0126 20202020 		.string	"         program a device"
 4007      20202020 
 4007      2070726F 
 4007      6772616D 
 4007      20612064 
 4008              	.LC61:
 4009 0140 3C636F6E 		.string	"<config>"
 4009      6669673E 
 4009      00
 4010              	.LC62:
 4011 0149 70726F67 		.string	"program"
 4011      72616D00 
 4012              	.LC63:
 4013 0151 7000     		.string	"p"
 4014              		.section	.rodata.str1.8
 4015 0195 000000   		.align 8
 4016              	.LC64:
 4017 0198 20202020 		.string	"        which comm conduit to choose (default 0x01)"
 4017      20202020 
 4017      77686963 
 4017      6820636F 
 4017      6D6D2063 
 4018              		.section	.rodata.str1.1
 4019              	.LC65:
 4020 0153 3C636F6E 		.string	"<conduit>"
 4020      64756974 
 4020      3E00
 4021              	.LC66:
 4022 015d 636F6E64 		.string	"conduit"
 4022      75697400 
 4023              	.LC67:
 4024 0165 6300     		.string	"c"
 4025              		.section	.rodata.str1.8
 4026 01cc 00000000 		.align 8
 4027              	.LC68:
 4028 01d0 20202020 		.string	"    a series of CommFPGA actions"
 4028      61207365 
 4028      72696573 
 4028      206F6620 
 4028      436F6D6D 
 4029              		.section	.rodata.str1.1
 4030              	.LC69:
 4031 0167 3C616374 		.string	"<actionString>"
 4031      696F6E53 
 4031      7472696E 
 4031      673E00
 4032              	.LC70:
 4033 0176 61637469 		.string	"action"
 4033      6F6E00
 4034              	.LC71:
 4035 017d 6100     		.string	"a"
 4036              		.section	.rodata.str1.8
 4037 01f1 00000000 		.align 8
 4037      000000
 4038              	.LC72:
 4039 01f8 20202020 		.string	"                    start up an interactive CommFPGA session"
 4039      20202020 
 4039      20202020 
 4039      20202020 
 4039      20202020 
 4040              		.section	.rodata.str1.1
 4041              	.LC73:
 4042 017f 7368656C 		.string	"shell"
 4042      6C00
 4043              	.LC74:
 4044 0185 7300     		.string	"s"
 4045              		.section	.rodata.str1.8
 4046 0235 000000   		.align 8
 4047              	.LC75:
 4048 0238 20202020 		.string	"                enable benchmarking & checksumming"
 4048      20202020 
 4048      20202020 
 4048      20202020 
 4048      656E6162 
 4049              		.section	.rodata.str1.1
 4050              	.LC76:
 4051 0187 62656E63 		.string	"benchmark"
 4051      686D6172 
 4051      6B00
 4052              	.LC77:
 4053 0191 6200     		.string	"b"
 4054              		.section	.rodata.str1.8
 4055 026b 00000000 		.align 8
 4055      00
 4056              	.LC78:
 4057 0270 20202020 		.string	"                    reset the bulk endpoints"
 4057      20202020 
 4057      20202020 
 4057      20202020 
 4057      20202020 
 4058              		.section	.rodata.str1.1
 4059              	.LC79:
 4060 0193 72657365 		.string	"reset"
 4060      7400
 4061              		.section	.rodata.str1.8
 4062 029d 000000   		.align 8
 4063              	.LC80:
 4064 02a0 20202077 		.string	"   write data from channel ch to file"
 4064      72697465 
 4064      20646174 
 4064      61206672 
 4064      6F6D2063 
 4065              		.section	.rodata.str1.1
 4066              	.LC81:
 4067 0199 3C63683A 		.string	"<ch:file.bin>"
 4067      66696C65 
 4067      2E62696E 
 4067      3E00
 4068              	.LC82:
 4069 01a7 64756D70 		.string	"dumploop"
 4069      6C6F6F70 
 4069      00
 4070              	.LC83:
 4071 01b0 6C00     		.string	"l"
 4072              		.section	.rodata.str1.8
 4073 02c6 0000     		.align 8
 4074              	.LC84:
 4075 02c8 20202020 		.string	"                     print this help and exit"
 4075      20202020 
 4075      20202020 
 4075      20202020 
 4075      20202020 
 4076              		.section	.rodata.str1.1
 4077              	.LC85:
 4078 01b2 68656C70 		.string	"help"
 4078      00
 4079              	.LC86:
 4080 01b7 6800     		.string	"h"
 4081              		.section	.rodata.str1.8
 4082 02f6 0000     		.align 8
 4083              	.LC87:
 4084 02f8 20202077 		.string	"   write firmware to FX2's EEPROM (!!)"
 4084      72697465 
 4084      20666972 
 4084      6D776172 
 4084      6520746F 
 4085              		.section	.rodata.str1.1
 4086              	.LC88:
 4087 01b9 3C737464 		.string	"<std|fw.hex|fw.iic>"
 4087      7C66772E 
 4087      6865787C 
 4087      66772E69 
 4087      69633E00 
 4088              	.LC89:
 4089 01cd 65657072 		.string	"eeprom"
 4089      6F6D00
 4090              		.section	.rodata.str1.8
 4091 031f 00       		.align 8
 4092              	.LC90:
 4093 0320 20202020 		.string	"     backup FX2's EEPROM (e.g 128:fw.iic)\n"
 4093      20626163 
 4093      6B757020 
 4093      46583227 
 4093      73204545 
 4094              		.section	.rodata.str1.1
 4095              	.LC91:
 4096 01d4 3C6B6269 		.string	"<kbitSize:fw.iic>"
 4096      7453697A 
 4096      653A6677 
 4096      2E696963 
 4096      3E00
 4097              	.LC92:
 4098 01e6 6261636B 		.string	"backup"
 4098      757000
 4099              	.LC93:
 4100 01ed 666C636C 		.string	"flcli"
 4100      6900
 4101              	.LC94:
 4102 01f3 25733A20 		.string	"%s: insufficient memory\n"
 4102      696E7375 
 4102      66666963 
 4102      69656E74 
 4102      206D656D 
 4103              		.section	.rodata.str1.8
 4104 034b 00000000 		.align 8
 4104      00
 4105              	.LC95:
 4106 0350 46504741 		.string	"FPGALink Command-Line Interface Copyright (C) 2012-2014 Chris McClelland\n\nUsage: %s"
 4106      4C696E6B 
 4106      20436F6D 
 4106      6D616E64 
 4106      2D4C696E 
 4107              		.section	.rodata.str1.1
 4108              	.LC96:
 4109 020c 0A00     		.string	"\n"
 4110              		.section	.rodata.str1.8
 4111 03a4 00000000 		.align 8
 4112              	.LC97:
 4113 03a8 0A496E74 		.string	"\nInteract with an FPGALink device.\n\n"
 4113      65726163 
 4113      74207769 
 4113      74682061 
 4113      6E204650 
 4114              		.section	.rodata.str1.1
 4115              	.LC98:
 4116 020e 2020252D 		.string	"  %-10s %s\n"
 4116      31307320 
 4116      25730A00 
 4117              		.section	.rodata.str1.8
 4118 03cd 000000   		.align 8
 4119              	.LC99:
 4120 03d0 54727920 		.string	"Try '%s --help' for more information.\n"
 4120      27257320 
 4120      2D2D6865 
 4120      6C702720 
 4120      666F7220 
 4121 03f7 00       		.align 8
 4122              	.LC100:
 4123 03f8 41747465 		.string	"Attempting to open connection to FPGALink device %s...\n"
 4123      6D707469 
 4123      6E672074 
 4123      6F206F70 
 4123      656E2063 
 4124              		.section	.rodata.str1.1
 4125              	.LC101:
 4126 021a 4C6F6164 		.string	"Loading firmware into %s...\n"
 4126      696E6720 
 4126      6669726D 
 4126      77617265 
 4126      20696E74 
 4127              	.LC102:
 4128 0237 41776169 		.string	"Awaiting renumeration"
 4128      74696E67 
 4128      2072656E 
 4128      756D6572 
 4128      6174696F 
 4129              	.LC103:
 4130 024d 2E00     		.string	"."
 4131              		.section	.rodata.str1.8
 4132              		.align 8
 4133              	.LC104:
 4134 0430 46504741 		.string	"FPGALink device did not renumerate properly as %s\n"
 4134      4C696E6B 
 4134      20646576 
 4134      69636520 
 4134      64696420 
 4135 0463 00000000 		.align 8
 4135      00
 4136              	.LC105:
 4137 0468 41747465 		.string	"Attempting to open connection to FPGLink device %s again...\n"
 4137      6D707469 
 4137      6E672074 
 4137      6F206F70 
 4137      656E2063 
 4138 04a5 000000   		.align 8
 4139              	.LC106:
 4140 04a8 436F756C 		.string	"Could not open FPGALink device at %s and no initial VID:PID was supplied\n"
 4140      64206E6F 
 4140      74206F70 
 4140      656E2046 
 4140      5047414C 
 4141 04f2 00000000 		.align 8
 4141      0000
 4142              	.LC107:
 4143 04f8 436F6E6E 		.string	"Connected to FPGALink device %s (firmwareID: 0x%04X, firmwareVersion: 0x%08X)\n"
 4143      65637465 
 4143      6420746F 
 4143      20465047 
 4143      414C696E 
 4144 0547 00       		.align 8
 4145              	.LC108:
 4146 0548 57726974 		.string	"Writing the standard FPGALink firmware to the FX2's EEPROM...\n"
 4146      696E6720 
 4146      74686520 
 4146      7374616E 
 4146      64617264 
 4147 0587 00       		.align 8
 4148              	.LC109:
 4149 0588 57726974 		.string	"Writing custom FPGALink firmware from %s to the FX2's EEPROM...\n"
 4149      696E6720 
 4149      63757374 
 4149      6F6D2046 
 4149      5047414C 
 4150 05c9 00000000 		.align 8
 4150      000000
 4151              	.LC110:
 4152 05d0 25733A20 		.string	"%s: invalid argument to option --backup=<kbitSize:fw.iic>\n"
 4152      696E7661 
 4152      6C696420 
 4152      61726775 
 4152      6D656E74 
 4153 060b 00000000 		.align 8
 4153      00
 4154              	.LC111:
 4155 0610 53617669 		.string	"Saving a backup of %d kbit from the FX2's EEPROM to %s...\n"
 4155      6E672061 
 4155      20626163 
 4155      6B757020 
 4155      6F662025 
 4156              		.section	.rodata.str1.1
 4157              	.LC112:
 4158 024f 436F6E66 		.string	"Configuring ports...\n"
 4158      69677572 
 4158      696E6720 
 4158      706F7274 
 4158      732E2E2E 
 4159              	.LC113:
 4160 0265 25303858 		.string	"%08X"
 4160      00
 4161              		.section	.rodata.str1.8
 4162 064b 00000000 		.align 8
 4162      00
 4163              	.LC114:
 4164 0650 52656164 		.string	"Readback:   28   24   20   16    12    8    4    0\n          %s"
 4164      6261636B 
 4164      3A202020 
 4164      32382020 
 4164      20323420 
 4165              		.section	.rodata.str1.1
 4166              	.LC115:
 4167 026a 20257300 		.string	" %s"
 4168              	.LC116:
 4169 026e 20202573 		.string	"  %s"
 4169      00
 4170              	.LC117:
 4171 0273 2025730A 		.string	" %s\n"
 4171      00
 4172              		.section	.rodata.str1.8
 4173              		.align 8
 4174              	.LC118:
 4175 0690 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain, yielding:\n"
 4175      46504741 
 4175      4C696E6B 
 4175      20646576 
 4175      69636520 
 4176              		.section	.rodata.str1.1
 4177              	.LC119:
 4178 0278 20203078 		.string	"  0x%08X\n"
 4178      25303858 
 4178      0A00
 4179              		.section	.rodata.str1.8
 4180 06cd 000000   		.align 8
 4181              	.LC120:
 4182 06d0 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain but did not find any attached devices\n"
 4182      46504741 
 4182      4C696E6B 
 4182      20646576 
 4182      69636520 
 4183              		.align 8
 4184              	.LC121:
 4185 0728 4A544147 		.string	"JTAG chain scan requested but FPGALink device at %s does not support NeroProg\n"
 4185      20636861 
 4185      696E2073 
 4185      63616E20 
 4185      72657175 
 4186              		.section	.rodata.str1.1
 4187              	.LC122:
 4188 0282 50726F67 		.string	"Programming device...\n"
 4188      72616D6D 
 4188      696E6720 
 4188      64657669 
 4188      63652E2E 
 4189              		.section	.rodata.str1.8
 4190 0777 00       		.align 8
 4191              	.LC123:
 4192 0778 50726F67 		.string	"Program operation requested but device at %s does not support NeroProg\n"
 4192      72616D20 
 4192      6F706572 
 4192      6174696F 
 4192      6E207265 
 4193              		.align 8
 4194              	.LC124:
 4195 07c0 45786563 		.string	"Executing CommFPGA actions on FPGALink device %s...\n"
 4195      7574696E 
 4195      6720436F 
 4195      6D6D4650 
 4195      47412061 
 4196 07f5 000000   		.align 8
 4197              	.LC125:
 4198 07f8 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --program?\n"
 4198      46504741 
 4198      4C696E6B 
 4198      20646576 
 4198      69636520 
 4199 0844 00000000 		.align 8
 4200              	.LC126:
 4201 0848 41637469 		.string	"Action requested but device at %s does not support CommFPGA\n"
 4201      6F6E2072 
 4201      65717565 
 4201      73746564 
 4201      20627574 
 4202 0885 000000   		.align 8
 4203              	.LC127:
 4204 0888 25733A20 		.string	"%s: invalid argument to option -l|--dumploop=<ch:file.bin>\n"
 4204      696E7661 
 4204      6C696420 
 4204      61726775 
 4204      6D656E74 
 4205 08c4 00000000 		.align 8
 4206              	.LC128:
 4207 08c8 436F7079 		.string	"Copying from channel %lu to %s"
 4207      696E6720 
 4207      66726F6D 
 4207      20636861 
 4207      6E6E656C 
 4208              		.section	.rodata.str1.1
 4209              	.LC129:
 4210 0299 0A436175 		.string	"\nCaught SIGINT, quitting...\n"
 4210      67687420 
 4210      53494749 
 4210      4E542C20 
 4210      71756974 
 4211              	.LC130:
 4212 02b6 25642C20 		.string	"%d, %d, %d, %d, %d\n"
 4212      25642C20 
 4212      25642C20 
 4212      25642C20 
 4212      25640A00 
 4213              		.section	.rodata.str1.8
 4214 08e7 00       		.align 8
 4215              	.LC131:
 4216 08e8 61747465 		.string	"attempting to read coordinates from  channel %d\n"
 4216      6D707469 
 4216      6E672074 
 4216      6F207265 
 4216      61642063 
 4217 0919 00000000 		.align 8
 4217      000000
 4218              	.LC132:
 4219 0920 72656420 		.string	"red coordinates %s from channel %d\n"
 4219      636F6F72 
 4219      64696E61 
 4219      74657320 
 4219      25732066 
 4220              		.section	.rodata.str1.1
 4221              	.LC133:
 4222 02ca 6661696C 		.string	"failed to coordinates\n"
 4222      65642074 
 4222      6F20636F 
 4222      6F726469 
 4222      6E617465 
 4223              		.section	.rodata.str1.8
 4224 0944 00000000 		.align 8
 4225              	.LC134:
 4226 0948 61747465 		.string	"attempting to write coordinates at channel %d\n"
 4226      6D707469 
 4226      6E672074 
 4226      6F207772 
 4226      69746520 
 4227 0977 00       		.align 8
 4228              	.LC135:
 4229 0978 77726974 		.string	"write failed , continuing for next channel\n"
 4229      65206661 
 4229      696C6564 
 4229      202C2063 
 4229      6F6E7469 
 4230              		.section	.rodata.str1.1
 4231              	.LC136:
 4232 02e1 61747465 		.string	"attempting to receive ack\n"
 4232      6D707469 
 4232      6E672074 
 4232      6F207265 
 4232      63656976 
 4233              		.section	.rodata.str1.8
 4234 09a4 00000000 		.align 8
 4235              	.LC137:
 4236 09a8 66697273 		.string	"first ack was incorrect , attempting after 5 seconds\n"
 4236      74206163 
 4236      6B207761 
 4236      7320696E 
 4236      636F7272 
 4237 09de 0000     		.align 8
 4238              	.LC138:
 4239 09e0 61747465 		.string	"attempting to receive ack for second time\n"
 4239      6D707469 
 4239      6E672074 
 4239      6F207265 
 4239      63656976 
 4240              		.section	.rodata.str1.1
 4241              	.LC139:
 4242 02fc 7365636F 		.string	"second ack was also incorect\n"
 4242      6E642061 
 4242      636B2077 
 4242      61732061 
 4242      6C736F20 
 4243              		.section	.rodata.str1.8
 4244 0a0b 00000000 		.align 8
 4244      00
 4245              	.LC140:
 4246 0a10 72656365 		.string	"received coordinates correctly and now breaking out of this for loop \n"
 4246      69766564 
 4246      20636F6F 
 4246      7264696E 
 4246      61746573 
 4247 0a57 00       		.align 8
 4248              	.LC141:
 4249 0a58 7820636F 		.string	"x coordinate is %d and y coordinate is %d\n"
 4249      6F726469 
 4249      6E617465 
 4249      20697320 
 4249      25642061 
 4250              		.section	.rodata.str1.1
 4251              	.LC142:
 4252 031a 74726163 		.string	"track data is %s\n"
 4252      6B206461 
 4252      74612069 
 4252      73202573 
 4252      0A00
 4253              		.section	.rodata.str1.8
 4254 0a83 00000000 		.align 8
 4254      00
 4255              	.LC143:
 4256 0a88 0A456E74 		.string	"\nEntering CommFPGA command-line mode:\n"
 4256      6572696E 
 4256      6720436F 
 4256      6D6D4650 
 4256      47412063 
 4257              		.section	.rodata.str1.1
 4258              	.LC144:
 4259 032c 3E2000   		.string	"> "
 4260              		.section	.rodata.str1.8
 4261 0aaf 00       		.align 8
 4262              	.LC145:
 4263 0ab0 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --xsvf?\n"
 4263      46504741 
 4263      4C696E6B 
 4263      20646576 
 4263      69636520 
 4264 0af9 00000000 		.align 8
 4264      000000
 4265              	.LC146:
 4266 0b00 5368656C 		.string	"Shell requested but device at %s does not support CommFPGA\n"
 4266      6C207265 
 4266      71756573 
 4266      74656420 
 4266      62757420 
 4267              		.section	.rodata.str1.1
 4268              	.LC147:
 4269 032f 25730A00 		.string	"%s\n"
 4270              		.section	.text.unlikely
 4271              	.LCOLDB148:
 4272              		.section	.text.startup,"ax",@progbits
 4273              	.LHOTB148:
 4274              		.p2align 4,,15
 4275              		.globl	main
 4277              	main:
 4278              	.LFB70:
 4279              		.cfi_startproc
 4280 0000 4157     		pushq	%r15
 4281              		.cfi_def_cfa_offset 16
 4282              		.cfi_offset 15, -16
 4283 0002 4156     		pushq	%r14
 4284              		.cfi_def_cfa_offset 24
 4285              		.cfi_offset 14, -24
 4286 0004 B9000000 		movl	$.LC37, %ecx
 4286      00
 4287 0009 4155     		pushq	%r13
 4288              		.cfi_def_cfa_offset 32
 4289              		.cfi_offset 13, -32
 4290 000b 4154     		pushq	%r12
 4291              		.cfi_def_cfa_offset 40
 4292              		.cfi_offset 12, -40
 4293 000d BA000000 		movl	$.LC38, %edx
 4293      00
 4294 0012 55       		pushq	%rbp
 4295              		.cfi_def_cfa_offset 48
 4296              		.cfi_offset 6, -48
 4297 0013 53       		pushq	%rbx
 4298              		.cfi_def_cfa_offset 56
 4299              		.cfi_offset 3, -56
 4300 0014 4881ECB8 		subq	$13752, %rsp
 4300      350000
 4301              		.cfi_def_cfa_offset 13808
 4302 001b 897C245C 		movl	%edi, 92(%rsp)
 4303 001f 48897424 		movq	%rsi, 96(%rsp)
 4303      60
 4304 0024 BF000000 		movl	$.LC40, %edi
 4304      00
 4305 0029 BE000000 		movl	$.LC39, %esi
 4305      00
 4306 002e 64488B04 		movq	%fs:40, %rax
 4306      25280000 
 4306      00
 4307 0037 48898424 		movq	%rax, 13736(%rsp)
 4307      A8350000 
 4308 003f 31C0     		xorl	%eax, %eax
 4309 0041 E8000000 		call	arg_str0
 4309      00
 4310 0046 B9000000 		movl	$.LC41, %ecx
 4310      00
 4311 004b BA000000 		movl	$.LC42, %edx
 4311      00
 4312 0050 BE000000 		movl	$.LC43, %esi
 4312      00
 4313 0055 BF000000 		movl	$.LC44, %edi
 4313      00
 4314 005a 4989C4   		movq	%rax, %r12
 4315 005d E8000000 		call	arg_str1
 4315      00
 4316 0062 B9000000 		movl	$.LC45, %ecx
 4316      00
 4317 0067 BA000000 		movl	$.LC46, %edx
 4317      00
 4318 006c BE000000 		movl	$.LC47, %esi
 4318      00
 4319 0071 BF000000 		movl	$.LC15, %edi
 4319      00
 4320 0076 4989C5   		movq	%rax, %r13
 4321 0079 E8000000 		call	arg_str0
 4321      00
 4322 007e B9000000 		movl	$.LC48, %ecx
 4322      00
 4323 0083 BA000000 		movl	$.LC49, %edx
 4323      00
 4324 0088 BE000000 		movl	$.LC50, %esi
 4324      00
 4325 008d BF000000 		movl	$.LC51, %edi
 4325      00
 4326 0092 48894424 		movq	%rax, 64(%rsp)
 4326      40
 4327 0097 E8000000 		call	arg_str0
 4327      00
 4328 009c B9000000 		movl	$.LC52, %ecx
 4328      00
 4329 00a1 BA000000 		movl	$.LC53, %edx
 4329      00
 4330 00a6 BE000000 		movl	$.LC54, %esi
 4330      00
 4331 00ab BF000000 		movl	$.LC55, %edi
 4331      00
 4332 00b0 4989C6   		movq	%rax, %r14
 4333 00b3 E8000000 		call	arg_str0
 4333      00
 4334 00b8 B9000000 		movl	$.LC56, %ecx
 4334      00
 4335 00bd BA000000 		movl	$.LC57, %edx
 4335      00
 4336 00c2 BE000000 		movl	$.LC58, %esi
 4336      00
 4337 00c7 BF000000 		movl	$.LC59, %edi
 4337      00
 4338 00cc 48894424 		movq	%rax, 8(%rsp)
 4338      08
 4339 00d1 E8000000 		call	arg_str0
 4339      00
 4340 00d6 B9000000 		movl	$.LC60, %ecx
 4340      00
 4341 00db BA000000 		movl	$.LC61, %edx
 4341      00
 4342 00e0 BE000000 		movl	$.LC62, %esi
 4342      00
 4343 00e5 BF000000 		movl	$.LC63, %edi
 4343      00
 4344 00ea 48894424 		movq	%rax, 16(%rsp)
 4344      10
 4345 00ef E8000000 		call	arg_str0
 4345      00
 4346 00f4 B9000000 		movl	$.LC64, %ecx
 4346      00
 4347 00f9 BA000000 		movl	$.LC65, %edx
 4347      00
 4348 00fe BE000000 		movl	$.LC66, %esi
 4348      00
 4349 0103 BF000000 		movl	$.LC67, %edi
 4349      00
 4350 0108 48894424 		movq	%rax, 24(%rsp)
 4350      18
 4351 010d E8000000 		call	arg_uint0
 4351      00
 4352 0112 B9000000 		movl	$.LC68, %ecx
 4352      00
 4353 0117 BA000000 		movl	$.LC69, %edx
 4353      00
 4354 011c BE000000 		movl	$.LC70, %esi
 4354      00
 4355 0121 BF000000 		movl	$.LC71, %edi
 4355      00
 4356 0126 48894424 		movq	%rax, 32(%rsp)
 4356      20
 4357 012b E8000000 		call	arg_str0
 4357      00
 4358 0130 BA000000 		movl	$.LC72, %edx
 4358      00
 4359 0135 BE000000 		movl	$.LC73, %esi
 4359      00
 4360 013a BF000000 		movl	$.LC74, %edi
 4360      00
 4361 013f 48894424 		movq	%rax, 48(%rsp)
 4361      30
 4362 0144 E8000000 		call	arg_lit0
 4362      00
 4363 0149 BA000000 		movl	$.LC75, %edx
 4363      00
 4364 014e BE000000 		movl	$.LC76, %esi
 4364      00
 4365 0153 BF000000 		movl	$.LC77, %edi
 4365      00
 4366 0158 48894424 		movq	%rax, 72(%rsp)
 4366      48
 4367 015d E8000000 		call	arg_lit0
 4367      00
 4368 0162 BA000000 		movl	$.LC78, %edx
 4368      00
 4369 0167 BE000000 		movl	$.LC79, %esi
 4369      00
 4370 016c BF000000 		movl	$.LC15, %edi
 4370      00
 4371 0171 48894424 		movq	%rax, 80(%rsp)
 4371      50
 4372 0176 E8000000 		call	arg_lit0
 4372      00
 4373 017b B9000000 		movl	$.LC80, %ecx
 4373      00
 4374 0180 BA000000 		movl	$.LC81, %edx
 4374      00
 4375 0185 BE000000 		movl	$.LC82, %esi
 4375      00
 4376 018a BF000000 		movl	$.LC83, %edi
 4376      00
 4377 018f 48894424 		movq	%rax, 40(%rsp)
 4377      28
 4378 0194 E8000000 		call	arg_str0
 4378      00
 4379 0199 BA000000 		movl	$.LC84, %edx
 4379      00
 4380 019e BE000000 		movl	$.LC85, %esi
 4380      00
 4381 01a3 BF000000 		movl	$.LC86, %edi
 4381      00
 4382 01a8 48894424 		movq	%rax, 56(%rsp)
 4382      38
 4383 01ad E8000000 		call	arg_lit0
 4383      00
 4384 01b2 31FF     		xorl	%edi, %edi
 4385 01b4 B9000000 		movl	$.LC87, %ecx
 4385      00
 4386 01b9 BA000000 		movl	$.LC88, %edx
 4386      00
 4387 01be BE000000 		movl	$.LC89, %esi
 4387      00
 4388 01c3 4889C3   		movq	%rax, %rbx
 4389 01c6 E8000000 		call	arg_str0
 4389      00
 4390 01cb B9000000 		movl	$.LC90, %ecx
 4390      00
 4391 01d0 BA000000 		movl	$.LC91, %edx
 4391      00
 4392 01d5 BE000000 		movl	$.LC92, %esi
 4392      00
 4393 01da 31FF     		xorl	%edi, %edi
 4394 01dc 4989C7   		movq	%rax, %r15
 4395 01df E8000000 		call	arg_str0
 4395      00
 4396 01e4 BF140000 		movl	$20, %edi
 4396      00
 4397 01e9 48890424 		movq	%rax, (%rsp)
 4398 01ed E8000000 		call	arg_end
 4398      00
 4399 01f2 488B4C24 		movq	64(%rsp), %rcx
 4399      40
 4400 01f7 488B5424 		movq	16(%rsp), %rdx
 4400      10
 4401 01fc 4889C5   		movq	%rax, %rbp
 4402 01ff 488B7424 		movq	32(%rsp), %rsi
 4402      20
 4403 0204 488B0424 		movq	(%rsp), %rax
 4404 0208 488DBC24 		leaq	224(%rsp), %rdi
 4404      E0000000 
 4405 0210 4C89A424 		movq	%r12, 224(%rsp)
 4405      E0000000 
 4406 0218 4C89AC24 		movq	%r13, 232(%rsp)
 4406      E8000000 
 4407 0220 48898C24 		movq	%rcx, 240(%rsp)
 4407      F0000000 
 4408 0228 488B4C24 		movq	8(%rsp), %rcx
 4408      08
 4409 022d 48899424 		movq	%rdx, 264(%rsp)
 4409      08010000 
 4410 0235 488B5424 		movq	48(%rsp), %rdx
 4410      30
 4411 023a 4889B424 		movq	%rsi, 280(%rsp)
 4411      18010000 
 4412 0242 488B7424 		movq	80(%rsp), %rsi
 4412      50
 4413 0247 48898C24 		movq	%rcx, 256(%rsp)
 4413      00010000 
 4414 024f 488B4C24 		movq	24(%rsp), %rcx
 4414      18
 4415 0254 48899424 		movq	%rdx, 288(%rsp)
 4415      20010000 
 4416 025c 488B5424 		movq	40(%rsp), %rdx
 4416      28
 4417 0261 4C89B424 		movq	%r14, 248(%rsp)
 4417      F8000000 
 4418 0269 4889B424 		movq	%rsi, 304(%rsp)
 4418      30010000 
 4419 0271 48898C24 		movq	%rcx, 272(%rsp)
 4419      10010000 
 4420 0279 488B4C24 		movq	72(%rsp), %rcx
 4420      48
 4421 027e 48899424 		movq	%rdx, 312(%rsp)
 4421      38010000 
 4422 0286 48899C24 		movq	%rbx, 328(%rsp)
 4422      48010000 
 4423 028e 4C89BC24 		movq	%r15, 336(%rsp)
 4423      50010000 
 4424 0296 48898424 		movq	%rax, 344(%rsp)
 4424      58010000 
 4425 029e 48898C24 		movq	%rcx, 296(%rsp)
 4425      28010000 
 4426 02a6 488B4C24 		movq	56(%rsp), %rcx
 4426      38
 4427 02ab 4889AC24 		movq	%rbp, 352(%rsp)
 4427      60010000 
 4428 02b3 48C78424 		movq	$0, 128(%rsp)
 4428      80000000 
 4428      00000000 
 4429 02bf 48C78424 		movq	$0, 136(%rsp)
 4429      88000000 
 4429      00000000 
 4430 02cb 48898C24 		movq	%rcx, 320(%rsp)
 4430      40010000 
 4431 02d3 E8000000 		call	arg_nullcheck
 4431      00
 4432 02d8 85C0     		testl	%eax, %eax
 4433 02da 0F849600 		je	.L813
 4433      0000
 4434 02e0 488B3D00 		movq	stderr(%rip), %rdi
 4434      000000
 4435 02e7 B9000000 		movl	$.LC93, %ecx
 4435      00
 4436 02ec BA000000 		movl	$.LC94, %edx
 4436      00
 4437 02f1 BE010000 		movl	$1, %esi
 4437      00
 4438 02f6 31C0     		xorl	%eax, %eax
 4439 02f8 31ED     		xorl	%ebp, %ebp
 4440 02fa BB010000 		movl	$1, %ebx
 4440      00
 4441 02ff E8000000 		call	__fprintf_chk
 4441      00
 4442              	.L814:
 4443 0304 4889EF   		movq	%rbp, %rdi
 4444 0307 E8000000 		call	free
 4444      00
 4445 030c 488BBC24 		movq	128(%rsp), %rdi
 4445      80000000 
 4446 0314 E8000000 		call	flClose
 4446      00
 4447 0319 488B8C24 		movq	136(%rsp), %rcx
 4447      88000000 
 4448 0321 4885C9   		testq	%rcx, %rcx
 4449 0324 7425     		je	.L888
 4450 0326 488B3D00 		movq	stderr(%rip), %rdi
 4450      000000
 4451 032d BA000000 		movl	$.LC147, %edx
 4451      00
 4452 0332 BE010000 		movl	$1, %esi
 4452      00
 4453 0337 31C0     		xorl	%eax, %eax
 4454 0339 E8000000 		call	__fprintf_chk
 4454      00
 4455 033e 488BBC24 		movq	136(%rsp), %rdi
 4455      88000000 
 4456 0346 E8000000 		call	flFreeError
 4456      00
 4457              	.L888:
 4458 034b 89D8     		movl	%ebx, %eax
 4459 034d 488B9C24 		movq	13736(%rsp), %rbx
 4459      A8350000 
 4460 0355 6448331C 		xorq	%fs:40, %rbx
 4460      25280000 
 4460      00
 4461 035e 0F857B0A 		jne	.L938
 4461      0000
 4462 0364 4881C4B8 		addq	$13752, %rsp
 4462      350000
 4463              		.cfi_remember_state
 4464              		.cfi_def_cfa_offset 56
 4465 036b 5B       		popq	%rbx
 4466              		.cfi_def_cfa_offset 48
 4467 036c 5D       		popq	%rbp
 4468              		.cfi_def_cfa_offset 40
 4469 036d 415C     		popq	%r12
 4470              		.cfi_def_cfa_offset 32
 4471 036f 415D     		popq	%r13
 4472              		.cfi_def_cfa_offset 24
 4473 0371 415E     		popq	%r14
 4474              		.cfi_def_cfa_offset 16
 4475 0373 415F     		popq	%r15
 4476              		.cfi_def_cfa_offset 8
 4477 0375 C3       		ret
 4478              	.L813:
 4479              		.cfi_restore_state
 4480 0376 488B7424 		movq	96(%rsp), %rsi
 4480      60
 4481 037b 8B7C245C 		movl	92(%rsp), %edi
 4482 037f 488D9424 		leaq	224(%rsp), %rdx
 4482      E0000000 
 4483 0387 E8000000 		call	arg_parse
 4483      00
 4484 038c 837B6000 		cmpl	$0, 96(%rbx)
 4485 0390 7E62     		jle	.L815
 4486 0392 BA000000 		movl	$.LC93, %edx
 4486      00
 4487 0397 BE000000 		movl	$.LC95, %esi
 4487      00
 4488 039c BF010000 		movl	$1, %edi
 4488      00
 4489 03a1 31C0     		xorl	%eax, %eax
 4490 03a3 31ED     		xorl	%ebp, %ebp
 4491 03a5 31DB     		xorl	%ebx, %ebx
 4492 03a7 E8000000 		call	__printf_chk
 4492      00
 4493 03ac 488B3D00 		movq	stdout(%rip), %rdi
 4493      000000
 4494 03b3 488DB424 		leaq	224(%rsp), %rsi
 4494      E0000000 
 4495 03bb BA000000 		movl	$.LC96, %edx
 4495      00
 4496 03c0 E8000000 		call	arg_print_syntax
 4496      00
 4497 03c5 BE000000 		movl	$.LC97, %esi
 4497      00
 4498 03ca BF010000 		movl	$1, %edi
 4498      00
 4499 03cf 31C0     		xorl	%eax, %eax
 4500 03d1 E8000000 		call	__printf_chk
 4500      00
 4501 03d6 488B3D00 		movq	stdout(%rip), %rdi
 4501      000000
 4502 03dd 488DB424 		leaq	224(%rsp), %rsi
 4502      E0000000 
 4503 03e5 BA000000 		movl	$.LC98, %edx
 4503      00
 4504 03ea E8000000 		call	arg_print_glossary
 4504      00
 4505 03ef E910FFFF 		jmp	.L814
 4505      FF
 4506              	.L815:
 4507 03f4 85C0     		testl	%eax, %eax
 4508 03f6 7E3D     		jle	.L816
 4509 03f8 488B3D00 		movq	stdout(%rip), %rdi
 4509      000000
 4510 03ff BA000000 		movl	$.LC93, %edx
 4510      00
 4511 0404 4889EE   		movq	%rbp, %rsi
 4512 0407 E8000000 		call	arg_print_errors
 4512      00
 4513 040c B9000000 		movl	$.LC93, %ecx
 4513      00
 4514 0411 BA000000 		movl	$.LC99, %edx
 4514      00
 4515              	.L931:
 4516 0416 488B3D00 		movq	stderr(%rip), %rdi
 4516      000000
 4517 041d BE010000 		movl	$1, %esi
 4517      00
 4518 0422 31C0     		xorl	%eax, %eax
 4519 0424 31ED     		xorl	%ebp, %ebp
 4520 0426 BB0C0000 		movl	$12, %ebx
 4520      00
 4521 042b E8000000 		call	__fprintf_chk
 4521      00
 4522 0430 E9CFFEFF 		jmp	.L814
 4522      FF
 4523              	.L816:
 4524 0435 488DB424 		leaq	136(%rsp), %rsi
 4524      88000000 
 4525 043d 31FF     		xorl	%edi, %edi
 4526 043f E8000000 		call	flInitialise
 4526      00
 4527 0444 85C0     		testl	%eax, %eax
 4528 0446 740C     		je	.L939
 4529              	.L882:
 4530 0448 31ED     		xorl	%ebp, %ebp
 4531 044a BB010000 		movl	$1, %ebx
 4531      00
 4532 044f E9B0FEFF 		jmp	.L814
 4532      FF
 4533              	.L939:
 4534 0454 498B4568 		movq	104(%r13), %rax
 4535 0458 BE000000 		movl	$.LC100, %esi
 4535      00
 4536 045d BF010000 		movl	$1, %edi
 4536      00
 4537 0462 488B28   		movq	(%rax), %rbp
 4538 0465 31C0     		xorl	%eax, %eax
 4539 0467 4889EA   		movq	%rbp, %rdx
 4540 046a E8000000 		call	__printf_chk
 4540      00
 4541 046f 488DB424 		leaq	128(%rsp), %rsi
 4541      80000000 
 4542 0477 31D2     		xorl	%edx, %edx
 4543 0479 4889EF   		movq	%rbp, %rdi
 4544 047c E8000000 		call	flOpen
 4544      00
 4545 0481 85C0     		testl	%eax, %eax
 4546 0483 0F841701 		je	.L818
 4546      0000
 4547 0489 41837C24 		cmpl	$0, 96(%r12)
 4547      6000
 4548 048f 0F84CA00 		je	.L819
 4548      0000
 4549 0495 498B4424 		movq	104(%r12), %rax
 4549      68
 4550 049a BE000000 		movl	$.LC101, %esi
 4550      00
 4551 049f BF010000 		movl	$1, %edi
 4551      00
 4552 04a4 488B18   		movq	(%rax), %rbx
 4553 04a7 31C0     		xorl	%eax, %eax
 4554 04a9 4889DA   		movq	%rbx, %rdx
 4555 04ac E8000000 		call	__printf_chk
 4555      00
 4556 04b1 41837E60 		cmpl	$0, 96(%r14)
 4556      00
 4557 04b6 0F84AA02 		je	.L820
 4557      0000
 4558 04bc 498B4668 		movq	104(%r14), %rax
 4559 04c0 488D9424 		leaq	136(%rsp), %rdx
 4559      88000000 
 4560 04c8 4889DF   		movq	%rbx, %rdi
 4561 04cb 488B30   		movq	(%rax), %rsi
 4562 04ce E8000000 		call	flLoadCustomFirmware
 4562      00
 4563              	.L821:
 4564 04d3 85C0     		testl	%eax, %eax
 4565 04d5 0F856DFF 		jne	.L882
 4565      FFFF
 4566 04db BE000000 		movl	$.LC102, %esi
 4566      00
 4567 04e0 BF010000 		movl	$1, %edi
 4567      00
 4568 04e5 BB3C0000 		movl	$60, %ebx
 4568      00
 4569 04ea E8000000 		call	__printf_chk
 4569      00
 4570 04ef BFE80300 		movl	$1000, %edi
 4570      00
 4571 04f4 4C8DA424 		leaq	152(%rsp), %r12
 4571      98000000 
 4572 04fc E8000000 		call	flSleep
 4572      00
 4573 0501 EB23     		jmp	.L823
 4574              	.L940:
 4575 0503 BFFA0000 		movl	$250, %edi
 4575      00
 4576 0508 83EB01   		subl	$1, %ebx
 4577 050b E8000000 		call	flSleep
 4577      00
 4578 0510 80BC2498 		cmpb	$0, 152(%rsp)
 4578      00000000 
 4579 0518 0F859306 		jne	.L895
 4579      0000
 4580 051e 85DB     		testl	%ebx, %ebx
 4581 0520 0F848B06 		je	.L895
 4581      0000
 4582              	.L823:
 4583 0526 BE000000 		movl	$.LC103, %esi
 4583      00
 4584 052b BF010000 		movl	$1, %edi
 4584      00
 4585 0530 31C0     		xorl	%eax, %eax
 4586 0532 E8000000 		call	__printf_chk
 4586      00
 4587 0537 488B3D00 		movq	stdout(%rip), %rdi
 4587      000000
 4588 053e E8000000 		call	fflush
 4588      00
 4589 0543 488D9424 		leaq	136(%rsp), %rdx
 4589      88000000 
 4590 054b 4C89E6   		movq	%r12, %rsi
 4591 054e 4889EF   		movq	%rbp, %rdi
 4592 0551 E8000000 		call	flIsDeviceAvailable
 4592      00
 4593 0556 85C0     		testl	%eax, %eax
 4594 0558 74A9     		je	.L940
 4595 055a E9E9FEFF 		jmp	.L882
 4595      FF
 4596              	.L819:
 4597 055f 4889E9   		movq	%rbp, %rcx
 4598 0562 BA000000 		movl	$.LC106, %edx
 4598      00
 4599 0567 E9AAFEFF 		jmp	.L931
 4599      FF
 4600              	.L825:
 4601 056c 4889EA   		movq	%rbp, %rdx
 4602 056f BE000000 		movl	$.LC105, %esi
 4602      00
 4603 0574 BF010000 		movl	$1, %edi
 4603      00
 4604 0579 31C0     		xorl	%eax, %eax
 4605 057b E8000000 		call	__printf_chk
 4605      00
 4606 0580 488D9424 		leaq	136(%rsp), %rdx
 4606      88000000 
 4607 0588 488DB424 		leaq	128(%rsp), %rsi
 4607      80000000 
 4608 0590 4889EF   		movq	%rbp, %rdi
 4609 0593 E8000000 		call	flOpen
 4609      00
 4610 0598 85C0     		testl	%eax, %eax
 4611 059a 0F85A8FE 		jne	.L882
 4611      FFFF
 4612              	.L818:
 4613 05a0 488BBC24 		movq	128(%rsp), %rdi
 4613      80000000 
 4614 05a8 E8000000 		call	flGetFirmwareVersion
 4614      00
 4615 05ad 488BBC24 		movq	128(%rsp), %rdi
 4615      80000000 
 4616 05b5 89C3     		movl	%eax, %ebx
 4617 05b7 E8000000 		call	flGetFirmwareID
 4617      00
 4618 05bc 4189D8   		movl	%ebx, %r8d
 4619 05bf 0FB7C8   		movzwl	%ax, %ecx
 4620 05c2 4889EA   		movq	%rbp, %rdx
 4621 05c5 31C0     		xorl	%eax, %eax
 4622 05c7 BE000000 		movl	$.LC107, %esi
 4622      00
 4623 05cc BF010000 		movl	$1, %edi
 4623      00
 4624 05d1 E8000000 		call	__printf_chk
 4624      00
 4625 05d6 41837F60 		cmpl	$0, 96(%r15)
 4625      00
 4626 05db 745F     		je	.L833
 4627 05dd 498B4768 		movq	104(%r15), %rax
 4628 05e1 488B10   		movq	(%rax), %rdx
 4629 05e4 803A73   		cmpb	$115, (%rdx)
 4630 05e7 0F859101 		jne	.L830
 4630      0000
 4631 05ed 807A0174 		cmpb	$116, 1(%rdx)
 4632 05f1 0F858701 		jne	.L830
 4632      0000
 4633 05f7 807A0264 		cmpb	$100, 2(%rdx)
 4634 05fb 0F857D01 		jne	.L830
 4634      0000
 4635 0601 807A0300 		cmpb	$0, 3(%rdx)
 4636 0605 0F857301 		jne	.L830
 4636      0000
 4637 060b BE000000 		movl	$.LC108, %esi
 4637      00
 4638 0610 BF010000 		movl	$1, %edi
 4638      00
 4639 0615 31C0     		xorl	%eax, %eax
 4640 0617 E8000000 		call	__printf_chk
 4640      00
 4641 061c 488BBC24 		movq	128(%rsp), %rdi
 4641      80000000 
 4642 0624 488D9424 		leaq	136(%rsp), %rdx
 4642      88000000 
 4643 062c 4889EE   		movq	%rbp, %rsi
 4644 062f E8000000 		call	flFlashStandardFirmware
 4644      00
 4645              	.L831:
 4646 0634 85C0     		testl	%eax, %eax
 4647 0636 0F850CFE 		jne	.L882
 4647      FFFF
 4648              	.L833:
 4649 063c 488B0424 		movq	(%rsp), %rax
 4650 0640 83786000 		cmpl	$0, 96(%rax)
 4651 0644 0F856601 		jne	.L941
 4651      0000
 4652              	.L829:
 4653 064a 488B4424 		movq	40(%rsp), %rax
 4653      28
 4654 064f 83786000 		cmpl	$0, 96(%rax)
 4655 0653 0F859705 		jne	.L836
 4655      0000
 4656              	.L839:
 4657 0659 488B4424 		movq	32(%rsp), %rax
 4657      20
 4658 065e 41BC0100 		movl	$1, %r12d
 4658      0000
 4659 0664 83786000 		cmpl	$0, 96(%rax)
 4660 0668 740D     		je	.L838
 4661 066a 488B4424 		movq	32(%rsp), %rax
 4661      20
 4662 066f 488B4068 		movq	104(%rax), %rax
 4663 0673 440FB620 		movzbl	(%rax), %r12d
 4664              	.L838:
 4665 0677 488BBC24 		movq	128(%rsp), %rdi
 4665      80000000 
 4666 067f 450FB6F4 		movzbl	%r12b, %r14d
 4667 0683 E8000000 		call	flIsNeroCapable
 4667      00
 4668 0688 488BBC24 		movq	128(%rsp), %rdi
 4668      80000000 
 4669 0690 4489F6   		movl	%r14d, %esi
 4670 0693 89C3     		movl	%eax, %ebx
 4671 0695 E8000000 		call	flIsCommCapable
 4671      00
 4672 069a 4189C5   		movl	%eax, %r13d
 4673 069d 488B4424 		movq	8(%rsp), %rax
 4673      08
 4674 06a2 83786000 		cmpl	$0, 96(%rax)
 4675 06a6 0F856605 		jne	.L942
 4675      0000
 4676              	.L840:
 4677 06ac 488B4424 		movq	16(%rsp), %rax
 4677      10
 4678 06b1 83786000 		cmpl	$0, 96(%rax)
 4679 06b5 0F844F01 		je	.L842
 4679      0000
 4680 06bb 84DB     		testb	%bl, %bl
 4681 06bd 0F840F07 		je	.L843
 4681      0000
 4682 06c3 488BBC24 		movq	128(%rsp), %rdi
 4682      80000000 
 4683 06cb 488D9424 		leaq	136(%rsp), %rdx
 4683      88000000 
 4684 06d3 31F6     		xorl	%esi, %esi
 4685 06d5 E8000000 		call	flSelectConduit
 4685      00
 4686 06da 85C0     		testl	%eax, %eax
 4687 06dc 0F8566FD 		jne	.L882
 4687      FFFF
 4688 06e2 488B4424 		movq	16(%rsp), %rax
 4688      10
 4689 06e7 488BBC24 		movq	128(%rsp), %rdi
 4689      80000000 
 4690 06ef 4C8D8C24 		leaq	136(%rsp), %r9
 4690      88000000 
 4691 06f7 488D8C24 		leaq	160(%rsp), %rcx
 4691      A0000000 
 4692 06ff 488D5424 		leaq	120(%rsp), %rdx
 4692      78
 4693 0704 41B81000 		movl	$16, %r8d
 4693      0000
 4694 070a 488B4068 		movq	104(%rax), %rax
 4695 070e 488B30   		movq	(%rax), %rsi
 4696 0711 E8000000 		call	jtagScanChain
 4696      00
 4697 0716 85C0     		testl	%eax, %eax
 4698 0718 0F852AFD 		jne	.L882
 4698      FFFF
 4699 071e 837C2478 		cmpl	$0, 120(%rsp)
 4699      00
 4700 0723 4889EA   		movq	%rbp, %rdx
 4701 0726 0F84430B 		je	.L844
 4701      0000
 4702 072c BE000000 		movl	$.LC118, %esi
 4702      00
 4703 0731 BF010000 		movl	$1, %edi
 4703      00
 4704 0736 31DB     		xorl	%ebx, %ebx
 4705 0738 E8000000 		call	__printf_chk
 4705      00
 4706 073d EB1C     		jmp	.L845
 4707              	.L846:
 4708 073f 8B949CA0 		movl	160(%rsp,%rbx,4), %edx
 4708      000000
 4709 0746 BE000000 		movl	$.LC119, %esi
 4709      00
 4710 074b BF010000 		movl	$1, %edi
 4710      00
 4711 0750 31C0     		xorl	%eax, %eax
 4712 0752 4883C301 		addq	$1, %rbx
 4713 0756 E8000000 		call	__printf_chk
 4713      00
 4714              	.L845:
 4715 075b 395C2478 		cmpl	%ebx, 120(%rsp)
 4716 075f 77DE     		ja	.L846
 4717 0761 E91A0B00 		jmp	.L847
 4717      00
 4718              	.L820:
 4719 0766 488D9424 		leaq	136(%rsp), %rdx
 4719      88000000 
 4720 076e 4889EE   		movq	%rbp, %rsi
 4721 0771 4889DF   		movq	%rbx, %rdi
 4722 0774 E8000000 		call	flLoadStandardFirmware
 4722      00
 4723 0779 E955FDFF 		jmp	.L821
 4723      FF
 4724              	.L830:
 4725 077e BE000000 		movl	$.LC109, %esi
 4725      00
 4726 0783 BF010000 		movl	$1, %edi
 4726      00
 4727 0788 31C0     		xorl	%eax, %eax
 4728 078a E8000000 		call	__printf_chk
 4728      00
 4729 078f 498B4768 		movq	104(%r15), %rax
 4730 0793 488BBC24 		movq	128(%rsp), %rdi
 4730      80000000 
 4731 079b 488D9424 		leaq	136(%rsp), %rdx
 4731      88000000 
 4732 07a3 488B30   		movq	(%rax), %rsi
 4733 07a6 E8000000 		call	flFlashCustomFirmware
 4733      00
 4734 07ab E984FEFF 		jmp	.L831
 4734      FF
 4735              	.L941:
 4736 07b0 488B0424 		movq	(%rsp), %rax
 4737 07b4 4C8DA424 		leaq	152(%rsp), %r12
 4737      98000000 
 4738 07bc 31D2     		xorl	%edx, %edx
 4739 07be 4C89E6   		movq	%r12, %rsi
 4740 07c1 488B4068 		movq	104(%rax), %rax
 4741 07c5 488B38   		movq	(%rax), %rdi
 4742 07c8 E8000000 		call	strtoul
 4742      00
 4743 07cd 488B8C24 		movq	152(%rsp), %rcx
 4743      98000000 
 4744 07d5 4889C3   		movq	%rax, %rbx
 4745 07d8 80393A   		cmpb	$58, (%rcx)
 4746 07db 0F841906 		je	.L834
 4746      0000
 4747 07e1 B9000000 		movl	$.LC93, %ecx
 4747      00
 4748 07e6 BA000000 		movl	$.LC110, %edx
 4748      00
 4749              	.L933:
 4750 07eb 488B3D00 		movq	stderr(%rip), %rdi
 4750      000000
 4751 07f2 BE010000 		movl	$1, %esi
 4751      00
 4752 07f7 31C0     		xorl	%eax, %eax
 4753 07f9 BB0C0000 		movl	$12, %ebx
 4753      00
 4754 07fe 31ED     		xorl	%ebp, %ebp
 4755 0800 E8000000 		call	__fprintf_chk
 4755      00
 4756 0805 E9FAFAFF 		jmp	.L814
 4756      FF
 4757              	.L842:
 4758 080a 488B4424 		movq	24(%rsp), %rax
 4758      18
 4759 080f 83786000 		cmpl	$0, 96(%rax)
 4760 0813 0F859606 		jne	.L943
 4760      0000
 4761              	.L848:
 4762 0819 488B4424 		movq	80(%rsp), %rax
 4762      50
 4763 081e 83786000 		cmpl	$0, 96(%rax)
 4764 0822 7407     		je	.L850
 4765 0824 C6050000 		movb	$1, enableBenchmarking(%rip)
 4765      000001
 4766              	.L850:
 4767 082b 488B4424 		movq	48(%rsp), %rax
 4767      30
 4768 0830 83786000 		cmpl	$0, 96(%rax)
 4769 0834 0F85DD06 		jne	.L944
 4769      0000
 4770              	.L851:
 4771 083a 488B4424 		movq	56(%rsp), %rax
 4771      38
 4772 083f 83786000 		cmpl	$0, 96(%rax)
 4773 0843 0F859407 		jne	.L945
 4773      0000
 4774              	.L857:
 4775 0849 488B4424 		movq	64(%rsp), %rax
 4775      40
 4776 084e 83786000 		cmpl	$0, 96(%rax)
 4777 0852 0F847107 		je	.L863
 4777      0000
 4778 0858 488B4068 		movq	104(%rax), %rax
 4779 085c 4C8DA424 		leaq	152(%rsp), %r12
 4779      98000000 
 4780 0864 4C8DB424 		leaq	1212(%rsp), %r14
 4780      BC040000 
 4781 086c 488B00   		movq	(%rax), %rax
 4782 086f 48890424 		movq	%rax, (%rsp)
 4783              	.L864:
 4784 0873 488B3C24 		movq	(%rsp), %rdi
 4785 0877 488DB424 		leaq	912(%rsp), %rsi
 4785      90030000 
 4786 087f 488D9C24 		leaq	912(%rsp), %rbx
 4786      90030000 
 4787 0887 E8000000 		call	read_table
 4787      00
 4788 088c 89442408 		movl	%eax, 8(%rsp)
 4789              	.L865:
 4790 0890 8B4B04   		movl	4(%rbx), %ecx
 4791 0893 50       		pushq	%rax
 4792              		.cfi_def_cfa_offset 13816
 4793 0894 BE000000 		movl	$.LC130, %esi
 4793      00
 4794 0899 8B4310   		movl	16(%rbx), %eax
 4795 089c BF010000 		movl	$1, %edi
 4795      00
 4796 08a1 4883C314 		addq	$20, %rbx
 4797 08a5 50       		pushq	%rax
 4798              		.cfi_def_cfa_offset 13824
 4799 08a6 8B53EC   		movl	-20(%rbx), %edx
 4800 08a9 31C0     		xorl	%eax, %eax
 4801 08ab 448B4BF8 		movl	-8(%rbx), %r9d
 4802 08af 448B43F4 		movl	-12(%rbx), %r8d
 4803 08b3 E8000000 		call	__printf_chk
 4803      00
 4804 08b8 4939DE   		cmpq	%rbx, %r14
 4805 08bb 5A       		popq	%rdx
 4806              		.cfi_def_cfa_offset 13816
 4807 08bc 59       		popq	%rcx
 4808              		.cfi_def_cfa_offset 13808
 4809 08bd 75D1     		jne	.L865
 4810 08bf BF010000 		movl	$1, %edi
 4810      00
 4811 08c4 31C0     		xorl	%eax, %eax
 4812 08c6 E8000000 		call	sleep
 4812      00
 4813              	.L866:
 4814 08cb 31C0     		xorl	%eax, %eax
 4815              	.L867:
 4816 08cd C7840470 		movl	$-1, 368(%rsp,%rax)
 4816      010000FF 
 4816      FFFFFF
 4817 08d8 C7840480 		movl	$-1, 640(%rsp,%rax)
 4817      020000FF 
 4817      FFFFFF
 4818 08e3 4883C004 		addq	$4, %rax
 4819 08e7 483D0401 		cmpq	$260, %rax
 4819      0000
 4820 08ed 75DE     		jne	.L867
 4821 08ef 31DB     		xorl	%ebx, %ebx
 4822 08f1 EB0C     		jmp	.L876
 4823              	.L868:
 4824 08f3 83C301   		addl	$1, %ebx
 4825 08f6 83FB40   		cmpl	$64, %ebx
 4826 08f9 0F844E01 		je	.L875
 4826      0000
 4827              	.L876:
 4828 08ff 4584ED   		testb	%r13b, %r13b
 4829 0902 74EF     		je	.L868
 4830 0904 488BBC24 		movq	128(%rsp), %rdi
 4830      80000000 
 4831 090c 488D9424 		leaq	136(%rsp), %rdx
 4831      88000000 
 4832 0914 4C89E6   		movq	%r12, %rsi
 4833 0917 E8000000 		call	flIsFPGARunning
 4833      00
 4834 091c 85C0     		testl	%eax, %eax
 4835 091e 0F8524FB 		jne	.L882
 4835      FFFF
 4836 0924 80BC2498 		cmpb	$0, 152(%rsp)
 4836      00000000 
 4837 092c 74C5     		je	.L868
 4838 092e 8D2C1B   		leal	(%rbx,%rbx), %ebp
 4839 0931 BE000000 		movl	$.LC96, %esi
 4839      00
 4840 0936 BF010000 		movl	$1, %edi
 4840      00
 4841 093b 31C0     		xorl	%eax, %eax
 4842 093d E8000000 		call	__printf_chk
 4842      00
 4843 0942 89EA     		movl	%ebp, %edx
 4844 0944 BE000000 		movl	$.LC131, %esi
 4844      00
 4845 0949 BF010000 		movl	$1, %edi
 4845      00
 4846 094e 31C0     		xorl	%eax, %eax
 4847 0950 E8000000 		call	__printf_chk
 4847      00
 4848 0955 488B9424 		movq	136(%rsp), %rdx
 4848      88000000 
 4849 095d 488BB424 		movq	128(%rsp), %rsi
 4849      80000000 
 4850 0965 B9200000 		movl	$32, %ecx
 4850      00
 4851 096a 89EF     		movl	%ebp, %edi
 4852 096c E8000000 		call	read_4byte_from_fpga
 4852      00
 4853 0971 89E9     		movl	%ebp, %ecx
 4854 0973 4989C7   		movq	%rax, %r15
 4855 0976 4889C2   		movq	%rax, %rdx
 4856 0979 BE000000 		movl	$.LC132, %esi
 4856      00
 4857 097e 31C0     		xorl	%eax, %eax
 4858 0980 BF010000 		movl	$1, %edi
 4858      00
 4859 0985 E8000000 		call	__printf_chk
 4859      00
 4860 098a 41803F66 		cmpb	$102, (%r15)
 4861 098e 0F842804 		je	.L946
 4861      0000
 4862 0994 448D4D01 		leal	1(%rbp), %r9d
 4863 0998 BE000000 		movl	$.LC134, %esi
 4863      00
 4864 099d BF010000 		movl	$1, %edi
 4864      00
 4865 09a2 31C0     		xorl	%eax, %eax
 4866 09a4 4489CA   		movl	%r9d, %edx
 4867 09a7 44894C24 		movl	%r9d, 16(%rsp)
 4867      10
 4868 09ac E8000000 		call	__printf_chk
 4868      00
 4869 09b1 448B4C24 		movl	16(%rsp), %r9d
 4869      10
 4870 09b6 488B8C24 		movq	136(%rsp), %rcx
 4870      88000000 
 4871 09be 41B82000 		movl	$32, %r8d
 4871      0000
 4872 09c4 488B9424 		movq	128(%rsp), %rdx
 4872      80000000 
 4873 09cc 4C89FE   		movq	%r15, %rsi
 4874 09cf 4489CF   		movl	%r9d, %edi
 4875 09d2 E8000000 		call	write_4byte_to_board
 4875      00
 4876 09d7 3C66     		cmpb	$102, %al
 4877 09d9 0F840504 		je	.L947
 4877      0000
 4878 09df BE000000 		movl	$.LC136, %esi
 4878      00
 4879 09e4 BF010000 		movl	$1, %edi
 4879      00
 4880 09e9 31C0     		xorl	%eax, %eax
 4881 09eb E8000000 		call	__printf_chk
 4881      00
 4882 09f0 488B9424 		movq	136(%rsp), %rdx
 4882      88000000 
 4883 09f8 488BB424 		movq	128(%rsp), %rsi
 4883      80000000 
 4884 0a00 B9010000 		movl	$1, %ecx
 4884      00
 4885 0a05 89EF     		movl	%ebp, %edi
 4886 0a07 E8000000 		call	receive_ack
 4886      00
 4887 0a0c 803866   		cmpb	$102, (%rax)
 4888 0a0f 0F843704 		je	.L948
 4888      0000
 4889 0a15 BE000000 		movl	$.LC140, %esi
 4889      00
 4890 0a1a BF010000 		movl	$1, %edi
 4890      00
 4891 0a1f 31C0     		xorl	%eax, %eax
 4892 0a21 E8000000 		call	__printf_chk
 4892      00
 4893 0a26 4863C3   		movslq	%ebx, %rax
 4894 0a29 488D9C24 		leaq	640(%rsp), %rbx
 4894      80020000 
 4895 0a31 4C89FF   		movq	%r15, %rdi
 4896 0a34 48C1E002 		salq	$2, %rax
 4897 0a38 488D1403 		leaq	(%rbx,%rax), %rdx
 4898 0a3c 488D9C24 		leaq	368(%rsp), %rbx
 4898      70010000 
 4899 0a44 488D3403 		leaq	(%rbx,%rax), %rsi
 4900 0a48 E8000000 		call	get_coordinate
 4900      00
 4901              	.L875:
 4902 0a4d 31C0     		xorl	%eax, %eax
 4903 0a4f EB0A     		jmp	.L879
 4904              	.L877:
 4905 0a51 4883C001 		addq	$1, %rax
 4906 0a55 4883F840 		cmpq	$64, %rax
 4907 0a59 7418     		je	.L878
 4908              	.L879:
 4909 0a5b 83BC8470 		cmpl	$-1, 368(%rsp,%rax,4)
 4909      010000FF 
 4910 0a63 74EC     		je	.L877
 4911 0a65 8D0400   		leal	(%rax,%rax), %eax
 4912 0a68 8944246C 		movl	%eax, 108(%rsp)
 4913 0a6c 83C001   		addl	$1, %eax
 4914 0a6f 89442468 		movl	%eax, 104(%rsp)
 4915              	.L878:
 4916 0a73 8B6C2468 		movl	104(%rsp), %ebp
 4917 0a77 488B9424 		movq	136(%rsp), %rdx
 4917      88000000 
 4918 0a7f B9200000 		movl	$32, %ecx
 4918      00
 4919 0a84 488BB424 		movq	128(%rsp), %rsi
 4919      80000000 
 4920 0a8c 89EF     		movl	%ebp, %edi
 4921 0a8e E8000000 		call	send_ack
 4921      00
 4922 0a93 448B7C24 		movl	108(%rsp), %r15d
 4922      6C
 4923 0a98 BE000000 		movl	$.LC141, %esi
 4923      00
 4924 0a9d BF010000 		movl	$1, %edi
 4924      00
 4925 0aa2 31C0     		xorl	%eax, %eax
 4926 0aa4 4489FB   		movl	%r15d, %ebx
 4927 0aa7 D1FB     		sarl	%ebx
 4928 0aa9 4863DB   		movslq	%ebx, %rbx
 4929 0aac 8B8C9C80 		movl	640(%rsp,%rbx,4), %ecx
 4929      020000
 4930 0ab3 8B949C70 		movl	368(%rsp,%rbx,4), %edx
 4930      010000
 4931 0aba E8000000 		call	__printf_chk
 4931      00
 4932 0abf 8BB49C80 		movl	640(%rsp,%rbx,4), %esi
 4932      020000
 4933 0ac6 8BBC9C70 		movl	368(%rsp,%rbx,4), %edi
 4933      010000
 4934 0acd 488D9424 		leaq	912(%rsp), %rdx
 4934      90030000 
 4935 0ad5 8B4C2408 		movl	8(%rsp), %ecx
 4936 0ad9 E8000000 		call	func
 4936      00
 4937 0ade BE000000 		movl	$.LC142, %esi
 4937      00
 4938 0ae3 4889C2   		movq	%rax, %rdx
 4939 0ae6 4889C3   		movq	%rax, %rbx
 4940 0ae9 BF010000 		movl	$1, %edi
 4940      00
 4941 0aee 31C0     		xorl	%eax, %eax
 4942 0af0 E8000000 		call	__printf_chk
 4942      00
 4943 0af5 488B8C24 		movq	136(%rsp), %rcx
 4943      88000000 
 4944 0afd 488B9424 		movq	128(%rsp), %rdx
 4944      80000000 
 4945 0b05 41B82000 		movl	$32, %r8d
 4945      0000
 4946 0b0b 4889DE   		movq	%rbx, %rsi
 4947 0b0e 89EF     		movl	%ebp, %edi
 4948 0b10 E8000000 		call	write_4byte_to_board
 4948      00
 4949 0b15 488B9424 		movq	136(%rsp), %rdx
 4949      88000000 
 4950 0b1d 488BB424 		movq	128(%rsp), %rsi
 4950      80000000 
 4951 0b25 B9000100 		movl	$256, %ecx
 4951      00
 4952 0b2a 4489FF   		movl	%r15d, %edi
 4953 0b2d E8000000 		call	receive_ack
 4953      00
 4954 0b32 803866   		cmpb	$102, (%rax)
 4955 0b35 0F8490FD 		je	.L866
 4955      FFFF
 4956 0b3b 488B8C24 		movq	136(%rsp), %rcx
 4956      88000000 
 4957 0b43 488B9424 		movq	128(%rsp), %rdx
 4957      80000000 
 4958 0b4b 488D7320 		leaq	32(%rbx), %rsi
 4959 0b4f 41B82000 		movl	$32, %r8d
 4959      0000
 4960 0b55 89EF     		movl	%ebp, %edi
 4961 0b57 E8000000 		call	write_4byte_to_board
 4961      00
 4962 0b5c 488B9424 		movq	136(%rsp), %rdx
 4962      88000000 
 4963 0b64 488BB424 		movq	128(%rsp), %rsi
 4963      80000000 
 4964 0b6c B9000100 		movl	$256, %ecx
 4964      00
 4965 0b71 4489FF   		movl	%r15d, %edi
 4966 0b74 E8000000 		call	receive_ack
 4966      00
 4967 0b79 803866   		cmpb	$102, (%rax)
 4968 0b7c 0F8449FD 		je	.L866
 4968      FFFF
 4969 0b82 8B7C2468 		movl	104(%rsp), %edi
 4970 0b86 488B9424 		movq	136(%rsp), %rdx
 4970      88000000 
 4971 0b8e B9200000 		movl	$32, %ecx
 4971      00
 4972 0b93 488BB424 		movq	128(%rsp), %rsi
 4972      80000000 
 4973 0b9b E8000000 		call	send_ack
 4973      00
 4974 0ba0 BF200000 		movl	$32, %edi
 4974      00
 4975 0ba5 31C0     		xorl	%eax, %eax
 4976 0ba7 E8000000 		call	sleep
 4976      00
 4977 0bac E9C2FCFF 		jmp	.L864
 4977      FF
 4978              	.L895:
 4979 0bb1 31C0     		xorl	%eax, %eax
 4980 0bb3 BE000000 		movl	$.LC96, %esi
 4980      00
 4981 0bb8 BF010000 		movl	$1, %edi
 4981      00
 4982 0bbd E8000000 		call	__printf_chk
 4982      00
 4983 0bc2 80BC2498 		cmpb	$0, 152(%rsp)
 4983      00000000 
 4984 0bca 0F859CF9 		jne	.L825
 4984      FFFF
 4985 0bd0 488B3D00 		movq	stderr(%rip), %rdi
 4985      000000
 4986 0bd7 4889E9   		movq	%rbp, %rcx
 4987 0bda BA000000 		movl	$.LC104, %edx
 4987      00
 4988 0bdf BE010000 		movl	$1, %esi
 4988      00
 4989 0be4 31C0     		xorl	%eax, %eax
 4990 0be6 E8000000 		call	__fprintf_chk
 4990      00
 4991 0beb E958F8FF 		jmp	.L882
 4991      FF
 4992              	.L836:
 4993 0bf0 488BBC24 		movq	128(%rsp), %rdi
 4993      80000000 
 4994 0bf8 488DB424 		leaq	136(%rsp), %rsi
 4994      88000000 
 4995 0c00 E8000000 		call	flResetToggle
 4995      00
 4996 0c05 85C0     		testl	%eax, %eax
 4997 0c07 0F853BF8 		jne	.L882
 4997      FFFF
 4998 0c0d E947FAFF 		jmp	.L839
 4998      FF
 4999              	.L942:
 5000 0c12 BE000000 		movl	$.LC112, %esi
 5000      00
 5001 0c17 BF010000 		movl	$1, %edi
 5001      00
 5002 0c1c 31C0     		xorl	%eax, %eax
 5003 0c1e E8000000 		call	__printf_chk
 5003      00
 5004 0c23 488B4424 		movq	8(%rsp), %rax
 5004      08
 5005 0c28 4C8DA424 		leaq	152(%rsp), %r12
 5005      98000000 
 5006 0c30 488BBC24 		movq	128(%rsp), %rdi
 5006      80000000 
 5007 0c38 488D8C24 		leaq	136(%rsp), %rcx
 5007      88000000 
 5008 0c40 4C89E2   		movq	%r12, %rdx
 5009 0c43 488B4068 		movq	104(%rax), %rax
 5010 0c47 488B30   		movq	(%rax), %rsi
 5011 0c4a E8000000 		call	flMultiBitPortAccess
 5011      00
 5012 0c4f 85C0     		testl	%eax, %eax
 5013 0c51 0F85F1F7 		jne	.L882
 5013      FFFF
 5014 0c57 448B8424 		movl	152(%rsp), %r8d
 5014      98000000 
 5015 0c5f 488DBC24 		leaq	13712(%rsp), %rdi
 5015      90350000 
 5016 0c67 B9000000 		movl	$.LC113, %ecx
 5016      00
 5017 0c6c BA090000 		movl	$9, %edx
 5017      00
 5018 0c71 BE010000 		movl	$1, %esi
 5018      00
 5019 0c76 31C0     		xorl	%eax, %eax
 5020 0c78 E8000000 		call	__sprintf_chk
 5020      00
 5021 0c7d 0FB68424 		movzbl	13712(%rsp), %eax
 5021      90350000 
 5022 0c85 BE000000 		movl	$.LC114, %esi
 5022      00
 5023 0c8a BF010000 		movl	$1, %edi
 5023      00
 5024 0c8f 83E830   		subl	$48, %eax
 5025 0c92 4898     		cltq
 5026 0c94 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5026      00000000 
 5027 0c9c 31C0     		xorl	%eax, %eax
 5028 0c9e E8000000 		call	__printf_chk
 5028      00
 5029 0ca3 0FB68424 		movzbl	13713(%rsp), %eax
 5029      91350000 
 5030 0cab BE000000 		movl	$.LC115, %esi
 5030      00
 5031 0cb0 BF010000 		movl	$1, %edi
 5031      00
 5032 0cb5 83E830   		subl	$48, %eax
 5033 0cb8 4898     		cltq
 5034 0cba 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5034      00000000 
 5035 0cc2 31C0     		xorl	%eax, %eax
 5036 0cc4 E8000000 		call	__printf_chk
 5036      00
 5037 0cc9 0FB68424 		movzbl	13714(%rsp), %eax
 5037      92350000 
 5038 0cd1 BE000000 		movl	$.LC115, %esi
 5038      00
 5039 0cd6 BF010000 		movl	$1, %edi
 5039      00
 5040 0cdb 83E830   		subl	$48, %eax
 5041 0cde 4898     		cltq
 5042 0ce0 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5042      00000000 
 5043 0ce8 31C0     		xorl	%eax, %eax
 5044 0cea E8000000 		call	__printf_chk
 5044      00
 5045 0cef 0FB68424 		movzbl	13715(%rsp), %eax
 5045      93350000 
 5046 0cf7 BE000000 		movl	$.LC115, %esi
 5046      00
 5047 0cfc BF010000 		movl	$1, %edi
 5047      00
 5048 0d01 83E830   		subl	$48, %eax
 5049 0d04 4898     		cltq
 5050 0d06 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5050      00000000 
 5051 0d0e 31C0     		xorl	%eax, %eax
 5052 0d10 E8000000 		call	__printf_chk
 5052      00
 5053 0d15 0FB68424 		movzbl	13716(%rsp), %eax
 5053      94350000 
 5054 0d1d BE000000 		movl	$.LC116, %esi
 5054      00
 5055 0d22 BF010000 		movl	$1, %edi
 5055      00
 5056 0d27 83E830   		subl	$48, %eax
 5057 0d2a 4898     		cltq
 5058 0d2c 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5058      00000000 
 5059 0d34 31C0     		xorl	%eax, %eax
 5060 0d36 E8000000 		call	__printf_chk
 5060      00
 5061 0d3b 0FB68424 		movzbl	13717(%rsp), %eax
 5061      95350000 
 5062 0d43 BE000000 		movl	$.LC115, %esi
 5062      00
 5063 0d48 BF010000 		movl	$1, %edi
 5063      00
 5064 0d4d 83E830   		subl	$48, %eax
 5065 0d50 4898     		cltq
 5066 0d52 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5066      00000000 
 5067 0d5a 31C0     		xorl	%eax, %eax
 5068 0d5c E8000000 		call	__printf_chk
 5068      00
 5069 0d61 0FB68424 		movzbl	13718(%rsp), %eax
 5069      96350000 
 5070 0d69 BE000000 		movl	$.LC115, %esi
 5070      00
 5071 0d6e BF010000 		movl	$1, %edi
 5071      00
 5072 0d73 83E830   		subl	$48, %eax
 5073 0d76 4898     		cltq
 5074 0d78 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5074      00000000 
 5075 0d80 31C0     		xorl	%eax, %eax
 5076 0d82 E8000000 		call	__printf_chk
 5076      00
 5077 0d87 0FB68424 		movzbl	13719(%rsp), %eax
 5077      97350000 
 5078 0d8f BE000000 		movl	$.LC117, %esi
 5078      00
 5079 0d94 BF010000 		movl	$1, %edi
 5079      00
 5080 0d99 83E830   		subl	$48, %eax
 5081 0d9c 4898     		cltq
 5082 0d9e 488B14C5 		movq	nibbles(,%rax,8), %rdx
 5082      00000000 
 5083 0da6 31C0     		xorl	%eax, %eax
 5084 0da8 E8000000 		call	__printf_chk
 5084      00
 5085 0dad BF640000 		movl	$100, %edi
 5085      00
 5086 0db2 E8000000 		call	flSleep
 5086      00
 5087 0db7 E9F0F8FF 		jmp	.L840
 5087      FF
 5088              	.L946:
 5089 0dbc BE000000 		movl	$.LC133, %esi
 5089      00
 5090 0dc1 BF010000 		movl	$1, %edi
 5090      00
 5091 0dc6 31C0     		xorl	%eax, %eax
 5092 0dc8 E8000000 		call	__printf_chk
 5092      00
 5093 0dcd E921FBFF 		jmp	.L868
 5093      FF
 5094              	.L843:
 5095 0dd2 4889E9   		movq	%rbp, %rcx
 5096 0dd5 BA000000 		movl	$.LC121, %edx
 5096      00
 5097 0dda E937F6FF 		jmp	.L931
 5097      FF
 5098              	.L938:
 5099 0ddf E8000000 		call	__stack_chk_fail
 5099      00
 5100              	.L947:
 5101 0de4 BE000000 		movl	$.LC135, %esi
 5101      00
 5102 0de9 BF010000 		movl	$1, %edi
 5102      00
 5103 0dee 31C0     		xorl	%eax, %eax
 5104 0df0 E8000000 		call	__printf_chk
 5104      00
 5105 0df5 E9F9FAFF 		jmp	.L868
 5105      FF
 5106              	.L834:
 5107 0dfa 4883C101 		addq	$1, %rcx
 5108 0dfe 89C2     		movl	%eax, %edx
 5109 0e00 BE000000 		movl	$.LC111, %esi
 5109      00
 5110 0e05 BF010000 		movl	$1, %edi
 5110      00
 5111 0e0a 31C0     		xorl	%eax, %eax
 5112 0e0c 48898C24 		movq	%rcx, 152(%rsp)
 5112      98000000 
 5113 0e14 E8000000 		call	__printf_chk
 5113      00
 5114 0e19 488B9424 		movq	152(%rsp), %rdx
 5114      98000000 
 5115 0e21 488BBC24 		movq	128(%rsp), %rdi
 5115      80000000 
 5116 0e29 488D8C24 		leaq	136(%rsp), %rcx
 5116      88000000 
 5117 0e31 89DE     		movl	%ebx, %esi
 5118 0e33 E8000000 		call	flSaveFirmware
 5118      00
 5119 0e38 85C0     		testl	%eax, %eax
 5120 0e3a 0F840AF8 		je	.L829
 5120      FFFF
 5121              	.L861:
 5122 0e40 BB010000 		movl	$1, %ebx
 5122      00
 5123 0e45 31ED     		xorl	%ebp, %ebp
 5124 0e47 E9B8F4FF 		jmp	.L814
 5124      FF
 5125              	.L948:
 5126 0e4c BE000000 		movl	$.LC137, %esi
 5126      00
 5127 0e51 BF010000 		movl	$1, %edi
 5127      00
 5128 0e56 31C0     		xorl	%eax, %eax
 5129 0e58 E8000000 		call	__printf_chk
 5129      00
 5130 0e5d BF050000 		movl	$5, %edi
 5130      00
 5131 0e62 31C0     		xorl	%eax, %eax
 5132 0e64 E8000000 		call	sleep
 5132      00
 5133 0e69 BE000000 		movl	$.LC138, %esi
 5133      00
 5134 0e6e BF010000 		movl	$1, %edi
 5134      00
 5135 0e73 31C0     		xorl	%eax, %eax
 5136 0e75 E8000000 		call	__printf_chk
 5136      00
 5137 0e7a 488BB424 		movq	128(%rsp), %rsi
 5137      80000000 
 5138 0e82 488B9424 		movq	136(%rsp), %rdx
 5138      88000000 
 5139 0e8a 89EF     		movl	%ebp, %edi
 5140 0e8c B9010000 		movl	$1, %ecx
 5140      00
 5141 0e91 E8000000 		call	receive_ack
 5141      00
 5142 0e96 BE000000 		movl	$.LC139, %esi
 5142      00
 5143 0e9b C60066   		movb	$102, (%rax)
 5144 0e9e BF010000 		movl	$1, %edi
 5144      00
 5145 0ea3 31C0     		xorl	%eax, %eax
 5146 0ea5 E8000000 		call	__printf_chk
 5146      00
 5147 0eaa E944FAFF 		jmp	.L868
 5147      FF
 5148              	.L943:
 5149 0eaf 31C0     		xorl	%eax, %eax
 5150 0eb1 BE000000 		movl	$.LC122, %esi
 5150      00
 5151 0eb6 BF010000 		movl	$1, %edi
 5151      00
 5152 0ebb E8000000 		call	__printf_chk
 5152      00
 5153 0ec0 84DB     		testb	%bl, %bl
 5154 0ec2 0F84F400 		je	.L849
 5154      0000
 5155              	.L889:
 5156 0ec8 488BBC24 		movq	128(%rsp), %rdi
 5156      80000000 
 5157 0ed0 488D9424 		leaq	136(%rsp), %rdx
 5157      88000000 
 5158 0ed8 31F6     		xorl	%esi, %esi
 5159 0eda E8000000 		call	flSelectConduit
 5159      00
 5160 0edf 85C0     		testl	%eax, %eax
 5161 0ee1 0F8561F5 		jne	.L882
 5161      FFFF
 5162 0ee7 488B4424 		movq	24(%rsp), %rax
 5162      18
 5163 0eec 488BBC24 		movq	128(%rsp), %rdi
 5163      80000000 
 5164 0ef4 488D8C24 		leaq	136(%rsp), %rcx
 5164      88000000 
 5165 0efc 31D2     		xorl	%edx, %edx
 5166 0efe 488B4068 		movq	104(%rax), %rax
 5167 0f02 488B30   		movq	(%rax), %rsi
 5168 0f05 E8000000 		call	flProgram
 5168      00
 5169 0f0a 85C0     		testl	%eax, %eax
 5170 0f0c 0F8536F5 		jne	.L882
 5170      FFFF
 5171 0f12 E902F9FF 		jmp	.L848
 5171      FF
 5172              	.L944:
 5173 0f17 31C0     		xorl	%eax, %eax
 5174 0f19 4889EA   		movq	%rbp, %rdx
 5175 0f1c BE000000 		movl	$.LC124, %esi
 5175      00
 5176 0f21 BF010000 		movl	$1, %edi
 5176      00
 5177 0f26 E8000000 		call	__printf_chk
 5177      00
 5178 0f2b 4584ED   		testb	%r13b, %r13b
 5179 0f2e 0F84B401 		je	.L852
 5179      0000
 5180 0f34 488BBC24 		movq	128(%rsp), %rdi
 5180      80000000 
 5181 0f3c 488D9424 		leaq	136(%rsp), %rdx
 5181      88000000 
 5182 0f44 4489F6   		movl	%r14d, %esi
 5183 0f47 E8000000 		call	flSelectConduit
 5183      00
 5184 0f4c 85C0     		testl	%eax, %eax
 5185 0f4e 0F85ECFE 		jne	.L861
 5185      FFFF
 5186 0f54 4C8DA424 		leaq	152(%rsp), %r12
 5186      98000000 
 5187 0f5c 488BBC24 		movq	128(%rsp), %rdi
 5187      80000000 
 5188 0f64 488D9424 		leaq	136(%rsp), %rdx
 5188      88000000 
 5189 0f6c 4C89E6   		movq	%r12, %rsi
 5190 0f6f E8000000 		call	flIsFPGARunning
 5190      00
 5191 0f74 85C0     		testl	%eax, %eax
 5192 0f76 0F85C4FE 		jne	.L861
 5192      FFFF
 5193 0f7c 80BC2498 		cmpb	$0, 152(%rsp)
 5193      00000000 
 5194 0f84 0F842703 		je	.L854
 5194      0000
 5195 0f8a 488B4424 		movq	48(%rsp), %rax
 5195      30
 5196 0f8f 488BBC24 		movq	128(%rsp), %rdi
 5196      80000000 
 5197 0f97 488D9424 		leaq	136(%rsp), %rdx
 5197      88000000 
 5198 0f9f 488B4068 		movq	104(%rax), %rax
 5199 0fa3 488B30   		movq	(%rax), %rsi
 5200 0fa6 E8000000 		call	parseLine
 5200      00
 5201 0fab 85C0     		testl	%eax, %eax
 5202 0fad 89C3     		movl	%eax, %ebx
 5203 0faf 0F8485F8 		je	.L851
 5203      FFFF
 5204 0fb5 31ED     		xorl	%ebp, %ebp
 5205 0fb7 E948F3FF 		jmp	.L814
 5205      FF
 5206              	.L849:
 5207 0fbc 4889E9   		movq	%rbp, %rcx
 5208 0fbf BA000000 		movl	$.LC123, %edx
 5208      00
 5209 0fc4 E94DF4FF 		jmp	.L931
 5209      FF
 5210              	.L863:
 5211 0fc9 488B4424 		movq	72(%rsp), %rax
 5211      48
 5212 0fce 83786000 		cmpl	$0, 96(%rax)
 5213 0fd2 7545     		jne	.L949
 5214 0fd4 31ED     		xorl	%ebp, %ebp
 5215              	.L932:
 5216 0fd6 31DB     		xorl	%ebx, %ebx
 5217 0fd8 E927F3FF 		jmp	.L814
 5217      FF
 5218              	.L945:
 5219 0fdd 488B4068 		movq	104(%rax), %rax
 5220 0fe1 488DB424 		leaq	144(%rsp), %rsi
 5220      90000000 
 5221 0fe9 BA0A0000 		movl	$10, %edx
 5221      00
 5222 0fee 488B38   		movq	(%rax), %rdi
 5223 0ff1 E8000000 		call	strtoul
 5223      00
 5224 0ff6 488B8C24 		movq	144(%rsp), %rcx
 5224      90000000 
 5225 0ffe 4889C3   		movq	%rax, %rbx
 5226 1001 80393A   		cmpb	$58, (%rcx)
 5227 1004 0F84EB00 		je	.L858
 5227      0000
 5228 100a B9000000 		movl	$.LC93, %ecx
 5228      00
 5229 100f BA000000 		movl	$.LC127, %edx
 5229      00
 5230 1014 E9D2F7FF 		jmp	.L933
 5230      FF
 5231              	.L949:
 5232 1019 31C0     		xorl	%eax, %eax
 5233 101b BE000000 		movl	$.LC143, %esi
 5233      00
 5234 1020 BF010000 		movl	$1, %edi
 5234      00
 5235 1025 E8000000 		call	__printf_chk
 5235      00
 5236 102a 4584ED   		testb	%r13b, %r13b
 5237 102d 0F849F02 		je	.L881
 5237      0000
 5238 1033 488BBC24 		movq	128(%rsp), %rdi
 5238      80000000 
 5239 103b 488D9424 		leaq	136(%rsp), %rdx
 5239      88000000 
 5240 1043 4489F6   		movl	%r14d, %esi
 5241 1046 E8000000 		call	flSelectConduit
 5241      00
 5242 104b 85C0     		testl	%eax, %eax
 5243 104d 0F85F5F3 		jne	.L882
 5243      FFFF
 5244 1053 488BBC24 		movq	128(%rsp), %rdi
 5244      80000000 
 5245 105b 488D9424 		leaq	136(%rsp), %rdx
 5245      88000000 
 5246 1063 488DB424 		leaq	152(%rsp), %rsi
 5246      98000000 
 5247 106b E8000000 		call	flIsFPGARunning
 5247      00
 5248 1070 85C0     		testl	%eax, %eax
 5249 1072 0F85D0F3 		jne	.L882
 5249      FFFF
 5250 1078 80BC2498 		cmpb	$0, 152(%rsp)
 5250      00000000 
 5251 1080 0F843F02 		je	.L925
 5251      0000
 5252              	.L916:
 5253 1086 BF000000 		movl	$.LC144, %edi
 5253      00
 5254 108b E8000000 		call	readline
 5254      00
 5255 1090 4885C0   		testq	%rax, %rax
 5256 1093 4889C5   		movq	%rax, %rbp
 5257 1096 0F843AFF 		je	.L932
 5257      FFFF
 5258 109c 0FB600   		movzbl	(%rax), %eax
 5259 109f 84C0     		testb	%al, %al
 5260 10a1 74E3     		je	.L916
 5261 10a3 3C71     		cmpb	$113, %al
 5262 10a5 0F842BFF 		je	.L932
 5262      FFFF
 5263 10ab 4889EF   		movq	%rbp, %rdi
 5264 10ae E8000000 		call	add_history
 5264      00
 5265 10b3 488BBC24 		movq	128(%rsp), %rdi
 5265      80000000 
 5266 10bb 488D9424 		leaq	136(%rsp), %rdx
 5266      88000000 
 5267 10c3 4889EE   		movq	%rbp, %rsi
 5268 10c6 E8000000 		call	parseLine
 5268      00
 5269 10cb 85C0     		testl	%eax, %eax
 5270 10cd 0F85EB01 		jne	.L929
 5270      0000
 5271 10d3 4889EF   		movq	%rbp, %rdi
 5272 10d6 E8000000 		call	free
 5272      00
 5273 10db 807D0071 		cmpb	$113, 0(%rbp)
 5274 10df 75A5     		jne	.L916
 5275 10e1 31DB     		xorl	%ebx, %ebx
 5276 10e3 E91CF2FF 		jmp	.L814
 5276      FF
 5277              	.L852:
 5278 10e8 4889E9   		movq	%rbp, %rcx
 5279 10eb BA000000 		movl	$.LC126, %edx
 5279      00
 5280 10f0 E921F3FF 		jmp	.L931
 5280      FF
 5281              	.L858:
 5282 10f5 4883C101 		addq	$1, %rcx
 5283 10f9 4889C2   		movq	%rax, %rdx
 5284 10fc BE000000 		movl	$.LC128, %esi
 5284      00
 5285 1101 BF010000 		movl	$1, %edi
 5285      00
 5286 1106 31C0     		xorl	%eax, %eax
 5287 1108 48898C24 		movq	%rcx, 144(%rsp)
 5287      90000000 
 5288 1110 E8000000 		call	__printf_chk
 5288      00
 5289 1115 488BBC24 		movq	144(%rsp), %rdi
 5289      90000000 
 5290 111d BE000000 		movl	$.LC2, %esi
 5290      00
 5291 1122 E8000000 		call	fopen
 5291      00
 5292 1127 4885C0   		testq	%rax, %rax
 5293 112a 4989C4   		movq	%rax, %r12
 5294 112d 0F847201 		je	.L893
 5294      0000
 5295 1133 E8000000 		call	sigRegisterHandler
 5295      00
 5296 1138 488BBC24 		movq	128(%rsp), %rdi
 5296      80000000 
 5297 1140 488D9424 		leaq	136(%rsp), %rdx
 5297      88000000 
 5298 1148 4489F6   		movl	%r14d, %esi
 5299 114b E8000000 		call	flSelectConduit
 5299      00
 5300 1150 85C0     		testl	%eax, %eax
 5301 1152 0F85E8FC 		jne	.L861
 5301      FFFF
 5302 1158 488BBC24 		movq	128(%rsp), %rdi
 5302      80000000 
 5303 1160 0FB6DB   		movzbl	%bl, %ebx
 5304 1163 4C8D8424 		leaq	136(%rsp), %r8
 5304      88000000 
 5305 116b 31C9     		xorl	%ecx, %ecx
 5306 116d BA005800 		movl	$22528, %edx
 5306      00
 5307 1172 89DE     		movl	%ebx, %esi
 5308 1174 E8000000 		call	flReadChannelAsyncSubmit
 5308      00
 5309 1179 85C0     		testl	%eax, %eax
 5310 117b 0F85BFFC 		jne	.L861
 5310      FFFF
 5311              	.L862:
 5312 1181 488BBC24 		movq	128(%rsp), %rdi
 5312      80000000 
 5313 1189 4C8D8424 		leaq	136(%rsp), %r8
 5313      88000000 
 5314 1191 31C9     		xorl	%ecx, %ecx
 5315 1193 BA005800 		movl	$22528, %edx
 5315      00
 5316 1198 89DE     		movl	%ebx, %esi
 5317 119a E8000000 		call	flReadChannelAsyncSubmit
 5317      00
 5318 119f 85C0     		testl	%eax, %eax
 5319 11a1 0F8599FC 		jne	.L861
 5319      FFFF
 5320 11a7 488D4C24 		leaq	124(%rsp), %rcx
 5320      7C
 5321 11ac 488BBC24 		movq	128(%rsp), %rdi
 5321      80000000 
 5322 11b4 4C8D8424 		leaq	136(%rsp), %r8
 5322      88000000 
 5323 11bc 488DB424 		leaq	152(%rsp), %rsi
 5323      98000000 
 5324 11c4 4889CA   		movq	%rcx, %rdx
 5325 11c7 E8000000 		call	flReadChannelAsyncAwait
 5325      00
 5326 11cc 85C0     		testl	%eax, %eax
 5327 11ce 0F856CFC 		jne	.L861
 5327      FFFF
 5328 11d4 8B54247C 		movl	124(%rsp), %edx
 5329 11d8 488BBC24 		movq	152(%rsp), %rdi
 5329      98000000 
 5330 11e0 4C89E1   		movq	%r12, %rcx
 5331 11e3 BE010000 		movl	$1, %esi
 5331      00
 5332 11e8 E8000000 		call	fwrite
 5332      00
 5333 11ed BE000000 		movl	$.LC103, %esi
 5333      00
 5334 11f2 BF010000 		movl	$1, %edi
 5334      00
 5335 11f7 31C0     		xorl	%eax, %eax
 5336 11f9 E8000000 		call	__printf_chk
 5336      00
 5337 11fe E8000000 		call	sigIsRaised
 5337      00
 5338 1203 84C0     		testb	%al, %al
 5339 1205 0F8476FF 		je	.L862
 5339      FFFF
 5340 120b BE000000 		movl	$.LC129, %esi
 5340      00
 5341 1210 BF010000 		movl	$1, %edi
 5341      00
 5342 1215 31C0     		xorl	%eax, %eax
 5343 1217 E8000000 		call	__printf_chk
 5343      00
 5344 121c 488D4C24 		leaq	124(%rsp), %rcx
 5344      7C
 5345 1221 488BBC24 		movq	128(%rsp), %rdi
 5345      80000000 
 5346 1229 4C8D8424 		leaq	136(%rsp), %r8
 5346      88000000 
 5347 1231 488DB424 		leaq	152(%rsp), %rsi
 5347      98000000 
 5348 1239 4889CA   		movq	%rcx, %rdx
 5349 123c E8000000 		call	flReadChannelAsyncAwait
 5349      00
 5350 1241 85C0     		testl	%eax, %eax
 5351 1243 0F85F7FB 		jne	.L861
 5351      FFFF
 5352 1249 8B54247C 		movl	124(%rsp), %edx
 5353 124d 488BBC24 		movq	152(%rsp), %rdi
 5353      98000000 
 5354 1255 4C89E1   		movq	%r12, %rcx
 5355 1258 BE010000 		movl	$1, %esi
 5355      00
 5356 125d E8000000 		call	fwrite
 5356      00
 5357 1262 4C89E7   		movq	%r12, %rdi
 5358 1265 E8000000 		call	fclose
 5358      00
 5359 126a E9DAF5FF 		jmp	.L857
 5359      FF
 5360              	.L844:
 5361 126f BE000000 		movl	$.LC120, %esi
 5361      00
 5362 1274 BF010000 		movl	$1, %edi
 5362      00
 5363 1279 31C0     		xorl	%eax, %eax
 5364 127b E8000000 		call	__printf_chk
 5364      00
 5365              	.L847:
 5366 1280 488B4424 		movq	24(%rsp), %rax
 5366      18
 5367 1285 83786000 		cmpl	$0, 96(%rax)
 5368 1289 0F848AF5 		je	.L848
 5368      FFFF
 5369 128f BE000000 		movl	$.LC122, %esi
 5369      00
 5370 1294 BF010000 		movl	$1, %edi
 5370      00
 5371 1299 31C0     		xorl	%eax, %eax
 5372 129b E8000000 		call	__printf_chk
 5372      00
 5373 12a0 E923FCFF 		jmp	.L889
 5373      FF
 5374              	.L893:
 5375 12a5 BB0B0000 		movl	$11, %ebx
 5375      00
 5376 12aa 31ED     		xorl	%ebp, %ebp
 5377 12ac E953F0FF 		jmp	.L814
 5377      FF
 5378              	.L854:
 5379 12b1 4889E9   		movq	%rbp, %rcx
 5380 12b4 BA000000 		movl	$.LC125, %edx
 5380      00
 5381 12b9 E92DF5FF 		jmp	.L933
 5381      FF
 5382              	.L929:
 5383 12be 89C3     		movl	%eax, %ebx
 5384 12c0 E93FF0FF 		jmp	.L814
 5384      FF
 5385              	.L925:
 5386 12c5 4889E9   		movq	%rbp, %rcx
 5387 12c8 BA000000 		movl	$.LC145, %edx
 5387      00
 5388 12cd E944F1FF 		jmp	.L931
 5388      FF
 5389              	.L881:
 5390 12d2 4889E9   		movq	%rbp, %rcx
 5391 12d5 BA000000 		movl	$.LC146, %edx
 5391      00
 5392 12da E937F1FF 		jmp	.L931
 5392      FF
 5393              		.cfi_endproc
 5394              	.LFE70:
 5396              		.section	.text.unlikely
 5397              	.LCOLDE148:
 5398              		.section	.text.startup
 5399              	.LHOTE148:
 5400              		.globl	mm
 5401              		.section	.rodata.str1.1
 5402              	.LC149:
 5403 0333 30313233 		.string	"0123456789abcdef"
 5403      34353637 
 5403      38396162 
 5403      63646566 
 5403      00
 5404              		.data
 5405              		.align 8
 5408              	mm:
 5409 0000 00000000 		.quad	.LC149
 5409      00000000 
 5410              		.section	.rodata.str1.1
 5411              	.LC150:
 5412 0344 30303031 		.string	"0001"
 5412      00
 5413              	.LC151:
 5414 0349 30303130 		.string	"0010"
 5414      00
 5415              	.LC152:
 5416 034e 30303131 		.string	"0011"
 5416      00
 5417              	.LC153:
 5418 0353 30313030 		.string	"0100"
 5418      00
 5419              	.LC154:
 5420 0358 30313031 		.string	"0101"
 5420      00
 5421              	.LC155:
 5422 035d 30313130 		.string	"0110"
 5422      00
 5423              	.LC156:
 5424 0362 30313131 		.string	"0111"
 5424      00
 5425              	.LC157:
 5426 0367 31303030 		.string	"1000"
 5426      00
 5427              	.LC158:
 5428 036c 31303031 		.string	"1001"
 5428      00
 5429              	.LC159:
 5430 0371 58585858 		.string	"XXXX"
 5430      00
 5431              	.LC160:
 5432 0376 31303130 		.string	"1010"
 5432      00
 5433              	.LC161:
 5434 037b 31303131 		.string	"1011"
 5434      00
 5435              	.LC162:
 5436 0380 31313030 		.string	"1100"
 5436      00
 5437              	.LC163:
 5438 0385 31313031 		.string	"1101"
 5438      00
 5439              	.LC164:
 5440 038a 31313130 		.string	"1110"
 5440      00
 5441              		.section	.rodata
 5442              		.align 32
 5445              	nibbles:
 5446 0000 00000000 		.quad	.LC26
 5446      00000000 
 5447 0008 00000000 		.quad	.LC150
 5447      00000000 
 5448 0010 00000000 		.quad	.LC151
 5448      00000000 
 5449 0018 00000000 		.quad	.LC152
 5449      00000000 
 5450 0020 00000000 		.quad	.LC153
 5450      00000000 
 5451 0028 00000000 		.quad	.LC154
 5451      00000000 
 5452 0030 00000000 		.quad	.LC155
 5452      00000000 
 5453 0038 00000000 		.quad	.LC156
 5453      00000000 
 5454 0040 00000000 		.quad	.LC157
 5454      00000000 
 5455 0048 00000000 		.quad	.LC158
 5455      00000000 
 5456 0050 00000000 		.quad	.LC159
 5456      00000000 
 5457 0058 00000000 		.quad	.LC159
 5457      00000000 
 5458 0060 00000000 		.quad	.LC159
 5458      00000000 
 5459 0068 00000000 		.quad	.LC159
 5459      00000000 
 5460 0070 00000000 		.quad	.LC159
 5460      00000000 
 5461 0078 00000000 		.quad	.LC159
 5461      00000000 
 5462 0080 00000000 		.quad	.LC159
 5462      00000000 
 5463 0088 00000000 		.quad	.LC160
 5463      00000000 
 5464 0090 00000000 		.quad	.LC161
 5464      00000000 
 5465 0098 00000000 		.quad	.LC162
 5465      00000000 
 5466 00a0 00000000 		.quad	.LC163
 5466      00000000 
 5467 00a8 00000000 		.quad	.LC164
 5467      00000000 
 5468 00b0 00000000 		.quad	.LC28
 5468      00000000 
 5469              		.comm	out,1,1
 5470              		.section	.rodata.str1.1
 5471              	.LC165:
 5472 038f 556E7061 		.string	"Unparseable hex number"
 5472      72736561 
 5472      626C6520 
 5472      68657820 
 5472      6E756D62 
 5473              	.LC166:
 5474 03a6 4368616E 		.string	"Channel out of range"
 5474      6E656C20 
 5474      6F757420 
 5474      6F662072 
 5474      616E6765 
 5475              	.LC167:
 5476 03bb 436F6E64 		.string	"Conduit out of range"
 5476      75697420 
 5476      6F757420 
 5476      6F662072 
 5476      616E6765 
 5477              	.LC168:
 5478 03d0 496C6C65 		.string	"Illegal character"
 5478      67616C20 
 5478      63686172 
 5478      61637465 
 5478      7200
 5479              	.LC169:
 5480 03e2 556E7465 		.string	"Unterminated string"
 5480      726D696E 
 5480      61746564 
 5480      20737472 
 5480      696E6700 
 5481              	.LC170:
 5482 03f6 4E6F206D 		.string	"No memory"
 5482      656D6F72 
 5482      7900
 5483              	.LC171:
 5484 0400 456D7074 		.string	"Empty string"
 5484      79207374 
 5484      72696E67 
 5484      00
 5485              	.LC172:
 5486 040d 4F646420 		.string	"Odd number of digits"
 5486      6E756D62 
 5486      6572206F 
 5486      66206469 
 5486      67697473 
 5487              	.LC173:
 5488 0422 43616E6E 		.string	"Cannot load file"
 5488      6F74206C 
 5488      6F616420 
 5488      66696C65 
 5488      00
 5489              	.LC174:
 5490 0433 43616E6E 		.string	"Cannot save file"
 5490      6F742073 
 5490      61766520 
 5490      66696C65 
 5490      00
 5491              	.LC175:
 5492 0444 42616420 		.string	"Bad arguments"
 5492      61726775 
 5492      6D656E74 
 5492      7300
 5493              		.section	.rodata
 5494 00b8 00000000 		.align 32
 5494      00000000 
 5497              	errMessages:
 5498 00c0 00000000 		.quad	0
 5498      00000000 
 5499 00c8 00000000 		.quad	0
 5499      00000000 
 5500 00d0 00000000 		.quad	.LC165
 5500      00000000 
 5501 00d8 00000000 		.quad	.LC166
 5501      00000000 
 5502 00e0 00000000 		.quad	.LC167
 5502      00000000 
 5503 00e8 00000000 		.quad	.LC168
 5503      00000000 
 5504 00f0 00000000 		.quad	.LC169
 5504      00000000 
 5505 00f8 00000000 		.quad	.LC170
 5505      00000000 
 5506 0100 00000000 		.quad	.LC171
 5506      00000000 
 5507 0108 00000000 		.quad	.LC172
 5507      00000000 
 5508 0110 00000000 		.quad	.LC173
 5508      00000000 
 5509 0118 00000000 		.quad	.LC174
 5509      00000000 
 5510 0120 00000000 		.quad	.LC175
 5510      00000000 
 5511              		.local	enableBenchmarking
 5512              		.comm	enableBenchmarking,1,1
 5513              		.local	ptr
 5514              		.comm	ptr,8,8
 5515              		.globl	ack2
 5516              		.section	.rodata.str1.8
 5517 0b3c 00000000 		.align 8
 5518              	.LC176:
 5519 0b40 30303030 		.string	"00001111000011110000111100001111"
 5519      31313131 
 5519      30303030 
 5519      31313131 
 5519      30303030 
 5520              		.data
 5521              		.align 8
 5524              	ack2:
 5525 0008 00000000 		.quad	.LC176
 5525      00000000 
 5526              		.globl	ack1
 5527              		.section	.rodata.str1.8
 5528 0b61 00000000 		.align 8
 5528      000000
 5529              	.LC177:
 5530 0b68 31313131 		.string	"11110000111100001111000011110000"
 5530      30303030 
 5530      31313131 
 5530      30303030 
 5530      31313131 
 5531              		.data
 5532              		.align 8
 5535              	ack1:
 5536 0010 00000000 		.quad	.LC177
 5536      00000000 
 5537              		.comm	line1,100,32
 5538              		.globl	key
 5539              		.section	.rodata.str1.8
 5540 0b89 00000000 		.align 8
 5540      000000
 5541              	.LC178:
 5542 0b90 31313030 		.string	"11001100110011001100110011000001"
 5542      31313030 
 5542      31313030 
 5542      31313030 
 5542      31313030 
 5543              		.data
 5544              		.align 8
 5547              	key:
 5548 0018 00000000 		.quad	.LC178
 5548      00000000 
 5549              		.section	.rodata.cst8,"aM",@progbits,8
 5550              		.align 8
 5551              	.LC4:
 5552 0000 00000000 		.long	0
 5553 0004 80842E41 		.long	1093567616
 5554              		.align 8
 5555              	.LC5:
 5556 0008 00000000 		.long	0
 5557 000c 00003041 		.long	1093664768
 5558              		.section	.rodata.cst16,"aM",@progbits,16
 5559              		.align 16
 5560              	.LC23:
 5561 0000 30       		.byte	48
 5562 0001 30       		.byte	48
 5563 0002 30       		.byte	48
 5564 0003 30       		.byte	48
 5565 0004 30       		.byte	48
 5566 0005 30       		.byte	48
 5567 0006 30       		.byte	48
 5568 0007 30       		.byte	48
 5569 0008 30       		.byte	48
 5570 0009 30       		.byte	48
 5571 000a 30       		.byte	48
 5572 000b 30       		.byte	48
 5573 000c 30       		.byte	48
 5574 000d 30       		.byte	48
 5575 000e 30       		.byte	48
 5576 000f 30       		.byte	48
 5577              		.align 16
 5578              	.LC24:
 5579 0010 01       		.byte	1
 5580 0011 01       		.byte	1
 5581 0012 01       		.byte	1
 5582 0013 01       		.byte	1
 5583 0014 01       		.byte	1
 5584 0015 01       		.byte	1
 5585 0016 01       		.byte	1
 5586 0017 01       		.byte	1
 5587 0018 01       		.byte	1
 5588 0019 01       		.byte	1
 5589 001a 01       		.byte	1
 5590 001b 01       		.byte	1
 5591 001c 01       		.byte	1
 5592 001d 01       		.byte	1
 5593 001e 01       		.byte	1
 5594 001f 01       		.byte	1
 5595              		.align 16
 5596              	.LC27:
 5597 0020 31       		.byte	49
 5598 0021 31       		.byte	49
 5599 0022 31       		.byte	49
 5600 0023 31       		.byte	49
 5601 0024 31       		.byte	49
 5602 0025 31       		.byte	49
 5603 0026 31       		.byte	49
 5604 0027 31       		.byte	49
 5605 0028 31       		.byte	49
 5606 0029 31       		.byte	49
 5607 002a 31       		.byte	49
 5608 002b 31       		.byte	49
 5609 002c 31       		.byte	49
 5610 002d 31       		.byte	49
 5611 002e 31       		.byte	49
 5612 002f 31       		.byte	49
 5613              		.ident	"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609"
 5614              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccvBeeqp.s:9      .text.unlikely:0000000000000000 doWrite
     /tmp/ccvBeeqp.s:145    .text.unlikely:00000000000000ff parseLine
     /tmp/ccvBeeqp.s:5514   .bss:0000000000000008 ptr
                             .bss:0000000000000000 enableBenchmarking
     /tmp/ccvBeeqp.s:5497   .rodata:00000000000000c0 errMessages
                            *COM*:0000000000000001 out
     /tmp/ccvBeeqp.s:966    .text:0000000000000000 read_table
     /tmp/ccvBeeqp.s:1067   .text:00000000000000b0 boolToHex
     /tmp/ccvBeeqp.s:5408   .data:0000000000000000 mm
     /tmp/ccvBeeqp.s:1153   .text:0000000000000170 get_coordinate
     /tmp/ccvBeeqp.s:1239   .text:0000000000000210 func
     /tmp/ccvBeeqp.s:1486   .text:00000000000004f0 xor
     /tmp/ccvBeeqp.s:1507   .text:0000000000000500 and
     /tmp/ccvBeeqp.s:1535   .text:0000000000000520 decrypt
     /tmp/ccvBeeqp.s:2303   .text:0000000000000f40 encrypt
     /tmp/ccvBeeqp.s:2941   .text:00000000000017c0 read_byte
     /tmp/ccvBeeqp.s:3021   .text:0000000000001870 write_4byte_to_board
     /tmp/ccvBeeqp.s:5547   .data:0000000000000018 key
     /tmp/ccvBeeqp.s:3253   .text:0000000000001b20 read_4byte_from_fpga
     /tmp/ccvBeeqp.s:3523   .text:0000000000001dc0 receive_ack
     /tmp/ccvBeeqp.s:5535   .data:0000000000000010 ack1
     /tmp/ccvBeeqp.s:3813   .text:00000000000020a0 send_ack
     /tmp/ccvBeeqp.s:5524   .data:0000000000000008 ack2
     /tmp/ccvBeeqp.s:3932   .text:00000000000021d0 wtt
     /tmp/ccvBeeqp.s:4277   .text.startup:0000000000000000 main
     /tmp/ccvBeeqp.s:5445   .rodata:0000000000000000 nibbles
                            *COM*:0000000000000064 line1
     /tmp/ccvBeeqp.s:5560   .rodata.cst16:0000000000000000 .LC23
     /tmp/ccvBeeqp.s:5578   .rodata.cst16:0000000000000010 .LC24
     /tmp/ccvBeeqp.s:5596   .rodata.cst16:0000000000000020 .LC27
     /tmp/ccvBeeqp.s:5551   .rodata.cst8:0000000000000000 .LC4
     /tmp/ccvBeeqp.s:5555   .rodata.cst8:0000000000000008 .LC5

UNDEFINED SYMBOLS
fread
flWriteChannelAsync
errPrefix
flAwaitAsyncWrites
__stack_chk_fail
bufInitialise
__errno_location
strtoul
malloc
strncpy
fopen
free
gettimeofday
flReadChannelAsyncSubmit
flReadChannelAsyncAwait
fwrite
__printf_chk
fclose
flWriteChannel
flSelectConduit
dump
bufDestroy
stderr
__fprintf_chk
bufAppendConst
flReadChannel
_IO_getc
calloc
usleep
arg_str0
arg_str1
arg_uint0
arg_lit0
arg_end
arg_nullcheck
flClose
flFreeError
arg_parse
stdout
arg_print_syntax
arg_print_glossary
arg_print_errors
flInitialise
flOpen
flLoadCustomFirmware
flSleep
fflush
flIsDeviceAvailable
flGetFirmwareVersion
flGetFirmwareID
flFlashStandardFirmware
flIsNeroCapable
flIsCommCapable
jtagScanChain
flLoadStandardFirmware
flFlashCustomFirmware
sleep
flIsFPGARunning
flResetToggle
flMultiBitPortAccess
__sprintf_chk
flSaveFirmware
flProgram
readline
add_history
sigRegisterHandler
sigIsRaised
